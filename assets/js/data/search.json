[ { "title": "🌱 잔디", "url": "/posts/DayStone-230313/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-03-13 04:41:00 +0900", "snippet": "🗿 잔디버축대,카오닝스타즈 팀에 맵 제작자로 참여했다.잔디는 돚거하고 있었는데,어제는 경기라서 방송 챙겨봤다.근데 너무 재밌었다.저번이랑 똑같다.좀 더 내가 하는 일을 좋아할 걸.좀 더 열심히 할 걸.하는 아쉬움이 있다.무튼..재밌었다.열심히 해야겠다.간바루조이 !🗿 토익학교 프로그램으로 받은 토익 강의가 어제 12일까지였다.그동안 또 안보고 미뤘어가지고,급하게 챙겨봤다.LC는 어느정도 보긴 했는데,RC는 하나도 못 봤다.RC는 따로 사서 보든지 해야겠다.영어도 열심히 해야겠다.간바루조이 !🗿 작업작업도 열심히 해야겠다.행복할 수 있는 방법이 바로 앞에 있는데눈 감고 힘들어하는 것 같다.그 눈을 떠내가 하는 일을 좋아하자🗿 병목 현상말 그대로 병의 목.영어로도 Bottleneck.내용물이 들어있는 병을 뒤집으면내용물이 콸콸 빠져나오지 못하고,공기가 병 안쪽으로 들어가는 타이밍에 딜레이가 생기는 것그것에 비유한 것이 병목 현상..병의 목이었다니..전혀 눈치 못채고 있었다..!" }, { "title": "🌱 헬 테이커 댄스", "url": "/posts/DayStone-230311/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-03-11 22:08:00 +0900", "snippet": "🗿 헬 테이커 댄스 블렌더로 모션만들고,유니티에서 모델 적용 및 녹화재밌다." }, { "title": "⛏️ 해킹과 대응 기술 과목", "url": "/posts/U-Hacking-And-Response/", "categories": "⛏️Memo", "tags": "", "date": "2023-03-09 15:01:00 +0900", "snippet": "VMWare 환경에서 Kali-1 Kali-2, 두 개 혹은 하나Windows XP 7 업데이트 안된 환경 설치XSS CSRPXSS SSRFCSS XSS교재 251 337실상이 교재 내용과 다를 수 있음 =&amp;gt; 검색그 내용을 보고서에수업 참여 보고서 - A4 필기구9 ~ 12번실습 결과 보고서3 ~ 5번최종공격화면=실습최종결과화면" }, { "title": "⛏️ 소프트웨어 공학 - 캡스톤 디자인 과목", "url": "/posts/U-SW-Engineering/", "categories": "⛏️Memo", "tags": "", "date": "2023-03-09 14:59:00 +0900", "snippet": "아.교수님께서저번 강의 평가가 안좋아서멘탈이 나갔다고 하신다원래 학점 다 + 주던걸 이제 FM대로 한다고 하신다아. 전문적 소프트웨어 개발 소프트웨어 공학은 무엇인가 소프트웨어 공학 윤리 소프트웨어 공학에 영향을 미치는 윤리적 이슈에 대한 간단한 소개 사례 연구 책 전반에 걸쳐 사용하는 예제 프로와 아마추어, 돈을 받느냐 안받느냐과학과 공학, 이론과 응용공학은 사람을 위한?교수님께서는 두산 프로 야구팀을 좋아하신다.이승엽? 이라는 분이 이번에 감독이 되었다고 하는데별로 좋아하시지 않는다고 한다.왜 와이우리나라의 뛰어난 타자인 것은 분명하나성격이 마음에 들지 않는다고 한다.왜 와이선수 시절 사인을 안해줬다고 한다.본능적으로 별로라고 생각하셨다고 한다.같은 이유로 류현진 선수도 별로 좋아하시지 않는다고 한다.소프트웨어 공학에서,소프트웨어는,단지 프로그램 (코드) 뿐만 아니라,프로그램들과 관련된 기타문서들도 포함한 것을 말한다.일반 Generic 제품, 일반 고객 - 오픈 마켓모르는 니즈를 고민제품 명세서 Specification 개발자가 결정맞춤식 Customized 제품, 특정 고객주어진 니즈에 맞게제품 명세서 고객이 결정좋은 소프트웨어의 필수적 특성 수용성 Acceptability 설계 목적에 부합하는 사용자 유형이 수용할 수 있어야 사용자의 이해 가능, 사용 쉬운, 사용자의 기타 도구와 호환 확실성 Dependability 과 보안 Security 신뢰성, 보안, 안전성 고장나더라도 물리적, 경제적 피해를 야기 X 보안을 통해 악의적 사용자가 시스템에 접근하거나 피해를 주지 않도록 효율성 Efficiency 메모리, 프로세서 사이클과 같은 시스템 자원 낭비해서 사용 X 즉 - 효율성 = 응답성, 처리 시간, 자원 활용 유지보수성 Maintainability 고객들의 변화하는 요구를 충족시킬 수 있도록 진화하도록 소프트웨어 변경은 필연적 (결함, 환경 변화 적응), 매우 중요 I.E. 코로나로 인해, 기존에 있던 학교 동영상 강의 사이트에 실시간 온라인 강의를 추가 / 수강신청이 휴대폰에서도, 그 중에서도 또 여러 기기 기종을 지원하도록 중요한 이유개인/사회가 발전된 소프트웨어 시스템에 더욱 의존=&amp;gt; 경제적으로 신속하고 안정적이고 신뢰할 수 있는 시스템을 생산할 필요주먹구구식보다 소프트웨어 공학 방법과 기술이 비용이 적게 소모대부분의 시스템에서 발생하는 비용이 유지보수지난 강의 평가가 교수님의 깊은 트리거가 되신 듯하다괜히 불똥이 튄다. 으악소프트웨어 프로세스 활동명세화 Specification개발 Development검증 Validation진화 Evolution소프트웨어 영향을 미치는 문제이질성 Heterogeneity비즈니스와 사회적 변화보안과 신뢰규모" }, { "title": "⛏️ 클라우드 컴퓨팅 과목", "url": "/posts/U-Cloud-Computing/", "categories": "⛏️Memo", "tags": "", "date": "2023-03-09 14:55:00 +0900", "snippet": "On-Premise VS 클라우드자체 시스템이용모델배치 IAAS SAAS pAAs XAAS컴퓨팅의 발전클라우드 컴퓨팅은 제품에서 서비스로의 전환Innovation혁신Product제품Service서비스I.E.전기의 발견New Disruptive전기 기계Buy Maintain전기 서비스Electric Grid, pay for what you useUtility ComputingCloudDataCenter 하드웨어와 소프트웨어 공급업체들이 컴퓨팅 자원과 서비스를 제공하기 위하여 사용공급업체 CSP데이터센터 물있는 곳에 수냉웹 기반 콘솔을 통해컴퓨팅 자원 : 컴퓨트 ComputeEC2 Elastic Compute Cloud 가 대표적응용 요구에 따라 1개의 서버로ㅜ터 대형 서버 클러스터 까지 제공이 가능스토리지 자원 : 스토리지 StorageS3 Simple Storage Service 와 EBS Elastic ~클라우드즉시성 유연성 확장성 가용성 보안성컴퓨팅~Nist클라우드 모델의 구성 *. 5 클라우드 컴퓨팅 특징 On-Demand Self-Service : 주문형 셀프서비스 Broad Network Access : 광대역 네트워크 접근 Resource Pooling 리소스 풀링 Rapid Elasticity : 빠른 탄력성 Measured Service : 측정 가능한 서비스 3 서비스 모델 SaaS SW as a Service : 서비스 개념의 소프트웨어 PaaS Platform as a Service : 서비스 개념의 플랫폼 #DEV Platform? IaaS Infrastructure as a Service : 서비스 개념의 인프라 #HW 종합 CSP Cloud Service Provider 는 대부분 세 가지 서비스 모델 지원 4 배포 모델 Deployment Model Private Cloud (개인 혹은 기업만 사용하는) Community Cloud (학생, 의사 등 업무 특성(수준과 전문성)에 초점을 맞춘) Public Cloud (CSP Like AWS, AZURE) Hybrid Cloud (섞어 쓰는, i.e. 일부는 Public에, 중요한 데이터는 Private에) Public 버스Private 승용차_열쇠Hybrid 택시Scaling in/out서버 개수?Scaling up/down서버 성능?구름 안에 {응용 프로그램, 플랫폼, 기반시설}, 밖에 각종 PC 클라우드 컴퓨팅 개념도 웹 브라우저나 클라우드 클라이언트 SW 접속 이용 확장 가능하고 측정된 정보기술 자원을 원격으로 프로비저닝 프로비저닝 Provisioning IT 자원 요구시 실시간 형태 RealTime 로 사용 가능한 상태로 준비 밖 PC가 구름 안에 있는 걸 선택해서 사용하는 인터넷 안에 컴퓨터다. 사용자의 컴퓨터가 인터넷 내부에 존재 인터넷 연결 가능한 최소 사양의 디스플레이 장치만 필요 스타디아 같은 거~. 유틸리티 컴퓨팅 Utility Computing 전기 가스 수도 등 유틸리티와 유사 가정이나 직장에 컴퓨터를 두지 않음 통신회선을 이용하여 접속 데이터 센터에서 제공 컴퓨터 기능 컴퓨팅 Computing Utility 검색엔진 Mail Service SMS Service SNS 클라우드 컴퓨팅의 본질= 서비스 프로비저닝 형태그리드 컴퓨팅AI Like 알파고웹 하드?" }, { "title": "⛏️ 운영 체제 과목", "url": "/posts/U-OS/", "categories": "⛏️Memo", "tags": "", "date": "2023-03-09 14:53:00 +0900", "snippet": "책 안샀다 시스템SW 응용SW 작성/운용에 도움을 줄 수 있는, 사용자에게 편리성 제공, 시스템(컴퓨터)에 종속적인 경우가 많음(하드웨어나 다른 시스템 소프트웨어와 접속)(윈도우즈의 경우 창 단위 그래픽), 편집기/IDE, 어셈블리, 컴파일러, 운영체제 등 응용SW 사용자 개인(회사) 각각의 문제 해결을 위해 SW vs Program SW는 좀 더 총체적인 Program은 좀 더 구체적인 운영체제 Operating System 컴터를 운영하기 위한 수법과 절차를 모은 SW 체계 컴퓨터를 조정 운전하는 SW 필요성 컴퓨터의 기본적인 처리 과정 고찰 IPO Input-Process-Output 만약 마우스,키보드,모니터,프린터 등 기본적인 입출력 방법을 운영체제가 제공하지 않는다면 키마 VS 콘솔 주요 목적 기능 편리성 추구 사용자와 하드웨어 사이의 중계/기교 역할 담당 #인터페이스 역할 사용자들이 컴퓨터를 편리하게 사용할 수 있도록 도움을 줌 (사용자 화면) 효율성 추구 컴퓨터에 설치된 자원들을 효율적으로 사용할 수 있도록 관리하는 자원 관리 역할 #작업관리자 열어보면 수백개의 프로그램 프로세스가 실행 중 #CPU와 메모리를 어떻게 관리 분배 값비싼 컴퓨터의 처리량을 향상시킴으로써 투자 효율 증대 (시스템측면) 보안성 추구 컴퓨터의 내부 자원HW와 사용자 정보DATA를 보호하는 역할 담당 컴퓨터와 사용자를 보호함으로써 지속적 운용 유지(사용자 &amp;amp; 컴퓨터 동시 만족) 실체 및 활동 하나의 거대한 프로그램 사용자에게 서비스(프로그램 적재-실행(입력/계산/출력)-프로그램 제거)를 제공하기 위한 목적으로 메모리에 상주 부트 과정을 거쳐 메모리에 설치됨 운영체제 접촉 사용자들은 시스템 콜 System Call 이라 부르는 서비스 요청 접속 창구를 통해 서비스를 요청하고 결과를 되돌려 받음 (Operating System Interface) 시스템 콜은 함수 (라이브러리) 형태로 제공되고, 사용자는 프로그램에서 호출하여 사용 #printf, mkdir -&amp;gt; 프로그램이 모니터에 띄우는 게/디렉토리를 만드는 게 아니라, 이를 운영체제에 요청/부탁하고 = 시스템 콜 System Call, 운영체제가 모니터에 띄움/디렉토리를 만듬 -&amp;gt; 다시 호출된 곳으로 복귀 #이 외에도 눈에 띄지 않는 운영체제 처리 들이 많음 #atoi는 그냥 함수, 근데 printf은 운영체제로, 생긴 것 똑같은 데 처리 과정은 다를 수 있다 #Win32API - C, MFC - CPP, 시스템 프로그래머 (시스템) 명령어 #에 대한 이해 #명령어는 결국 프로그램이다 = 운영체제에게 부탁하는 프로그램이다 자주 사용되는 시스템콜을 매번 프로그램을 작성하여 서비스를 받아야 한다면 불편 예) 디렉토리 생성삭제, 파일 생성삭제 위와 같이 자주 사용되는 시스템 콜을 위해 미리 작성되어 있는 프로그램(#실행파일)을 시스템 명령어라 함 유닉스/리눅스의 mkdir, rmdir, rm, vi 윈도우 도스창의 del, ren, mkdir, rmdir 단일 프로그래밍 일괄처리 시스템, Single-stream(줄기가 하나) Batch(바구니, 뭉탱이 한 번에) Processing Systems 오직 하나의 프로그램만을 적재하여 실행 #공장처럼 하나 처리 후 다름 #HDD가 없었기에 펀치카드 다발을 통해 프로그램 자체를 올림 #펀치카드 한 장 = 한 문장 처리 중인 프로그램이 입출력 서비스를 요청했다면? #다른 일을 처리하지 못하고 계속해서 대기해야 함 =&amp;gt; CPU 효율, Utilization 이용률, Through-put 단위 시간 당 처리량 펀치카드 다발 (프로그램)|카드 리더기|Main Memory{ User Program – Operating System} 다중 프로그래밍 일괄처리 시스템 Multiprogramming Batch Processing Systems 메모리를 조각하여, 여러 개의 프로그램을 적재하여 실행 #멀티 스트림, 근데 대신 멀티 프로그래밍이라는 용어를 쓴다 처리 중이던 하나의 프로그램이 입출력 서비스를 요청했다면? #기본적으로는 처리 끝나거나, 입출력을 시작할 때까지 하나의 프로그램 처리 자기 프로그램이 언제 끝날지 예측 불가 다른 프로그램이 더 느리다면 그만큼 더 느리게 펀치카드 다발 (프로그램)| | |카드 리더기| | |Main Memory{ User Program 2 User Program 1 User Program 0 – Operating System} 시분할 시스템 Time-Sharing Systems 여러 개의 프로그램을 적재하여 실행하되 짧은 시간 동안의 주기로 모든 프로그램을 골고루 조금씩 처리 한 번에 주어지는 최대 처리 시간을 타임 퀀텀 Time Quantom 혹은 타임 슬라이스 Time Slice 다중 사용자들의 대화적 처리 Interactive Processing 환경에 적합 병렬 처리 Parallel Processing System 다중처리기 시스템 Multi Processor System 처리기 CPU 를 여러 개 장착한 시스템 #왜 CPU가 아니라 Processor #Processor - CPU FPU GPU 일반화 #여기선 CPU를 의미 처리기 수 만큼의 프로그램들이 병렬로 처리될 수 있음 처리기 일부가 고장나더라도 나머지 처리기들로 기능유지 가능 결함 허용 컴퓨터 Fault Tolerant Computer 성능 Throughput 과 신뢰성 Reliability 향상 #성능 - CPU를 여러 개 장착하는 주된 이유 병렬 처리 Parallel Processing 와 병행 처리 Concurrent Processing 병렬 처리는 어떤 시각을 기준에서 여러 개의 프로그램을 처리 병행 처리는 어떤 시각을 기준에서 오직 한 개의 프로그램을 처리하나, 번갈아 처리함으로써 전체적(거시적)으로 여러 개의 프로그램을 처리하는 효과를 얻음 넓은 의미에서 분산 Distributed 처리 시스템의 일종 일반적으로 여러 독립된 시스템을 네트워크로 연결 시스템 하나에 처리하는 놈을 여러 개 두는 : 간결화 시스템 : 버스로 연결, Tightly-Coupled 시스템을 독립시켜놓고 네트워크로 연결하여 분단 처리 : 약결합 시스템 Loosely Coupled 병렬 처리 대칭형과 비대칭형 다중 처리기 시스템 대칭형 다중 처리기 시스템 SMP Symmetric Multi-Processor System 처리기들의 역할 범위가 동등, 즉 마스터-슬레이브 개념 없음 어느 처리기나 사용자 영역과 시스템 영역 실행 가능 운영체제에 부담 동시에 시스템 영역을 사용하면 경쟁 상태 발생 가능 처리기 하나가 고장나도 작동 비대칭형 다중 처리기 시스템 ANP Asymmetric 마스터 처리기와 슬레이브 처리기 지정 시스템 영역은 마스터 처리기만 실행 가능 마스터 처리기가 고장나면 시스템 전체 스톱 운영체제 부담, 구현 난이도 감소 마스터 고장나면 대책이 없다 처리기들 간 버스 연결 방식 (강결합 시스템) 단일 공유 버스 Single Shared Bus 시스템 전체적으로 하나의 버스를 두고 처리기들이 경쟁하여 사용 배타적으로, 하나가 버스를 쓰고 있다면 (데이터를 주고 받고 있다면), 다른 하나가 버스를 사용할 수 없다 (데이터가 깨지니까) 처리기를 너무 많이 탑재하면 성능이 오히려 저하 CPU를 여러 개 꽂아도, 대기 시간이 존재하기에 성능 향상이 점점 줄어든다 멀티 코어 처리기는 처리기들을 하나의 칩으로 통합하여 버스 경쟁, 캐시 정책, 전력 소모 등을 최적화 다중 버스 Multiple Bus 버스를 여러 개 두고 버스 경쟁률을 완화 메모리를 버스 개수 만큼 나눈다 은행 창구처럼, 톨 게이트처럼, 하나의 버스가 사용중이면 다른 버스로 메모리에 접근 크로스 바 스위치 버스 Crossbar Switch Bus 메모리를 여러 개의 모듈 (뱅크)로 분리 모든 처리기와 메모리 모듈 사이에 독립적인 버스 경로 가능 버스 경쟁으로 인한 성능 저하 최소화 같은 버스 수로 다중 버스의 효과를 내면서 같은 메모리 뱅크를 사용하지 않는 한 대기 시간이 있기는 있음 계층적 버스 Hierarchical Bus 처리기별로 로 접근컬 메모리, 로컬 디바이스, 로컬 버스를 두고, 대부분로컬 버스로 처리 시스템 메모리 접근이 필요한 경우에만 브릿지 컴포넌트를 통해 시스템버스를 사용 글로벌 메모리에 있는 변수 접근 시 대기 시간 소프트웨어 적으로도 (컴파일러) 여러 기능 필요 시스템 메모리로의 주소 바인딩 다중 포트 메모리 Multi Port Memory 메모리에 접근 포트를 여러 개 두고 각각 독립적으로 경로 가능, 접근 가능 각 처리기 별로로 독립된 버스를 분리된 메모리 포트에 연결하여 각각의 병렬 접근을 허용 보통 듀얼 포트 비디오 RAM (VRAM)이 대표적 사례 CPU 각 픽셀의 색 설정 GPU 각 픽셀을 모니터에 출력 메모리 버스를 가지고 경쟁, 하나가 느리면 병목 현상, 끊어보인다던지 그래서 메모리도 크고, 다중 포트 #메모리는 여러 종류 #메인 메모리, 비디오 메모리 등 분산 처리 (약결합) 시스템 여러 개의 독립된 시스템을 네트워크로 연결 주어진 일을 분담하여 병렬 처리 다중 처리기 시스템도 넓은 의미에서 분산처리 시스템 -&amp;gt; 강결합 시스ㅡ템 보통은 약결합 시스템 혹은 클러스터라고 함 분산 처리 시스템의 목적 처리량 향상, 자원 활용도 향상, 시스템 신뢰도 향상, 점진적 시스템 확장 분산 처리 시스템의 제공 기능 위치 투명성(분리 된 것이 아니라 우리, 하나로 보이게), 고장 투명성(고장나도 모르고), 접근 투명성(차이가 있어서는 안된다), 중복 및 이동 투명성(중복이어도, 시스템 A에서 B로 옮겨지더라도 사용자가 모르고 쓸 수 있게) 분산 처리 시스템의 연결 방식 하이퍼큐브 Hyper Cube 하이퍼 큐브 연결방식이 대표적 8 노드 (시스템)인 경우 각 노드는 3개의 인접 노드를 가짐 16노드인 경우 각 노드는 4개의 인접 노드를 가짐 완전 연결 Fully Connected 초기 설치 비용이 큼 사이트 확장 비용이 큼 사이트 간 통신 속도가 빠름 선로 고장에 따른 신뢰도가 높음 성형 Star 초기 설치 비용 적음 가운데 중계 시스템 의 부하과대 중계 시스템의 고장에 따른 신뢰도 저하 사이트 추가 비용이 적음 링형 Ring 완전 연결가 성형의 절출 초기 설치와 사이트 확장 비용이 비교적 저렴 두 개 이상의 사이트 고장은 네트워크 양분 NOS" }, { "title": "⛏️ 데이터 베이스 설계 과목", "url": "/posts/U-DB/", "categories": "⛏️Memo", "tags": "", "date": "2023-03-09 13:39:00 +0900", "snippet": "엔터프라이즈?포탈?데이터베이스 : 단순 데이터 저장, 저장물, 데이터 집합체데이터베이스 시스템 : 데이터 저장 과정/체계, 데이터베이스 생산 공장아웃라인을 보자파일 시스템과 DBMS의 차이데이터베이스 시스템의 컴포넌트들사람,이 DBMS,로 데이터,를 데이터 베이스,로데이터 : 가공이 안된 유무형의 SMT 관찰의 결과로 나타난 정량적(크기가 존재) 혹은 정성적인(값으로 측정되지 않는 : 잘한다, 못한다) 실제 값 사실(facts, 정성적)이나 값(values: 수치(숫자), 스트링 etc., 정량적)정보 : 가공된 데이터 데이터에 의미를 부여한 것 의사결정을 할 수 있게 하는 데이터의 해석이나 데이터 상호간의 관계지식 : 정보를 활용하여 사물이나 현상에 대한 이해과목에서는 정보까지 다룬다데이터와 정보단순 숫자 3개를 그냥 볼 때와 3사이즈라는 것을 알고 볼 때의 차이주의나열된 이름도 데이터, ~ 사람 리스트 같이 무언가 의미가 있어야 정보데이터(의미X) != 정보P(D) = IP = DBS정보처리, 자료처리 : 정보추출방법데이터베이스 :조직에 필요한 정보를 얻기 위해 논리적으로 연관된 데이터를 모아 구조적으로 통합해 놓은 것데이터베이스 시스템데이터의 검색과 변경 작업을 주로 수행함 변경(Modification)시간에 따라 변하는 데이터 값을 데이터베이스에 반영하기 위해 수행삽입, 삭제, 수정 등의 작업을 말함구축이 쉬움 공룡 데이터베이스 검색이 많지 않아 데이터베이스를 구축할 필요 없음 보존가치가 있는 경우에 구축 도서 사용자 수 보통 검색은 많지만 데이터에 대한 변경은 적음 비행기 예약 예약 변경/취소 등 데이터 변경은 많지만 검색은 적음 실시간 검색 및 변경이 중요함 증권 사용자 수 많음 검색도 많고 거래로 인한 변경도 많음 구축이 어려움데이터베이스한 조직(enterprise)의 여러 응용 시스템들이공용(shared)하기 위해통합(integrated), 저장(stored)한운영 데이터(operational data)의 집합 통합된 데이터(integrated data) 데이터를 통합하는 개념 사용하는 데이터의 중복을 최소화(minimal redundancy) 왜 와이 최소화 : 중복으로 인한 데이터 불일치 현상을 없앰(controlled redundancy) 저장된 데이터(stored data) 문서로 보관된 데이터가 아님 디스크, 테이프 같은 컴퓨터 저장장치에 저장된 데이터 운영 데이터(operational data) 조직의 목적을 위해 사용되는 데이터 업무를 위한 검색을 할 목적으로 저장된 데이터 공용 데이터(shared data) 한 사람 또는 한 업무를 위해 사용되는 데이터가 아니라 공동으로 사용되는 데이터 업무 담당자 A가 학사업무 수행업무 담당자 B가 등록업무 수행업무 담당자 C가 수강업무 수행각각 다른 데이터를 쓸 수도 있지만,공통 데이터 (I.E. 학생 데이터)를 쓸 수도 있다응용 프로그램이 공통 데이터(파일)를 각자 가지고 있는 것이기존 파일 시스템의 특징이런 공통 데이터를 통합 Integrate 해서 하나로 정리하는 것이데이터 베이스 설계최종적으로 응용프로그램에서 DBMS를 통해 통합 DB의 데이터에 접근데이터 베이스= 운영 데이터를 통합하여 저장하며 공용으로 사용됨데이터 베이스의 특징* 실시간 접근성 (Realtime Accessibility) 실시간 서비스 사용자가 데이터를 요청하면 수 초내에 결과를 서비스함 계속적인 변화 (Continuous Change) DB에 저장된 내용은 어느 한 순간의 상태 데이터 값은 시간에 따라 항상 바뀜 : 동적(dynamic) 특성 DB는 CRUD를 통하여 바뀐 데이터 값을 저장함 동시 공유 (Concurrent Sharing) DB는 서로 다른 업무 또는 여러 사용자에게 동시에 공유됨 동시(Concurrent)는 병행이라고도 하며, 데이터베이스에 접근하는 프로그램이 여러 개 있다는 의미 내용에 따른 참조 (Reference By Content) DB에 저장된 데이터는 데이터의 물리적인 위치가 아니라 데이터 값에 따라 참조됨 #KeyValue 같이 #주소 참조가 아니라 DB 시스템의 구성 DBA (DB Agent, DB 사용자) 일반 사용자 응용 프로그래머 SQL 사용자 관리자 DB 시스템 DB - 데이터를 모아둔 토대 DBMS - 사용자와 DB를 연결시켜주는 SW 데이터 모델 - 데이터가 저장되는 기법에 관한 내용, DBMS의 청사진 DB 시스템의 발전 마당 서점과 DB 시스템 1970년대 : 마당 서점의 시작 (마당서점 초기) 정보 기술 : 컴퓨터 없음 특징 사장이 모든 도서의 제목과 가격을 기억 매출과 판매가 컴퓨터 없이 관리됨 매출에 대한 내용이 정확하지 않음 도서 : 100권 고객 : 근처 학교의 학생, 지역 주민 고객 서비스 : 사장이 직접 도서 안내 업무 : 회계업부 (계산기 사용), 장부에 기록 1980년대 : 컴퓨터의 도입 (마당서점 전산화) 정보 기술 : 컴퓨터 특징 컴퓨터를 이용한 초기 응용 프로그램으로 업무 처리 파일 시스템 사용 한 대의 컴퓨터에서만 판매 및 매출 관리 도서 : 1,000권 고객 : 근처 학교의 학생, 지역 주민 고객 서비스 : 컴퓨터를 이용하여 도서 검색, 직원 고용 업무 : 회계업부 (컴퓨터 사용), 파일 시스템 1990년대 : 지점 개설 및 DB 구축 (마당서점 DBMS 도입) 정보 기술 : 컴퓨터 + 원격 통신 특징 지점 간 클라이언트/서버 시스템을 도입하여 업무 처리 데이터베이스 관리 시스템 (DBMS)을 도입 도서 : 10,000권 고객 : 서울 지역 고객 고객 서비스 : 클라이언트/서버 시스템으로 지점 연결하여 도서 검색 서비스 제공 업무 : 회계업부 (컴퓨터 사용), DB 시스템 2000년대 : 홈페이지 구축 (마당서점 인터넷 서비스 실시) 정보 기술 : 컴퓨터 + 인터넷 특징 인터넷을 이용하여 도서 검색 및 주문 웹 DB 시스템으로 불특정 다수 고객 유치 고객이 지리적으로 넚게 분산됨 도서 : 100,000권 고객 : 국민 (전국으로 배송) 고객 서비스 : 인터넷으로 도서 검색 및 주문 업무 : 회계/인사업부 (컴퓨터와 인터넷 사용), 웹 DB 시스템으로 지점 연계 2010년대 : 인터넷 쇼핑몰 운영 (마당서점 인터넷 쇼핑몰 운영) 정보 기술 : 컴퓨터 + 인터넷 특징 도서뿐만 아니라 음반, 악세서리, 문구, 공연 티켓까지 판매하는 인터넷 쇼핑몰로 확대 도서 외 상품의 매출 비중이 50% 이상으로 늘어남 도서 : 1,000,000권 고객 : 국민 (전국으로 배송) 고객 서비스 : 인터넷으로 종합 쇼핑 서비스 제공 업무 : 회계/인사업부 (컴퓨터와 인터넷 사용), DB 서버 여러 개 구축 정보 시스템의 발전 파일 시스템 데이터를 파일 단위로 파일 서버에 저장 각 컴퓨터는 LAN을 통하여 파일 서버에 연결 파일 서버에 저장된 데이터를 사용 응용 프로그램에서 열기/닫기 Open/Close를 요청 각 응용 프로그램이 독립적으로 파일을 다룸 데이터가 중복 저장될 가능성이 있음 동시에 파일을 다룸 데이터의 일관성이 훼손될 수 있음 데이터베이스 시스템 DBMS를 도입하여 데이터를 통합 관리하는 시스템 클라이언트 - 서버 모델 서버 Server DBMS가 설치되어 데이터를 가진 쪽 클라이언트 Client 외부에서 데이터 요청하는 쪽 DBMS 서버 파일을 다루며 데이터의 일관성 유지, 복구, 동시 접근 제어 등의 기능을 수행 데이터의 중복을 줄이고 표준화하며 무결성을 유지 웹 DB 시스템 DB를 웹 브라우저에게 사용할 수 있도록 서비스 불특정 다수 고객을 상대 온라인 상거래나 공공 민원 서비스 등에 사용됨 클라이언트 -&amp;gt; 서버 { Apache -&amp;gt; PHP (PHP 해석기) = WAS -&amp;gt; MySQL } -&amp;gt; 데이터 베이스 분산 DB 시스템 데이터가 여러 위치에 저장된 데이터베이스 대규모의 응용 시스템에 사용됨 Distributed Database Types: two types Homogenous : A network of Identical Databases stored on multiple sites Heterogeneous : Different schemas, OS, DDBMS (Distributed ~), and different data models 정보 시스템 발전과 기업 업무 환경 변화 70년대 : 소매상 - 실체 시스템 정보시스템 없음, 수작업으로 회계 업무 80년대 : 소기업 - 파일 시스템 파일시스템 사용, 파일을 이용한 응용 프로그램으로 업무 처리 90년대 : 중견기업 - 데이터 베이스 정보시스템, DB 시스템 사용,, DBMS 이용 업무 처리,, 정보 공유, 실시간 서비스, LAN 기술 00년대 : 대기업 - 인터넷 통신 정보시스템, 웹 DB 시스템, 인터넷 사용,, 인터넷 쇼핑몰 개설 온라인 상거리,, 실시간 서비스, 웹 브라우저 기술 10년대 : 종합 그룹 - 인터넷 통신 정보시스템, 분산 DB 시스템, 인터넷 사용,, 고객 서비스 및 내부 업무 인터넷 처리,, 대규모 응용시스템에 사용 WAS Web Application Server IPO Input Process Output Host Language 일반 프로그래밍 언어에 SQL문을 사용하여 각 언어의 장점을 살림 = 삽입 프로그래밍 Embedded 파일 시스템과 DBMS I.E. 마당서점 데이터를 저장하는 방법 I.E. 마당서점 데이터의 저장 방법 비교 파일 시스템과 DBMS 비교 I.E. 마당서점 데이터를 저장하는 방법 데이터를 프로그램 내부에 저장하는 방법 Code에 데이터 정의 및 값 저장 데이터 추가/수정 시 (코드 수정, 컴파일) 파일 시스템을 이용하는 방법 Code에 데이터 정의, File에 값 저장 데이터 구조 수정 시 (코드 수정, 컴파일) 같은 파일을 두 개의 프로그램이 공유하는 것이 운영체제의 도움 없이 불가능 DBMS를 사용하는 방법 DBMS가 데이터 정의, DB에 값 저장 파일 시스템과 DBMS 비교 구분 파일 시스템 DBMS 데이터 중복 데이터를 파일 단위로 저장 = 중복 발생 DBMS를 이용하여 데이터를 공유 = 중복 가능성 낮음 데이터 일관성 데이터의 중복 저장 = 일관성 결여 중복 제거 = 데이터 일관성 유지 데이터 독립성 (데이터 정의와 프로그램) 유지 불가능 유지 가능 관리 기능 보통 데이터 복구, 보안, 동시성 제어, 데이터 관리 기능 등을 수행 프로그램 개발 생산성 나쁨 짧은 시간에 큰 프로그램을 개발할 수 있음 기타 장점 보통 데이터 무결성 유지, 데이터 표준 준수 용이 " }, { "title": "⛏️ Random", "url": "/posts/Random/", "categories": "⛏️Memo", "tags": "", "date": "2023-03-09 13:26:00 +0900", "snippet": "System.Random VS Unity.RandomTODO : 둘이 같은 시드에서 같은 값을 리턴하는 지 확인.System.Random 은 인스턴스를 만들어서 사용해야 하고,Unity.Random 은 Static 클래스Unity.Random 이 Static 클래스라 인스턴스화 할 필요 없이 바로 사용할 수도 있고,.Range, .value, .insideUnitCircle 등의 여러 기능들을 제공해준다는 장점이 있긴 하지만,한 실행에서 만들어진 한 시드의 랜덤를 모든 곳에서 공유하며 사용하는 것이기에,어떤 곳에서의 랜덤 코드가 다른 랜덤 코드에 영향을 줄 수 있다.매 발사마다 총알의 속도에 랜덤한 보정치를 주는 것이,추후 가챠에서 나올 아이템 등급에 영향을 줄 수 있다는 이야기.반면 System.Random은 인스턴스화 시킬 수가 있음으로, 독립적인 여러 개의 랜덤을 동시에 사용할 수 있다.또한 생성 시 임의의 시드를 설정할 수도 있다.물론 Unity.Random도 InitState함수를 통해 임의로 시드를 설정할 수 있지만,어쨌거나 인스턴스화 시킬 수는 없다.적절한 상황에 적절한 랜덤을 사용할 것참고게임 확률참고" }, { "title": "⛏️ Tuple", "url": "/posts/Tuple/", "categories": "⛏️Memo", "tags": "", "date": "2023-03-09 11:15:00 +0900", "snippet": "MS DOC 0MS DOC 0(int, int) t = (0, 1);// t.ToString();// Output: (0, 1)// t.GetHashCode();(double, int) t = (4.5, 3);// t.Item1, t.Item2(double Sum, int) t = (4.5, 3);// t.Sum(=Item1), t.Item2(double Sum, int Count) t = (4.5, 3);// t.Sum(=Item1), t.Count(=Item2)var t = (4.5, 3);// t.Item1, t.Item2var t = (Sum: 4.5, 3);// t.Sum(=Item1), t.Item2var t = (Sum: 4.5, Count: 3); // t.Sum(=Item1), t.Count(=Item2)(double Sum, int Count) t = (Sum: 4.5, Count: 3);// t.Sum, t.Count// CS8123 : 튜플 요소 이름 &#39;Sum&#39;은(는) 대상 형식 &#39;(double Sum, int Count)&#39;에서 다른 이름이 지정되었거나 이름이 지정되지 않았기 때문에 무시됩니다.var sum = 4.5;var count = 3;var t = (sum, count);Console.WriteLine($&quot;Sum of {t.count} elements is {t.sum}.&quot;);// Tuple Projection Initializer // Can&#39;t Projection : Tuple&#39;s Member Name(ToString, Rest, Item1, Item2...), Already Usedvar t = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10,11, 12, 13, 14, 15, 16, 17, 18,19, 20, 21, 22, 23, 24, 25, 26);// t.Item1 ~ t.Item26컴파일 시간에 필드 이름을 기본 이름으로 변경= 명시적 지정, 유추된 필드 이름 런타임 사용 불가능var xs = new[] { 4, 7, 9 };var limits = FindMinMax(xs);Console.WriteLine($&quot;Limits of [{string.Join(&quot; &quot;, xs)}] are {limits.min} and {limits.max}&quot;);// Output:// Limits of [4 7 9] are 4 and 9var ys = new[] { -9, 0, 67, 100 };var (minimum, maximum) = FindMinMax(ys);Console.WriteLine($&quot;Limits of [{string.Join(&quot; &quot;, ys)}] are {minimum} and {maximum}&quot;);// Output:// Limits of [-9 0 67 100] are -9 and 100(int min, int max) FindMinMax(int[] input){ if (input is null || input.Length == 0) { throw new ArgumentException(&quot;Cannot find minimum and maximum of a null or empty array.&quot;); } var min = int.MaxValue; var max = int.MinValue; foreach (var i in input) { if (i &amp;lt; min) { min = i; } if (i &amp;gt; max) { max = i; } } return (min, max);}// 할당 및 분해// 두 튜플 형식의 요소 수가 동일함// AND// 각 튜플 위치에서 오른쪽 튜플 요소의 형식이 해당하는 왼쪽 튜플 요소의 형식과 동일하거나 해당 형식으로 암시적으로 변환 가능함(int, double) t1 = (17, 3.14);(double First, double Second) t2 = (0.0, 1.0);t2 = t1;// t2.First, t2.Second(double A, double B) t3 = (2.0, 3.0);t3 = t2;// t3.A, t3.B// 필드 이름은 무시되고 할당되지 않음// XXX : t3.First, t3.Second// = 대입 연산자를 이용한 튜플 인스턴스 개별 변수 분해// 명시적 선언var t = (&quot;post office&quot;, 3.6);(string destination, double distance) = t;(string destination, var distance) = t;// 괄호밖 var (형식화된 변수를 암시적 선언, 컴파일러가 유추)var t = (&quot;post office&quot;, 3.6);var (destination, distance) = t;// 기존 변수 사용var destination = string.Empty;var distance = 0.0;var t = (&quot;post office&quot;, 3.6);(destination, distance) = t;// 혼합 // 삭제 (무시)var (_, _, _, a, _, b) = ~// 튜플 비교 Console.WriteLine((Display(1), Display(2)) == (Display(3), Display(4)));int Display(int s){ Console.WriteLine(s); return s;}// Output:// 1// 2// 3// 4// False// == 및 != 연산자는 단락(short-circuiting) 방식으로 튜플을 비교합니다. 즉, 같지 않은 요소 쌍을 충족하거나 튜플의 끝에 도달하는 즉시 연산이 중지됩니다. 그러나 다음 예제와 같이 비교하기 전에 ‘모든’ 튜플 요소가 평가됩니다.// Deconstruct var p = new Person(&quot;John&quot;, &quot;Quincy&quot;, &quot;Adams&quot;, &quot;Boston&quot;, &quot;MA&quot;);// Deconstruct the person object.var (fName, lName, city, state) = p;var (temp, _, _) = p;" }, { "title": "🌱 배 아파", "url": "/posts/DayStone-230309/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-03-09 10:33:00 +0900", "snippet": "🗿 배 아파아침부터 배가 아프다핫식스 먹긴 했다아.FPU - Floating Process UnitGPU - Graphic Process Unit" }, { "title": "🌱 정면", "url": "/posts/DayStone-230308/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-03-08 15:03:00 +0900", "snippet": "🗿 정면한 번 더 카린을 그렸다.근데 정면 그림만 그리는 것 같다.다음 그림은 정면 말구 다른 걸 그려야지.🗿 Head Scratcher롤 이스포츠 외국 해설 보다가Head Scratcher 라는 표현을 배웠다 Mind Blowing🗿 택배계란과자 1KG핫식수 48캔이어폰이 왔다.🗿 E1009 원모어 피스톤 피트 인이어 이어폰쿠팡에서 13,644원 주고 구매.갤럭시 폴드를 보지는 못했지만,대강 그 정도의 크기의 상자.구성품은ㅡ크게 중요한 내용은 없는 가이드북,여분의 이어캡,그리고 이어폰.뭔가 음질이라던지 입체 음향? 이라던지 좋은 것 같기는 한데이게 해골물인지, 편의점 이어폰 쓰다가 느끼는 역체감인지는 잘 모르겠다.무튼 스피커 쓰다가 다시 이어폰 쓸 수 있게 돼서 좋다." }, { "title": "🌱 나뭇가지", "url": "/posts/DayStone-230307/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-03-07 09:54:00 +0900", "snippet": "🗿 나뭇가지학교 공터 주변에큰 가지를 벤 나무들이 있는데,그 잘려나간 가지에서 새로운 작은 가지들이 뻗어나오고 있었다.인상 깊었다.🗿 하룻돌페르소나 노동소득 자본소득" }, { "title": "🌱 포토로그", "url": "/posts/DayStone-230305/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-03-05 07:49:00 +0900", "snippet": "🗿 포토로그전에 인터넷 돌아다니다가하루 한 장 사진과 함께 글을 적는포토로그 라는 걸 하는 블로그를 봤었다.재밌어보였다굳이 하루와 관련된 사진이 아니더라도뭔가 그 날만의 사진이나 그림을 같이 올리면 재밌을 것 같다.오늘은 그래서 그림을 그렸다🗿 카린" }, { "title": "🌱 범인 한자와 씨", "url": "/posts/DayStone-230304/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-03-04 09:34:00 +0900", "snippet": "🗿 범인 화자와 씨를 봤다.한 편에 10분인데, 오프닝 엔딩이 5분인 애니.짧아서 오히려 좋았다.오프닝이 아주 계속 보게 된다." }, { "title": "🌱 개강", "url": "/posts/DayStone-230302/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-03-02 00:00:00 +0900", "snippet": "🗿 개강개강이다.3학년인 나의 첫 날이다.어제는 자취방으로 짐을 옮겼다.얼마전에 산 32인치 모니터.. 커서 힘들었다.부모님께서 또 고생하셨다.올해부터는 동생도 대학에 들어가서, 짐을 두 번이나 같이 옮겨주셨다.지역 이마트에 가서 장도 봤다.든든하게 챙겨주셨다.오늘 아침엔 또 수강신청을 했다.신청정정기간인데, 꼴랑 5명 증원된 과목 2개를 모두 신청 성공했다.원래 계획했던 6과목 중 5과목은 채웠다.남은 한 과목은 증원을 안한다고 한다.오랜만에 학교에 갔다.오늘은 세 개의 수업이 있다.자취방에서 학교 가는 길.쌀쌀하다.여전히 참새는 많다.작년 초부터 하는 것 같은 지하 관 마감 처리가 아직또 끝나지 않았다.펴 바른 시멘트? 를 사람들이 지나가면서 밟은 흔적이 곳곳에 있다.나름의 영감을 줬던 큰 은행나무가 사라졌다.첫 수업을 기다린다.그런데 사람도 적고, 시간이 되었는데도 교수님이 오지 않는다.오늘 신청했던 과목이라 공지사항을 확인할 수가 없었다.기다리다가 자취방에 돌아가서11시에 갱신된 정보를 확인해 보니 저녁에 온라인 강의로 대체한다고 한다.기다렸던 수업 말고도, 다른 과목 하나도 마찬가지로 온라인 강의로 대체되었다.점심.오랜만에 비빔면을 먹었다.작년에 비빔면 한 박스를 샀었다.라면은 유통기한이 몇 년 되는 줄 알았는데,생각보다 짧았다.4월까지다.부지런히 먹어야겠다.두 번째 수업을 기다린다.그냥 OT 하고 끝났다.온라인 강의를 기다린다.보다가 졸아버렸다.두 번째 온라인 강의를 볼 때는 프로그래머스 0단계라도 풀었다.🗿 사이버펑크: 엣지러너를 다 봤다.재밌었는데, 새드 엔딩이라 그런지 뭔가 허무하기고,너무 빨리 끝난 느낌.좀 길었으면 좋았을 것 같다.고어하고 폭력적인 연출이 많았는데,보기 힘든 그런 느낌은 없었다.죠죠 같은 거 보면 어우 소리 나오는 장면들 몇몇 있는데,여긴 막 내장나오고 터지고 하는데도 그렇게 막.. 거부감은 없었다.오리지널이라 그런지 검열이 없는 것도 한 몫한 것 같다." }, { "title": "⛏️ 사람, 생명의 구분", "url": "/posts/Human/", "categories": "⛏️Memo", "tags": "", "date": "2023-02-24 06:00:00 +0900", "snippet": "💎 사람, 생명의 구분경계.세상 많은 경계들 중에 (사람, 생명)의 (경계, 정의)는 어떻게 되는가?나도 어렸을 때 부터 이런 생각을 하긴 했지만,처음 이에 대해 깊이 생각하게 된 것은,고등학교 확률과 통계 시간에 선생님께서 하셨던 말씀에서부터였다.선생님께서는 미분과 적분에 대해 이야기를 하시다가,순간이동에 관해서 말씀하신 적이 있었다.수학도 잘 못했고, 꽤 오래전이라 정확한 내용은 기억나지 않지만,선생님께서 하시려던 말씀은 그거였다.그게 사람이든 물건이든 뭐든,무언갈 순간이동 시키려고 한다면,마법 같은 건 없으니,순간이동 하고자 하는 객체를 미세하게 분해한 다음,이를 목적지에서 다시 조립해야 한다는 것.근데 다시 조립해 나가는 과정에서, 순간이동 하기 전과 다른 것이 있다, 그게 적분상수다.뭐..내가 무식해서 맞는 이야기인지는 모르겠는데 대충 이런 이야기였던 것 같다.무튼..중요한 건 적분상수가 아니다.저 말을 듣고 나는 생각했다.‘근데.. 저런 원리로 사람이 순간이동하게 된다면.. 순간이동 하기 전의 사람과 후의 사람은 다른 사람인 것 아닌가?’‘테세우스의 배’ 개념을 스스로 고민하게 된 것이다.저 ‘테세우스의 배’ 를 시작으로 여러 상황을 더 떠올렸었다.동일 비교 뿐만아니라, (사람, 생명)의 구분에 대해서도 생각했었다.결론은 모르겠다.난 아직 모르겠다.사람 A와, A를 분해하고 다시 조립한 상태의 B는 같은 사람인가?A 는 죽고, B 는 태어난 것이 아닌가?물질적으로 똑같다고 하더라도, 정신적으로 같은 자아인건가?내가 분리되고 조립된다면,지금 생각하고 있는 ‘나’ 라는 자아는 분리될 때 ‘죽은’ 게 아닌가?자아는 도대체 어떻게 생긴건가?자아는 없어지는 것인가?자아는 생겨나는 것인가?자아가 우주의 ‘관측자’ 라면분리되기 이전에 우주는 어떻게 된 것인가?내가 아닌 다른 사람의 자아의 존재를 확인할 수 없나?내가 아닌 다른 사람의 자아가 존재하는 것인가?사람 A와, A의 인체(몸과 뇌)를 ‘똑같이’ 복제한 B는 같은 사람인가?이 둘은 같은 영혼, 자아인건가?내가 생각하고 있는 자아가 복제 된건가?둘이 똑같지만 개별로 또 다른 하나 자아인 것 아닌가?각각 하나의 자아라면, 이 둘을 어떻게 구분 짓는가?원본과 복제품의 차이를 구분할 수 있을까?생명의 경계는 무엇일까?인공적으로 새로운 몸과 뇌의 사람을 만든다면?인공의 난자/정자와 사람의 난자/정자 사이의 아기?사람, 생명의 경계는?인체 일부를 개조한 사이보그도 사람인가?그 경계는 어떻게 되는 것인가?내 팔이 잘려나갔다.잘려나간 내 팔은 나인가?팔이 잘려나간 남은 놈은 나인가?뇌를 빼고 모든 것이 분해되었다.뇌는 어쨌든 있다.마치 통속의 뇌처럼, 뇌 밖에 없다.그래도 그 뇌는 나인가?그럼 뇌에 자아가 있는 것인가?뇌를 제외한 나머지가 모두 대체되거나 개조된다면?그건 정신적 관점에서 여전히 나인가?몸은 그대로, 뇌만 대체된다면 그건 나인가?다른 사람과 뇌만 바꾼다면 어떤 게 나인가?뇌가 있는 쪽이 나인가?그럼 뇌에 자아가 있는 것인가?뇌가 ‘일부분’ 대체되거나 개조된다면?그건 여전히 나인가?뇌가 충격을 받던 뭐가됐던 ‘손상’ 된다면,그건 여전히 나인가?컴퓨터와 뇌를 연결 시킬 수 있게 된다면,그 뇌는 여전히 나인가?연결한 컴퓨터도, 연결된 뇌의 나 인가?뇌없이 몸만 있다면?그건 여전히 나인가?뇌사했다면, 식물인간이 되었다면, 그건 여전히 나인가?기억이 손상된다면,기억 상실증이나 치매에 걸린다면 그건 나인가?세포 단위 하나는 나인가?내 뇌 세포 단위 하나는 나인가?내 몸의 절반의 세포 단위는 나인가?내 몸의 절반 이상의 세포 단위는 나인가?잘려나간 손톱은 나인가?잘려나간 손가락은 나인가?잘려나간 팔은 나인가?잘려나간 하반신은 나인가?일부 잘려나간 뇌는 나인가?일부 잘라낸 뇌 조각은 나인가?냉동인간.냉동되기 전과 이후의 사람은 같은 사람인가?한 시간 전의 나와지금의 나와한 시간 후의 나는 같은 사람인가?시간 여행으로 과거/미래의 나를 만난다면,과거/미래의 나와 여행을 ‘간’ 나는 같은 자아인가?서로 구분되는 자아인가?매 순간순간 마다,나는 나인가?DNA에는 피부, 머리색 등을 결정짓는 유전자가 있다.신체적 특징 뿐만 아니라, 정신적 특징에도 영향을 주는 유전자가 있을 것.이를 개조/수정 한다면?돌연변이?자아라는 것이 존재하는 건가?굉장히 작은 분자, 원자, 전자, 혹은 그 집합체, 호르몬들의 전기 흐름, 화학 반응이 뇌의 전부 아닌가?자아라는 것은 무엇인가?정신이라는 것이 실제 존재하는 것일까?나는 그냥 작은 것들의 상호 대화에 대한 결과물이 아닌가?생명은 도대체 무엇인가??유전자는 왜 계속 이어나가려고 하나?애초에 그런 목적없이, 그저 작은 것들의 상호 대화 속에서 우연히 ‘계속 이어나가게 되는’ 대화를 하게 되었고,그게 지금까지 이어져 온 것 아닌가?그 끝이 있는 것인가?우리는 관측자가 맞나?우리가 모두 죽어도 우주는 존재하는 것인가?‘생명’ 이라는 것이 생기기 전에도 우주는 있는 것 아니였나? 와우.그러니까 나는 좌뇌, 우뇌 두 자아?가 신경으로 이어진 상태의 ‘나’ 인데,사실 더 깊숙하게 들여다보면 나는 은하에 있는 별의 10배 이상되는 살아있는지 죽어있는지 모르는 세포로 이루어져 있고,그 세포들 마저도 최소한 7년에 한 번 씩은 모두 내 몸에서 바뀌는 거구나.그래서 나는 누구야?" }, { "title": "🌱 행복하려면", "url": "/posts/DayStone-2302124/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-02-24 04:53:00 +0900", "snippet": "🗿 행복하려면https://twitter.com/lanxcer/status/1332376282907037696?s=20VA-11 Hall-A 의 여주인공인 질이 코타츠에 엎드려 자고있는 그림,별 생각없이 바꿨던 내 컴퓨터 배경화면그냥 바탕화면 띄워두고 잠깐 다른 생각에 빠져서 멍하니 바라보다보니이상하게 질이 행복해 보인다고 느꼈다.새벽 감성 때문인지 몰라도 아름답게 보이는 미래풍 도시의 야경작지만 아기자기하게 꾸며놓은 아늑한 방에, 따뜻한 코타츠와 후드티, 이름이 기억안나는 고양이맥주 몇 캔 마시고 붉어진 얼굴로 잠에 든 모습이행복해 보인다고 느껴졌다.쟤가 뭔가 큰 일을 이루고 있는 것도 아니고전에 이뤘던 것도 아니고성공한 인생 인것도 아닌데그냥 행복해보였다가끔 사건이 생기지만, 그렇다고 크게 변하지는 않는 소소한 일상 속에자기가 좋아하는 보스와 친구와 익숙한 사람들을 만나는집에 돌아오면 맥주 몇 캔 마시면서 폰하다가 잠에드는그런 모습이 너무 행복해보인다내가 쟤라면혹은 내가 쟤 주변인물이라면그냥 저런 서사의 세상에 살 수 있다면정말 행복하게 살 수 있을 것 같다Jill이 부럽다뭔가나는 나에게 과분한 서사를 바라고 있다저 VA-11 Hall-A 의 서사를 말하는 것이 아니라,내가 목표로 하고 있던 나의 인생진부하지만.. 사회적인, 또 정신적인 성공을 꿈꾸는 그런 인생될 수야 있다면 당연히 좋겠지만,그래서 내가 더 노력해야겠다고 생각하고는 있지만,솔직히 지금 나에겐.. 그런 노력이 너무나도 부담스럽다매일이 걱정되고, 하루라도 아끼지 않으면 안될 것 같고어영부영 넘긴 날들을 후회하고성공하고 뛰어난 다른 사람들이 너무나도 질투나고그런 사람들을 한 편으로는 부러워하고 영웅처럼 느껴지고그냥좀 힘들다그래서인지는 몰라도..그냥 별 일 없이 행복해보이는저 VA-11 Hall-A의 서사와 여주인공 Jill의 인생이 부럽다.어릴 때 부터나도 저 만화 속, 이야기 속 주인공이 되면 좋겠다매번 상상해왔지만지금 느끼는 감정은 사뭇 다른 감정인 것 같다방대한 모험의 서사, 세상의 주인공이 되는 이야기, 미소녀들에 둘러싸이는 망상 속 세계그런 것들이랑은 다르다내가 지금 부러워 하고 있는 저 세상은뭔가 굉장하고 커다란 게 아니다그냥.. 저 하찮은 작은 서사가 부럽다미래에 대한 걱정도 똑같이 있을 거고사람에게 똑같이 화나고힘들고 후회되는 일도 똑같이 있을 거고그렇지만 당장 오늘 내일을 무난하게 보낼 수 있는큰 부담없이 널널하게 보낼 수 있는그런 일상, 여유, 인생이 부럽다나에겐내가 스스로 매고있는 짐과 걱정들이너무 무겁다.그렇지만,그냥 나도 맘편히나는 내 일상 속의 행복을 찾을 거야그렇게 생각했다간남들에게 뒤쳐지고, 어제의 오늘을 후회하고, 미래가 없을 까봐그게 너무 두렵다나 스스로 합리화 하는 게 두렵다그냥 부러워 할 뿐이다내게 달라지는 건 아무것도 없다너무 무겁다 .!🗿 많은 걸내가 지금 너무 많은 걸 원하고 있나그런 생각도 든다본래 사람은 멀티 태스킹이 안된다고 하는데이는 조금 넓게 봐서, 장시간 무언갈 익히려고 하는 것에도 적용되는 건가?한 가지만 익히려고도 잘하기 어려운데,한 번에 여러 가지를 익히려 한다면 그건 더 어려울 일일 것이다.하나에 집중하다.이게 선택과 집중인 것 같다.꾸준히도 중요하지만,일의 비율도 그만큼 중요하다.🗿 생각남이 도와준 사실을 부끄럼 없이 알릴 수 있는 마음이 많았으면 좋겠다함께한 모두를 언급할 수 있는 마음이 많았으면 좋겠다내가 아는 것들을 남들에게 잘 알릴 수 있으면 좋겠다게으름과 부끄러움과 질투가 좀 더 좋은 방향으로 생겨났으면 좋겠다" }, { "title": "⛏️ Cannot perform upm operation: EBUSY: resource busy or locked, open", "url": "/posts/Cannot-Perform-Upm-Operation/", "categories": "⛏️Memo", "tags": "", "date": "2023-02-24 00:59:00 +0900", "snippet": "💎 Problem, Solve문제 :Cannot perform upm operation: EBUSY: resource busy or locked, open유니티 패키지 설치 시도 시 위 에러가 뜬다.해결 :열려있는 VSCode를 끄고 다시 설치 시도를 한다." }, { "title": "⛏️ CPP 공부", "url": "/posts/CPP-Study/", "categories": "⛏️Memo", "tags": "", "date": "2023-02-22 02:35:00 +0900", "snippet": "size_t, unsigned intsize_t, unsigned intsize_t, unsigned int특정 문자 제거 erase remove특정 문자 제거 erase removestring 생성자배열 특정 요소 개수Vector 탐색size_t, unsigned intsize_t, unsigned intsize_t, unsigned int ++ ++ a O, a ++ ++ X 오른쪽에서 왼쪽으로 실행되기 대문에 무튼 연산자 만들 때 그래서 위쪽은 되게, 아래쪽은 안되게 만들어야함 이걸 간단히 구현하게 해주는 방법이 있음 객체&amp;amp; operator++() 에서 &amp;amp;을 붙여주는 이유 예를 들어 Temp a = v1 + v2 를 봤을 때 v1 + v1 의 결과값은 임시 객체임, v1이나 v2의 실체 객체가 아니라는 것 이를 바탕으로 ++ ++ a 를 보면 객체를 반환값으로 보내면 a = a + 1 에서 a(왼쪽) 를 반환하지 않고 a + 1(오른쪽) 의 임시 객체를 보내버림 그래서 자기 자신을 반환하기 위해 레퍼런스를 보냄 C++ time#include &amp;lt;time.h&amp;gt;using namespace std;int main(){ time_t cur; time(&amp;amp;cur); tm* gmTM = gmtime(&amp;amp;cur); printf(&quot;%d\\n%02d\\n%02d&quot;, 1900 + gmTM-&amp;gt;tm_year, gmTM-&amp;gt;tm_mon + 1, gmTM-&amp;gt;tm_mday);} [C++] 코딩테스트를 위한 C++ 기본 코딩 테스트 입문 (with C++) for (auto item : ~)for (auto&amp;amp; item : ~)iter findstring findfind(v.begin(), b.end(), )s.find(c)string::npos == -1find 실패 시 리턴pow sqrt -&amp;gt; cmathmin max -&amp;gt; algorithmrotatetoupper, tolowerisupper, islower, isdigit, isalphasplit 대신#include &amp;lt;sstream&amp;gt;stringstream ss(s); string word;while (ss &amp;gt;&amp;gt; word){ cout &amp;lt;&amp;lt; word &amp;lt;&amp;lt; endl;}ceil ceiling 올림round 반올림floor floor 내림vector v2(v1)memset(ptr, value, size)" }, { "title": "🌱 쇼핑", "url": "/posts/DayStone-2302121/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-02-21 05:16:00 +0900", "snippet": "🗿 쇼핑어제 월급을 탕진했다.기존에 쓰던 두 개의 모니터는 HDMI, DVI 포트를 쓰고 있었는데,새로 산 그래픽카드가 HDMI 하나, DP 셋만 지원해서,모니터도 하나 주문했다..집에 굴러다니는 부품들로 컴퓨터 하나 더 만들 수 있어서,케이스랑 파워, 써멀, 키보드, 스피커를 주문했다..🗿 키보드키보드는 처음으로 기계식 키보드를 사봤다.근데.. 적축 리니어가 조용하다고 해서 샀는데, 생각보다 시끄럽다..다음부터 키보드는 그냥 싼 걸 주문할 것..🗿 작업작업한 게 오늘 쓰이는 날이다.이게 끝나면 정말 내 일은 끝이다.졸리다.드디어 끝이다.좋긴한데, 뭔가 아쉽다.이 일을 하면서 이룬 게 돈 번 것 말고는 그다지 없다.이 일을 좀 더 좋아했었다면 좋았을텐데.내 태도가 후회스럽다.🗿 리제로어제 리제로를 몰아봤다.작업 하느라 끝까지 다 보지는 못했다.얼마전에 방송으로 봤던 미연시인 러브 인 로그인 때 부터 느꼈던 거지만,정말 작품을 보기 전의 예상과 내용과 메세지가 너무 다르다.그냥 미소녀랑 함께하는 이세계 모험물 같은 건 줄 알았는데,타임리프였을 줄이야.개인적으로는 많이 접해보지 못했던 장르라 재밌게 보고 있다.초반부엔 주인공 스바루가 그냥 ‘병신 같지만 그런 맛에’ 같은 느낌이었는데,중반부에 추해지고 타락하는 모습은 정말 보기 힘들었다.무튼..애니도 그렇고 게임도 그렇고,더 많은 작품을 접해봐야겠다.RMT…..🗿 점점점점 폐인이 있는 것 같다.물론 뭐.. 평소에는 안그랬냐만은..피곤하고 공허한 건 일상이고,다리에 알배기고 허리 아프고 하다.아무래도 자세 때문인가.정말 신경써야겠다.속 썩이는 자식이 되지는 말자.🗿 소녀리버스결선 뮤비가 생방송으로 공개되는 날.매치업된 두 곡 모두 노래든 뮤비든 너무 좋다.잘 챙겨보지는 않았는데, 중간중간 나오는 클립들 보니 재밌어 보인다.진작에 좀 챙겨볼 걸 그랬나.내가 매사에 좀 더 열정적이었으면 좋겠다.내가 좋아하는 게 많았으면 좋겠다.🗿 서브 컴케이스, 파워 택배가 와서 서브 컴을 조립했다.근데 생각해보니..내 방에 랜선이 하나라, 한 번에 한 컴퓨터밖에 인터넷을 못쓴다.그래서 RJ45 커넥터와 케이블, 스위치허브를 주문했다.랜툴은 전에 하나 사둔 게 있어서 사지 않았다.RJ45 커넥터와 케이블은 그 자체의 가격보다 3000원인 택배비가 더 비쌌다.배보다 배꼽이 더 크다." }, { "title": "⛏️ 읽기 좋은 코드가 좋은 코드다", "url": "/posts/The-Art-Of-Readable-Code/", "categories": "⛏️Memo", "tags": "", "date": "2023-02-17 10:38:00 +0900", "snippet": "💎 머릿말코드는 이해하기 쉬워야 한다코드는 다른 사람이 그것을 이해하는 데 들이는 시간을 최소화하는 방식으로 작성되어야 한다적은 분량으로 간결한 코드를 작성하는 것이 좋은 목표이긴 하지만,(이해하기 위한 코드량이 절대적으로 적은 것이니)분량이 적다고 해서 항상 더 좋은 것은 아니다(주석, 설명 변수는 분량을 늘리지만 이해 비용을 줄여준다)💎 Surface-Level 에서의 개선 이름에 정보를 담아내라 구체적인 단어 선택 -&amp;gt; 추상적/중의적/무의미한 단어 피하기, 의도한 정보를 정확히 전달하는 Get -&amp;gt; Fetch, Download, Compute(Get은 관행적으로 가벼운 접근자) Size, Length -&amp;gt; Height, NumNodes, MemoryBytes, Chars, CountSize/CountElements(Size는 관행적으로 일정한 시간을 소비, i.e. O(1)) Filter -&amp;gt; Select, Exclude Clip -&amp;gt; Truncate Stop -&amp;gt; Kill, Pause Temp 같은 보편적 이름 피하기 Temp : 짧게 임시적으로만 존재, 임시적 존재 자체가 변수의 가장 중요한 용도일 때 루프 반복자 : i j k 보다는, 인덱스로써 쓰인다면 컨테이너 이름과 인덱스 접두문자를 같게 한다던지 세부 정보 붙이기 단위 : a_chars, a_secs, a_mb, a_kbps, hex_id, 속성(내용이 중요하다면) : plaintext_password, html_utf8, min/max 경계 : Start/Stop -&amp;gt; First/Last(경계포함), Begin/End(경계포함/배제) Boolean : is, has, can, should + 긍정형(부정형은 이해가 느리다) 변수는 작은 설명문, 이름 길이 알잘딱으로 좁은 범위에서는 짧은 이름, 넓은 범위에서는 긴 이름이 좋다 약어/축약형 : 새로 합류한 사람이 이름이 의미하는 바를 이해할 수 있다면, doc, str 불필요한 단어 제거 : Convert^ToString, Do^ServeLoop 코딩 표준, 이름 포맷팅으로 의미 전달 미학 줄바꿈, 열 맞추기(?) 함수로 불규칙성 정리(모양 통일, 중복 코드를 간결하게) 일관성 (있는 패턴), 의미있는 순서, A B C 로 언급했다면, B C A 금지 코드(선언문)를, 문단/블록으로, 논리적 영역(주제/순서)에 따라 성격 구분 주석 코드/이름에서 빠르게 유추할 수 없는 내용 (새로운 정보가 아니더라도 ‘빠르게’ 유추할 수 없다면) 나쁜 코드/이름에 주석을 달지 말고, 코드/이름을 고치기 (좋은 코드 &amp;gt; 나쁜 코드 + 좋은 주석) 생각을 기록하기 (감독의 설명, 의도) 이 코드는 A 해서 개쩜 이 코드는 A 하고 1분 뒤에 폭파됨 이 코드는 A 때문에, B 해줘야함. 주의 이 코드는 A 부분에 하자가 있음. 근데 난 안고침 ㅋㅋ TODO : 더 빠른 알고리즘을 쓰셈 TODO : JPEG말고 다른 이미지 포맷도 처리할 수 있어야 함. TODO, todo, FIXME, maybe-later, HACK, XXX 상수 값이 { 범위/조건 } 이면 된다, { 통계/고찰/사실 } 때문에 이게 좋다 코드를 읽은 사람의 입장이 되기, 읽는 사람이 ? 할 부분 큰 그림 알리기 : 파일/긴 함수에서 크게 설명하고, 각 조각이 어떻게 맞춰지는 지 어려우면 그냥 생각을 적어내기 아 A 너무 어렵네 그냥 B 써야겠다 -&amp;gt; 주의 : 이 코드는 A 대신 B 를 사용했기에 @ 부분은 처리하지 않는다. 그렇게 하는 것이 어렵기 때문이다. " }, { "title": "🌱 강의 정원 좀 늘려라 !!", "url": "/posts/DayStone-230217/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-02-17 10:38:00 +0900", "snippet": "🗿 작업오랜만에 밤샘 작업을 했다.그래도 뭐, 이게 마지막이니까.마무리만 잘 하자.🗿 수강 신청오전 10시에 전공 수강 신청을 했다.신청하려 했던 여섯 과목 중, 절반은 실패하고, 절반은 성공했다.성공한 절반은 사실 정각되고 시간 좀 지나서도 인원이 바로바로 채워지지 않아서..‘성공’ 이라 보기에는 어려운 것 같고..그냥 실패한 절반을 내가 ‘실패’ 했다고 보는 게 맞는 것 같다.정각되자마자 정원 꽉 다 차는 걸 보고 매번 기겁하지 않을 수가 없다.아니.. 근데.. 진짜..매학기 전공 수강 대기 인원이, 강의 정원보다 1.5 ~ 2배는 많은 것 같은데..정원 수, 수업 수는 어째 절대 늘어나지를 않는다..게다가 이번엔 우리 학과에 전과를 12명이나 받았다고 한다..강의 정원은 그대로인데 수강 신청 인원은 우후죽순 늘어만난다..또 정원은 40명으로 잡아두고, 추후에 수업 들어가고 보면 60명이서 듣는 과목들도 있다..아니 애초에 60명 정도로 넉넉하게 잡아주라고..왜 그러는 거지??학교에서 전공 과목을 수강할 보장을 받지 못한다니..이번에 국장 짤려서 등록금도 내야하는 터라 더 기분이 좋지 않다.속상하다.일단 할 일 시작하고, 남은 교양 신청이랑 빌넣이나 잘 해야겠다..오픈런..? 해본 적 없는데 이번엔 해야 할 것 같다..아 진짜 시ㅣㅣㅣ바ㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㅏㄹ !!!!!!!!!!!!!!!!!!!11:12 글쓰고 나니까 개강 전에 증원 예정 과목을 공지한다는 공지가 올라왔다.… 되려나🗿 컴퓨터15일 밤에.. 갑자기 컴퓨터가 먹통이 됐었다.해킹 관련 글을 보다가 갑자기 브라우저가 멈추길래,작업 관리자를 키고 강제로 작업 끝내기를 하려했는데 안 닫히길래,컴퓨터 다시 시작을 눌렀는데 몇 분이 지나도 안 꺼지길래,컴퓨터 전원 버튼 꾸욱 눌러 강제 종료하고 다시 키는데 ‘안 켜지길래’너무 당황스러웠다.지인분들의 도움을 받아 어찌어찌 고치긴 했다.고치는 과정에서 나혼자 M.2 SATA NVMe 같은 용어 몰라서 뻘쭘했다.명색이 컴공인데.. 아무것도 모른다.또 다른 이야기로는,어제 그래픽 카드를 샀다.다나와 3060TI 카테고리 맨 위에 있는.. 이엠텍 걸로이제 한 5년 정도는 버티지 않을까 감히 생각해본다.3D 애니메이션도 만들고 싶고, 언리얼 쪽도 건들어보고 싶고.그동안 미뤄둔 고사양 게임들도 해보고 싶고.기대가 된다.무엇보다 이제 컴퓨터 모든 부품을 교체했기에, 더이상 돈 쓸 곳이 없다는 만족감도 있다.인생 퀘스트 하나를 해치웠다.뭐, 언젠가 또 바꾸긴 하겠지만.. 당장은 말이다.🗿 토익어제 토익 프로그램에 신청하고 받은 교재가 왔다.근데.. 토익 목표 550점의 해커스 토익 스타트 책이었다.큿소..아무리 495점의 나지만..그치만.. 아무리 그래도.. 스타트라니..나도 빨갱이 파랭이 노랭이로 공부하고 싶었는데..아무리 나라도 이정도 진단평가는 전부 다 맞추는데..!하지만 어쩌겠는가.내 수준이 수준이니, 그에 맞는 걸 배정 받은 거고나는 이제 이걸로 공부할 뿐이다.열심히 공부하자.이걸로 공부하고 부족하면, 빨갱이 파랭이 사서 더 공부하면 되는 것이다.간바루조이 !🗿 메콩3D SD 모델에 관심이 생겨서 블루 아카이브 관련 이미지들을 보다가,문득 메이플스토리2가 생각났다.블루 아카이브 못지 않게, 메이플스토리2 모델도 매력적으로 잘 만들어졌다고 생각했었더랬다.근데 어라이 게임.. 아직 서버가 안닫혔다.섭종이라는 말을 분명 들었던 것 같은데,그게 큰 업데이트를 안한다는 뜻이었나보다.아직 살아는 있구나." }, { "title": "🌱 러브 인 로그인", "url": "/posts/DayStone-230216/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-02-16 03:03:00 +0900", "snippet": "🗿 러브 인 로그인세구님 방송으로 러브 인 로그인 실황을 봤다.미연시를 제대로 본 건 처음이었다.생각했던 것보다 더 야시시했지만,전혀 생각못했던 스토리의 슬픔과 여운이 있었다.미연시로 눈물 찔끔 흘렸다.역시 직접 경험해본 것이나, 제대로 아는 게 아니라면멋대로 예상하고 생각하면 안되겠다... 미연시 재밌을지도 (웃음)🗿 읽기 좋은 코드가 좋은 코드다마참내 이 책을 완독했다.1월 7일에 읽기 시작했으니, 한 달하고 일주일 정도 걸렸다.대부분의 내용을 벌써 잊어버린 것 같지만..그래도 for 문의 루프 변수명 하나 만큼은 기억한다.다시 한 번 훑어 읽어보고,다시 한 번 정리해보고,다시 책꽂이에 꽂아야겠다.뿌듯하다.하지만 좀 더 부지런해 질 것.간바루조이 !" }, { "title": "⛏️ PlayFab, A Native Collection... 에러", "url": "/posts/PlayFab-Memory-Leak-Error/", "categories": "⛏️Memo", "tags": "", "date": "2023-02-15 10:40:00 +0900", "snippet": "💎 Problem, Solve문제 :A Native Collection has not been disposed, resulting in a memory leak. Enable Full StackTraces to get more details.이 에러 로그가 자꾸만 뜬다.Play Mode 가 멈춘다거나, 게임 플레이에 이상이 생긴다거나 하는 건 아니지만, 신경쓰인다.해결 :참고Assets\\PlayFabEditorExtensions\\Editor\\Scripts\\PlayFabEditorSDK\\PlayFabEditorHttp.cs파일 내용 일부분에, 참고 링크에 Rick Chen이 남긴 코드를 추가한다.이것만의 문제는 아닌지, 가끔 똑같은 에러 로그가 발생하고 있긴 하지만,그 빈도가 확연하게 줄어들었다." }, { "title": "🌱 Rain World", "url": "/posts/DayStone-230215/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-02-15 09:30:00 +0900", "snippet": "🗿 Rain World이 글을 봤는데,곱등이인지 지네인지 시커먼 몬스터 GIF가 너무 디스커스팅했다. 절차적 애니메이션이라 하니, 요런 거랑 비슷한거지 싶다.금방 몬스터 만들 때 적용시켜봐야겠다.🗿 Unity VFX Graph 재밌어 보인다..Shader Graph 랑 같이 공부해서, 스킬 VFX를 만들 때 적용시켜봐야겠다.🗿 ROW밀린 작업들이 어느정도 끝나서 본격적으로 게임 개발을 하고 있다.지금 만들고 있는 게임은 Risk Of Rain 2 를 모티브로 한 팬 게임이다.2024 연공전에 출품하는 것을 목표로 하고 있다.이는 내 첫 멀티 플레이 게임 개발 도전기이다.초심자의 행운은 어디로 간건지, 벌써부터 어려움이 닥쳐오고 있다.멀티 플레이와 관련해서 어떤게 문제인지 전혀 모르겠는 문제들이 벌써부터 생겨나고 있다.그리고 그 해결방법을 찾기 위해서는 순전히 문서와 샘플밖에 공부할 곳이 없는 것 같다.열심히 해야겠다.또 다른 이야기지만,어느 순간부터는 Risk Of Rain 2와는 차별화되는,그것이 아트 감성이든, 컨텐츠든,단순 모작 팬 게임이 아니라 또 다른 게임으로서 평가되기 위해 공부해야 할 것이다.… 물론,내가 모작으로 원작의 재미를 재현할 수 있다는 전제가 깔린 이야기이다.당장 모작이라도 잘해야지..열심히 해야겠다.유니티 애니메이션 위치..?We finally get our first look at risk of rain 2🗿 돈 이야기돈 이야기..받는 입장에서 주는 이에게 꺼내기가 정말 어려운 이야기이다..일단 돈 이야기를 하려면 말 끝에 ..을 붙이는 연습을 한다..그게 온라인이든 오프라인이든.... 스탠스를 취해야 한다..그게 부모님이나 친척에게 받는 용돈에 대한 이야기이든..혹은 어떤 일에 대한 대가에 대한 이야기이든..그런 돈 이야기를 입 밖으로 꺼내기 전엔.... 스탠스 뿐만 아니라..또한 충분한 예열이 필요하다..이게 정말 받아도 되는 금액인지.. 혹은 금액의 양인지..그치만 이 자본주의 사회에서 돈은 많을수록 좋은.. 받을 수 있다면 최대한 받아내는게..하지만 받는 입장에서 돈 이야기를 꺼내면 좀 돈 밝히는 사람으로 보이지 않을까..내가 정말 그만큼 받을 만큼의 미래 가치를 지니거나 노동을 했나..?그래도 어쨌거나 뭔가 해온 것에 대한 합당한 대가를 받는 거고..시냅스로 욕구와 당위 춤을 추다가어느 순간 파칭ㅡ아, 모르겠다 간다하고 질러버리는 것이다이후 한 수십 초 동안은 자기합리화를..음 그래 이정도면.. 하면서 으쓱거리다가..그게 끝나면 주는 이의 답변이 돌아올 때 까지내가 한 말을 곱씹으며 벌벌떨며 초조한 채로 있는 것이다.돈 이야기는 정말이지 어려운 이야기이다.사회인들은 모두 이런 어려운 이야기를 가슴에 품고 사는 것인가?그것도 한 달에 한 번씩?돈 이야기 확실하게 해주는 AI 챗봇이 절실하다.아, 어렵다 간다" }, { "title": "⛏️ Unity NavMesh", "url": "/posts/Unity-NavMesh/", "categories": "⛏️Memo", "tags": "", "date": "2023-02-15 08:57:00 +0900", "snippet": "💎 Unity NavMesh 참고💎 Problem, Solve문제 :여러 크기의 Agent를 함께 사용하고 싶었는데,기본 내장 기능으로는 한 번에 한 Agent Type에 대해서만 NavMesh를 Bake 할 수 있었다.때문에 NavMesh를 Bake했던 Agent Type과 다른 Agent Type을 가진 Agent는,플랫폼에 제대로 배치했음에도 에러 로그를 뿜어냈다. (Failed to create agent because it is not close enough to the NavMesh)플랫폼 어느 곳에도 해당 Agent Type에 대한 NavMesh가 없기 때문이다.이에 여러 Agent Type에 대해, NavMesh를 ‘각각’ Bake 하는 방법이 필요했다.해결 :NavMesh Building Components 중 NavMeshSurface 컴포넌트를 이용하면, 여러 Agent Type에 대해 NavMesh를 ‘각각’ 구워낼 수 있다 !그런데 NavMesh Building Components는 Unity 2021에 내장된 NavMesh에는 포함되어 있지 않다.NavMesh Building Components는 AI Navigation 패키지의 Experimental 버전에서만 지원되고 있다. (23-02-15 기준)때문에 이 버전으로 업데이트를 시켜줘야 한다.패키지 설치는 Unity NavMesh Building Components 문서를 참고했다.사용 방법은, 이 글 맨 위에 링크한 Unite Europe 2017 - Finding the path 강연을 참고했다.3분 부터 해당 기능을 소개한다." }, { "title": "🌱 Wikipedia 어원", "url": "/posts/DayStone-230213/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-02-13 03:06:00 +0900", "snippet": "🗿 Wikipedia 어원Wiki= 첫 위키 소프트웨어 ‘WikiWikiWeb’의 개발자인 ‘Ward Cunningham’ 이 정의하기에, ‘구동 가능하면서 가장 단순한 온라인 데이터베이스’= 오늘날에는, ‘웹 브라우저를 통해 불특정 다수가 협동적으로 수정 관리할 수 있는 웹 사이트’= 하와이 언어로 ‘Quick’-pedia= 앞에 붙은 접두사에 관한 백과사전, 혹은 그런 구조를 가진 백과사전Wikipedia= Wiki-pedia= 웹 브라우저를 통해 불특정 다수가 협동적으로 수정 관리할 수 있는 백과사전 웹 사이트= 메인 페이지에서 ‘the free encyclopedia that anyone can edit’ 라는 글을 볼 수 있다.🗿 Prefix, Suffix 어원pre-= Before, 앞쪽에(물리), 일찍(시간)이라는 뜻을 가진 ‘pre’-fix (접두사)sub-= ~ 아래에, 뒤쪽에-fix= 특정한 방법으로 ‘죔, 잠금’ 혹은 ‘부착, 연결’ 을 하는Prefix= Pre-fix= 앞쪽에 연결되는= 접두사Suffix= Suf(sub)-fix= 뒤쪽에 연결되는= 접미사🗿 음료11일 밤 부모님께서 잠깐 편의점에 다녀오시면서 사다주신 세 가지 캔 음료,몬스터, 핫식스더킹파워, 핫식스더킹포스몬스터는 그냥 몬스터 맛이었고,핫식스더킹파워 역시 몬스터 맛이었고,핫식스더킹포스는 게토레이? 포카리스웨트? 맛인 것 같다.🗿 외출점심으로 ‘초당길 낭만게장’ 이라는 곳에 가서,간장 게장을 먹었다.이후 하나로마트에 가서,부모님은 장을 보시고,나는 근처 미용실에 가서 머리를 잘랐다.그냥 길게 자란 머리를 정리하는 것이 목적이었는데,어쩌다 리프컷이라는 것을 하게 되었다.평소 미용실에 잘 다니지 않아서 횡설수설하다 잘못 전달된 결과.내 백수 머리는 정마담 머리가 되었다.이런.다른 이야기지만 뭔가 탈모 생긴 것 같기도.아뿔싸.🗿 마르크스 주의, 자본론 나무위키이데올로지 이데올로기위키백과이상운운명필연🗿 일색일색이다.한 가지의 빛,뛰어난 미인,그 한 가지로만 이루어진 특색이나 정경.🗿 가지종류/단위를 뜻하는 ‘가지’,그리고 그냥 나뭇 ‘가지’둘이 같은 어원인줄 알았는데, 그건 아닌 건가?떠오르는 개념적인 형상이 비슷해서 당연히 같은 어원일 거라 생각했는데..좀 더 알아보고 국립국어원에 검색해보니,비슷한 관점의 질문이 올라온 적이 있긴 하다.이에 대한 국립국어원의 답변도 있긴한데, 내가 찾던 답은 아니다.뭔가 이와 관련된 연구 자료 같은 건 없을까." }, { "title": "🌱 토익 495", "url": "/posts/DayStone-230210/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-02-10 16:55:00 +0900", "snippet": "🗿 토익 495첫 토익 모의고사LC 310 + RC 185 = 495점 나왔다단어 모르는 게 너무 많아서단어만 외워도 100점은 더 올릴 수 있을 것 같다.공부.. 해야겠지..?간바루조이 !" }, { "title": "⛏️ 프로그래머스 디스크 컨트롤러 CPP", "url": "/posts/Programmers-42627/", "categories": "⛏️Programming, 🕯️PS", "tags": "PS, Programmers", "date": "2023-02-09 22:12:00 +0900", "snippet": "디스크 컨트롤러💎 첫 번째 풀이 코드 의도 : 분류는 힙인데.. 뭔지 모르겠다., 결과 : 정확성 100점 (20/20), 총 100점#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;bool compare(vector&amp;lt;int&amp;gt; v1, vector&amp;lt;int&amp;gt; v2){ if (v1[1] == v2[1]) return v1[0] &amp;lt; v2[0]; return v1[1] &amp;lt; v2[1];}int solution(vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; jobs){ sort(jobs.begin(), jobs.end(), compare); bool* completed = new bool[jobs.size()]; for (int i = 0; i &amp;lt; jobs.size(); i++) completed[i] = false; int lastCompletedTime = 0; int sumOfElapsedTime = 0; for (int i = 0; i &amp;lt; jobs.size(); i++) { int curProcessIndex = -1; int earliestReqTime = 1001; int earliestReqIndex = -1; // 다음 작업을 찾는다. // 만약 당장 시작할 수 있는 작업이 없는 경우, 남은 작업 중 가장 먼저 요청된 작업을 찾는다. for (int ji = 0; ji &amp;lt; jobs.size(); ji++) { if (completed[ji]) continue; if (jobs[ji][0] &amp;lt; earliestReqTime) { earliestReqTime = jobs[ji][0]; earliestReqIndex = ji; } if (jobs[ji][0] &amp;gt; lastCompletedTime) continue; completed[ji] = true; curProcessIndex = ji; break; } if (curProcessIndex != -1) { sumOfElapsedTime += jobs[curProcessIndex][1] + (lastCompletedTime - jobs[curProcessIndex][0]); lastCompletedTime += jobs[curProcessIndex][1]; } else { int breakTime = earliestReqTime - lastCompletedTime; completed[earliestReqIndex] = true; sumOfElapsedTime += jobs[earliestReqIndex][1] + earliestReqTime - jobs[earliestReqIndex][0]; lastCompletedTime += jobs[earliestReqIndex][1] + breakTime; } } delete[] completed; return sumOfElapsedTime / jobs.size();}자료구조에서 힙을 배우긴 했었지만..어떻게 쓸지를 몰라 그냥 무작정 풀었다.역시 나 스스로가 많이 부족하다고 느꼈다.💎 최종 풀이 코드 의도 : 좋아보이는 풀이를 보고 배끼자, (Priority Queue, Template, Iterator) 결과 : 정확성 100점 (20/20), 총 100점#include &amp;lt;string&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;queue&amp;gt;using namespace std;struct CompareProcessTime{ bool operator()(const vector&amp;lt;int&amp;gt;&amp;amp; v1, const vector&amp;lt;int&amp;gt;&amp;amp; v2) { // 우선순위 큐는 큰 것 순서대로 정렬하기 때문에, // 오름차순으로 만들어주기 위해서는 정렬 순서를 반대로 return v1[1] &amp;gt; v2[1]; }};struct CompareReqTime{ bool operator()(const vector&amp;lt;int&amp;gt;&amp;amp; v1, const vector&amp;lt;int&amp;gt;&amp;amp; v2) { return v1[0] &amp;lt; v2[0]; }};int solution(vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; jobs){ priority_queue&amp;lt;vector&amp;lt;int&amp;gt;, vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt;, CompareProcessTime&amp;gt; pq; sort(jobs.begin(), jobs.end(), CompareReqTime()); auto it = jobs.begin(); int sumOfElapsedTime = 0; int curTime = jobs[0][0]; while ((it != jobs.end()) || !pq.empty()) { while ((it != jobs.end()) &amp;amp;&amp;amp; ((*it)[0] &amp;lt;= curTime)) { pq.push((*it)); it++; } if (!pq.empty()) { curTime += pq.top()[1]; sumOfElapsedTime += (curTime - pq.top()[0]); pq.pop(); } else { curTime = (*it)[0]; } } return sumOfElapsedTime / jobs.size();}다른 분들의 풀이를 보다가, 제일 깔끔해보이는 코드가 이거였다.CPP의 Priority Queue, Template, Iterator를 이번에 배웠다.Priority Queue는 기본적으로 내림차순으로 정렬을 하기에,오름차순으로 정렬되는 Compare 구조체를 만들 때 리턴을 반대로 줘야했다.우선순위가 더 높은 것에 true를 리턴해줘야 했다.Compare 구조체도 사실 이번에 알았다.기존에는 첫 번째 풀이처럼 Compare 함수를 만들어 넣었었는데,괄호 연산자를 재정의하는 구조체는 이번에 처음 써보았다.Template은 모두의 코드에서 공부했다.궁금한 것들이 죄다 있어서 유익했다.Iterator는 C#랑 비슷한 것 같은데,사실 C#에서도 별로 써본적이 없어서.. ㅎㅎ..더 공부해봐야 할 것 같다.Container Adapter? 라는 것도 잘 와닿지않는다.마찬가지로 더 공부해야겠다.." }, { "title": "🌱 Tele-port", "url": "/posts/DayStone-230209/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-02-09 17:40:00 +0900", "snippet": "🗿 Tele-portTelegram, Tele ‘멀리’ - gram ‘쓰다’, 멀리 보내는 글, 전보 전신.Tele가 ‘멀리’ 라는 뜻이라면 Teleport는 Tele멀리-port보내다? 이동하다?오 정말 port는 나르다 운반하다 라는 뜻을 가졌다.어근으로 영어 단어 공부하기. 음음 좋다." }, { "title": "🌱 일단락", "url": "/posts/DayStone-230208/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-02-08 14:01:00 +0900", "snippet": "🗿 일단락어제 일 작업 하나가 끝났다.이제 일 작업은 정말 하나 남았다.그 작업과,다른 작업 하나도 마저 끝내면,이제 나에게 남은 마감은 없다.부지런하자간바루조이 !🗿 왓챠2월 10일이 왓챠 구독 결제일인데그동안 막 챙겨보지를 않아서 이제 구독 취소해야겠다고 생각했었다.그래서 어제(8일) 미리 취소를 해두려고 했었더랬다.근데 취소를 하려고 하니까왓챠에서 1개월를 무료로 들을 수 있게 해준덴다.감사히 받았다.3월 10일까지 못 본거 챙겨봐야겠다.🗿 북마크요즘 내가 사용하는 북마크의 수를 줄이고 있다.그 이유는 북마크 수가 쓸데없이 많아지고 있었고,한 가지 일에 몰입하지 못하고 북마크를 이러저리 눌러가며 시간을 낭비하고 있었기 때문이다.그동안 매일 컴퓨터를 키고 하는 일이,브라우저를 키고 구글 서치콘솔에 들어가 블로그 상황을 보거나,이유도 없이 무작정 유튜브나 트위터에 들어가 새로고침을 하는 것이었다.굉장히 낭비라고 생각했다.이런 습관을 줄이기 위해 북마크를 없앴다.그러고 나니 확실이 이유도 없이 웹 서핑을 하는 일이 줄어들었다.계속해서 줄여나가야겠다.반대로 습관적으로 들어가기 위해 일부러 북마크를 남겨둔 것도 있다.Quizlet 이라든지 Merriam-Webmaster 라던지..근데 또 이런건 잘 안 들어가게 되는 것 같다 ㅋㅋ🗿 유튜브 재생목록일주일 정도 전부터 유튜브 재생목록도 정리하고 있다.추억이 있는 영상들을 저장해뒀던 ‘홍삼 캔디’ 재생목록과,내 음악 플레이리스트엔 없지만 언젠가 생각날 때 듣고 싶은 음악들을 모은 ‘창고 속 음악’ 재생목록을 내 기억과 함께 글로 정리했다.아직 ‘저장’ 재생목록은 정리하지 못했다.이전 하룻돌에 적지 않았던 것 같아서 여기에 적는다.드라이브에 있는 영상들도 슬슬 정리해야겠다.🗿 지역변수 초기화지역변수는 임의의 값을 가진다.오늘 문제 풀면서 이걸 망각했따.기본적인 것도 망각하다니기본기가 부족하다공부해야겠다나는 공회전을 하고 있다🗿 영어발음 기호를 외우자한 번에 외우려고 하지 말자한 번에 10분 X, 나눠서 10분을 만드는동의어 유사어를 같이 외우자 - 커넥션이미지를 활용하자 - 커넥션🗿 공부할 것CPP TemplateCPP make_pairCPP priority-queUe기본적으로 내림차순 - 최대큐?greater🗿 서울의 달22년 2월 8일, 루석바 서울의 달 촬영 관련으로 VRChat 밍뚜껑님 춘식님 뵀었다.처음으로 컨텐츠 관련 도움을 준 날이자, 처음으로 고멤 본 날이었다.영상 정리하다가 메모" }, { "title": "⛏️ 블로그 관련 북마크", "url": "/posts/Blog/", "categories": "⛏️Memo", "tags": "", "date": "2023-02-08 13:53:00 +0900", "snippet": "네이버 서치어드바이서다음 검색등록구글 애널리틱스구글 서치콘솔빙 웹마스터Jekyll 도큐Hahwul.com, 디자인이 이쁘다" }, { "title": "🌱 불안해~", "url": "/posts/DayStone-230206/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-02-06 23:07:00 +0900", "snippet": "🗿 블렌더 애니메이션요런 걸 만들었다.IK 튜토리얼을 따라했는데,키스마 모델에는 Twist 본이라는 게 있고 (뭔지 모름)Upper Arm 이랑 Lower Arm 이랑 Connect 가 되어있지 않아서 그런지손 IK 설정을 해도 손이 따라오지 않았다.검색해봐도 내가 원하는 답을 잘 찾지 못했다.이럴 때마다 답답하다.뭔가 하고 싶은데 어찌할 바를 몰라 막힐 때.지금까지 해온 게 의미없는 것 같고, 이제 뭐 어떡하지 하는 생각밖에 들지 않는다.그래도 뭐라도 만들자는 마인드로영상을 뽑아봤다뭔가 만들 수 있다는 가능성은 봤다.내일은 Arm 리깅을 내가 직접 만들어볼까..아니면 Connect 하는 방법을 찾아볼까..🗿 국비 지원 카드작년에 신청했을 때에는내가 대학교 2학년이었어가지구 불가능하다는 우편을 받았었는데이제 대학교 3학년이 되었기 때문에,이제는 되지않을까 하는 생각으로 무작정 신청을 했었더랬다그리고 오늘 카톡으로 발급 접수가 되었다고 연락이 왔다얏호근데 내가 듣고 싶었던 강의가 신청 기간이 끝났다.이런좀 더 찾아봐야겠다🗿 작업점심부터 하루 종일 작업했다그래도 끝나지가 않는구만🗿 저녁바싹불고기깻잎이 맛있었다" }, { "title": "⛏️블렌더 애니메이션 ", "url": "/posts/Blender-Animation/", "categories": "⛏️Memo", "tags": "", "date": "2023-02-06 11:34:00 +0900", "snippet": "💎 본이 위에 보이게 하는 방법본 선택 -&amp;gt; 초록색 졸라맨 -&amp;gt; Viewport Display -&amp;gt; In front 체크💎 본 Deform본이 모델의 Weight 값을 받는지에 대한 유무본이 움직이면 모델도 따라서 Deform 되는지💎 블렌더 애니메이션 키 프레임이 안보여 휠 올려보기 View -&amp;gt; Frame All 을 선택하여 모든 키 프레임이 보이게 키 프레임 만들기 - i 포즈 리셋 포즈 모드에서 ALT R(Rotation) G(Position) S(Scale) 포즈 모드에서 Space, Clear Pose Transforms 검색 첫 프레임으로 Shift + &amp;lt;- 💎 본 팔면체에서 다른 모양으로 바꾸기본 선택 -&amp;gt; 초록색 졸라맨 -&amp;gt; Viewport Display -&amp;gt; Display As 변경💎 회전척추는 진행방향으로 조금 기울여진다 - 중심을 잡기위해발을 밟는 쪽으로도 조금 기울여진다팔을 앞뒤로 뻗을 때 어깨도 같이 기울여진다💎 IK Len0 연결된 모든 본1 자기 자신2 한 단계 위까지Ctrl + Page Up/Down💎 가동 범위 제한Pose 모드에서,Bone -&amp;gt; Inverse KinematicsLock IK -&amp;gt; 회전 제한Limit 체크 -&amp;gt; 회전값 제한Alt + R 회전 초기화💎 Auto IKTool -&amp;gt; Auto IK연결된 본들의 말단 본에 한하여 작동하는 듯💎 Color Managementhttps://docs.blender.org/manual/en/latest/render/color_management.htmlView TransformFilmic (Default) : Photorealistic 실사Standard : Non-Photorealistic💎 BSDF빛과 상호작용해서 쉐이딩 결과물을 출력하는 노드Bidirectional Scattering Distribution Function빛이 재질과 어떻게 상호작용 하는지 -&amp;gt; BRDF + BTDFBRDFBidirectional Reflectance Distribution Function빛이 어떤 방향으로 반사가 되는지BTDFBidirectional Transmittance Distribution Function빛이 어떤 방향으로 투과가 되는지💎 FK IKTargetPole Target💎 MMD 모션bowlrollnikoniko💎 Memo프레넬 효과Layer Weight, Fancing매트하다Specular -&amp;gt; 하이라이트 영역💎 Mesh랑 함께 ExportArmature만 Export하니까 애니메이션 베이크 할 때 Constraints가 적용이 안된다" }, { "title": "🌱 슬슬", "url": "/posts/DayStone-230205/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-02-05 12:25:00 +0900", "snippet": "🗿 슬슬오늘은 2월 5일.올해 약 10% 진행됐다.방학도 한달 채 남지 않았다.이런 젠장좀 더 부지런해야 한다.간바루조이 !🗿 MMD to Unity마감 하나를 끝낸 이후,하고 싶었던 것 하나를 해봤다. MMD4Mecanim을 통해 VMD를 FBX, 유니티 애니메이션으로 변환이후 타 모델에 애니메이션 적용변환 시 PMX/PMD 모델에는 오브젝트에 달린 MMD4 Mecanim Model 스크립트를 통해 Bullet Physics로 물리 적용타 모델에는 적용하지 못하기에 Dynamic Bone을 적용하여 물리 구현이후 유니티 내장 Recorder를 이용하여 녹화했다.키스마 이쁘다.내일은 시네머신을 적용시켜볼 것.손맵 애니메이션도 배우고 싶다.포토샵도 영상편집도그러기 위해선 어도비를 구독해야한다.🗿 저녁동생과 부모님이 장을 보고 오셨다저녁은 초밥과 호빵과 오뎅과 체리 (응?)🗿 애니메이팅휴머노이드 애니메이션은,유니티에서 키 프레임으로 찍지 못한다타 애니메이션을 리 타겟팅하는 느낌인 것 같다.Generic으로 바꾸면 찍을 수 있다고는 하는데,그냥 다른 툴을 쓰는 게 지원해주는 것도 많고 해서 좋다고 한다.블렌더 애니메이팅을 다시 배워봐야겠다" }, { "title": "🌱 시덥잖은", "url": "/posts/DayStone-230204/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-02-04 08:34:00 +0900", "snippet": "🗿 시덥잖은우리 집은 강아지 두 마리를 키우는데그 중 한 마리가 오늘 죽었다아침에 일어나 책상 앞에 앉아 인터넷이나 하고 있었는데큰방에서 동생이 큰 소리를 치길래자기 친구와 타기로 했던 KTX 차 놓친건가 싶어 가봤더니한 구석 바닥에 죽어있었더랬다몸이 정말 차가웠다어제 내 의자 뒤 바닥에 누워 꼬리를 흔들며제대로 일어나지도 못하면서 내 손에 얼굴을 파묻던 모습이 생각났다슬프진 않았다덤덤한 기분이다아직 살아있는 다른 한 마리는자기 형제 죽었는지도 모르나보다평소랑 다를 거 없이 집안을 활기차게 돌아다닌다시츄가 그렇게까지 생각이 많지는 않아서 오히려 다행인건가혼자서도 잘 지낼 것 같다장례를 치르고 왔다추모실에서 마지막 시간을 보낼 때는 별 생각 없었는데화장 시작되기 직전 화로의 철문이 닫힐 땐 눈물이 고였다울지는 않았다그러고 그냥.밥먹고 집에 왔다돌아오는 길에솔직히 장례 퀄리티에 비해 가격이 좀..철문 닫을 때 세 번 끊어 닫는 게 뭐야 술 세 번 나눠 따르는 것두 아니구..하면서 시덥잖은 농담이나 했다별 다를 게 없는 하루였다조금의 공허함만 느껴졌다." }, { "title": "⛏️ 홍삼 캔디 - 유튜브", "url": "/posts/Nostalgia-Youtube/", "categories": "⛏️Memo", "tags": "", "date": "2023-02-02 23:02:00 +0900", "snippet": "나의 추억, 그 중에서도 유튜브와 관련된 것들.나의 유튜브 재생목록인 ‘홍삼 캔디’ 와 ‘창고 속 음악’ 을 기억과 함께 문서로 정리한다.💎 홍삼 캔디내가 어렸을 때 토마스를 정말 좋아했다.그래서 그런지 어렸을 때 부터 컴퓨터로 토마스 영상들을 봤었다.예를 들어 Accidents will happen 이런 영상들..향수가 있다.장난감 공 공장 이런 것도 심오하게 봤던 것 같다.의식을 가지고 제대로 유튜브를 보기 시작한 건,아마 부모님께서 처음 스마트폰이라는 것을 가지셨을 때.어릴때부터 방구석에서 컴퓨터를 해오던 나에게,집 밖에서도 게임을 할 수 있는 스마트폰은 정말 탐나지 그지 없는 물건이었다.물론 그 이전에 폴더폰이라는 것도 존재하긴 했지만,나에겐 휴대전화가 없었다.학교 다녀오면 부모님의 스마트폰부터 붙잡아 이리저리 조작하고,게임이랑 만화 앱도 설치하고 그랬었다.그러다 자연스레 유튜브에도 들어가보지 않았나 싶다.옛날 그 유튜브 앱 특유의 UI가 있었는데..기본 다크 모드에 검색창만 달랑 있었던 걸로 기억한다.당시 학교 친구들에게 마인크래프트를 배웠던 걸로 기억하는데,그래서 그런지 내가 기억할 수 있는 가장 옛날에 본 영상은,마인크래프트 믹서기 영상이다.영상 내용은..사암 평지에서 3칸 * 3칸 함정을 파두고,좀비가 그 안에 떨어지면,함정 안에 있던 네 방향의 피스톤이 차례대로 움직이며,피스톤에 밀리는 철블럭이 좀비에게 데미지를 줘 압사시키는.. 그런 영상이었던 것 같다.원본은 못 찾겠다.분명 최근 몇 년까지도 봤던 것 같은데..이 링크 인데 비공개 된 것 같다. 이 영상도 본 기억이 있는 것 같다.별개로 남녀가 벽에서 가벼운 애정행각을 하는 흑백의 영상도 봤던 것 같다.어린 나에게 굉장히 자극적이었나, 기억이 난다.무튼..내가 기억할 수 있는 가장 옛날에 본 유튜버는,‘애플’ 이다.레트로 풍의 BGM이 나오던 옛날 인트로와 ‘크흠.. 안녕하세요, 애플입니다.’ 하는 인삿말이 기억난다.내 재생목록에 저장되어 있던 영상은 이렇게 두 개.스타바운드는 그 때 그 시절 본건 아니지만,정말 재밌게 봤던 기억이 있다.‘애플’ 다음으로는.. 아마 ‘대도서관’내 재생목록에 저장되어 있던 영상은 이렇게 여섯 개.정말 저 마인크래프트 생존기 영상은 볼 때마다 향수에 잠기게 된다.저 화면 비율과 채팅창, 특유의 옛날 감성과 너무나 건전한 방송 분위기.그리고 한동안 대도서관 브금으로 불리고 있는 몬스터 헌터 BGM들.무엇하나 흠 잡을 때가 없다.특히 몬스터 헌터 BGM은 정말 미쳤다.방송에 나왔지만 널리 알려지지 않은 BGM들을 찾느라 몇 년동안 유튜브를 해맨적도 있다.무튼 저 마인크래프트 영상으로 입문하고 구독하여,한동안을 영상 챙겨보고 좋아했다.단추 이름 정할 때도 기억나고,중간중간 추천송과, 중간 광고들도 기억나고,물 꼬로록도 기억나고,처음 얼굴 공개했을 때의 충격도 기억나고..게임 방송하던 사람이 처음으로 공중파 방송에 나왔을 때,내가 성공한 것 처럼 기뻐서 막 부모님께 자랑하고 했던 기억도 있다.까탈레남, 개꿀잼몰카, 캐서린, 쏘지마세요, 우리야옹이에겐요런 것들도 기억나다.도쿄정글, 이랑 심시티 시리즈도 너무 재밌게 봤던 기억이 있다.심시티는 이를 계기로 직접 구매해서 플레이도 했었다.언더테일.. 을 여기서 처음 봤었나? 그랬던 것 같다.그 다음부터의 순서는 잘 모르겠지만,어쨌거나 마인크래프트 유튜버를 한동안 봤었더랬다.싱잉스타뭔가 깔끔하고 모던한 감성을 가진 이 분의 영상이 좋았다.위에 언급했던 레드스톤 회로 영상들로 입문했고,레드스톤으로 여러 장치를 만드는 생존기를 재밌게 봤었다.목소리 없이 자막만 나오는 것도 좋았고,마우스 포인터로 타이틀을 세 번 치는 인트로와April Showers, 이 BGM으로 나오는 아웃트로가 인상깊었다.영상1, 영상2북극곰, 쿠퍼, 바위골렘세 분 다 잔잔한 느낌으로 재밌게 봤던 것 같은데,앞에 두 분은 영상을 내리신건가 검색해도 나오지가 않는다.바위골렘 황혼의 숲, 연금술사? 막 샤드 나오는 그런 모드 재밌었다.공갈서버 테러랑 마검 탈출맵 재밌게 봤었던 것 같다.4시한창 뭔가 심영물 같은 병맛 감성 좋아할 때, 비슷한 감성으로 봤던 채널병맛 감성의 마인크래프트 영상과 별개로, 작곡 영상들이나 실험 영상도 좋아했다.도토리박스도 이 채널을 통해 알게 되었었다.양띵, 악어, 도티우리나라 마크 삼대장.적힌 순서대로 최애를 갈아탔었다.셋 중 가장 먼저 봤던 양띵그만큼 기억나는 게 많이 없다.인생게임, 핵전쟁, 크리스마스 마을 만들기? 이렇게 세 개 정도 기억난다.고멤중에 미소랑 옴므를 좋아했던 것 같다.외국 서버 테러 이후로, 안티가 많이 생겼던 걸로 기억하는데,카카오 스토리에서 팬덤명 양덕/띵덕 가지고 한동안 모르는 이들이랑 많이 싸웠었던 것 같다.지금 생각하면 부끄러운 흑역사..제일 좋아했던 건 악어한 때 ∀ 기호를 닉네임 앞에 달고 열심히 팬활동을 했었더랬다.모든 컨텐츠를 좋아했다.살인마를 찾아라, 빵튀, 랜덤무기전쟁, 신들의 전쟁도 너무 좋았고,악어의 숲, 마크에이지, 종족전쟁, 늪지대 컴퍼니가 올라오는 날이면 행복하지 그지없었다.친구랑 하교길에 컨텐츠 이야기만 했던 것 같다.고멤들도 다 좋아했다.개리, 배추, 너불 좋아했었던 것 같다.고멤은 아니지만 도트리, 스펀지골드도.그중에서도 특히 개리.. 임종호 호 할아버지..특유의 말투와 개그가 너무 취향이었다. 이걸 본 이후,첫 인생 일본 애니메이션으로 니세코이를 보기도 했었다.친구들이 마인크래프트를 유치해하기 시작할 무렵,도티를 좋아했다.도시 능력자 대전으로 늦게 입덕하고,도도한 친구들에 입덕했었다.장기 컨텐츠는 없었던 걸로 기억해서,그렇게 막 뭐가 기억에 남거나 하지는 않지만,역시 잔잔하고 건전한 그런 분위기가 좋았다.크루 중엔 빅민은 좋아했었다. 빅민 타임~비콘 유튜브에서 미니 메트로 영상보고,게임 재밌어서 보여서 산 적도 있다.샌드박스 MCN이 만들어지고 여러 크리에이터들과 채널들이 생겨났고,또, 도티 채널에 영상이 점점 올라오지 않으면서,점차 다른 채널들을 보기 시작했었던 것 같다.더 이상 내가 마인크래프트를 하지 않는 것도 이유였을 것이다.샌드박스 관련해서는 삼시보, 우왕푸왕이나 뽕필학생, 설레임, 파파독(원래 배틀로얄 같은 채널명이었던 걸로 기억)을 봤었다.설레임에서 강지를 좋아해서 따로 구독하고 봤었는데,그러다 점차 트위치 방송 쪽으로 관심이 틀어진 것 같다.김도, 김나성도 잠깐 봤었고,똘킹 보다가 똘악서연, 에렌디라를 보게 됐었다.그러다 똘악서연 해체되고..한창 배그하다가 왁굳형 배그 유입으로 보게 된 것 같다.다시 과거로 돌아가서,마인크래프트 다음으로 주로 했었던 게임은 클래시 오브 클랜과 클래시 로얄.원래 클래시 오브 클랜으로 구독했었던 올드팝과 테드,그리고 클래시 로얄로 유입되어 엔젤7777, 하창봉, JUNE을 주로 봤었다.다른 유튜버도 물론 많긴 했는데.. 감성이랑 잘 안 맞았다.그 외 봤던 채널은..쿠키런 - 깊은 산속에, 퓨우메이플 - 개구릿대모두의 마블 - 랩해도돼롤 - 마재, 메도우이헌터, 텔론, 보겸포켓몬 카드 - 프라임 타임 포켓몬배그 - 김블루기타 - 티키틱, 지식인미나니, 단비스, 유준호, 최고기, 릴마블, 스팀보이, 소희짱(끓는다 끓어), 똘똘똘이마인크래프트 - Jerry And Harry봤던 건 아니지만, 김마메, 로이조마인크래프트 노래 많이 들었다. 어렸을 때 네이버 블로그에 마인크래프트 노래 글 같은 거 적었던 기억이 있다.마인크래프트 몬스터 도감 같은 것도 적고, 죽음의 왈츠 같은 것도 적고..추억이다.노트블럭, 그 시절 감성 뮤직비디오 이런 것도 재생목록에 저장되어 있다.한동안 유튜브를 지배했던 티비플.이런 영상과 이런 영상이 재생목록에 저장되어 있다.하츠네 미쿠는 취향에 맞지 않아서 듣지 않았었는데,시유는 몇 개 들었던 것 같다. 나중에는 뇌이징되고 다 듣게 되었지만.콩글리쉬, 홍시송, 쌍둥이 성좌, 숨바꼭질 등등..머핀 타임.이런 류의 영상들 보다가 Beep Beep I’m a Sheep 알게 되고....그러다가 마팔 선생님을 알게 되었었다.고전 영상인 쿠쿠섬 치킨과,쿠쿠섬 치킨 커버도 좋아했었다.비슷한 감성으로 아기 공룡 둘리 커버, 개츠비 광고도 좋아했었다.병맛 + 고퀄 키워드를 좋아했던 것 같다.각시탈 빙고 모음, 하람 - 메이플 브금.꽉 묶인 비닐봉지 푸는 방법, 모션 그래픽 같은 것도 봤었다.우유송핑맨 노래슈퍼번https://youtu.be/eexyX8oL1WEhttps://youtu.be/lYLWD7n_0TAhttps://youtu.be/hzGS9QpKwas홍삼 캔디 재생목록에 저장되어 있었는데 비공개/삭제된 영상들의 주소뭐였을까..💎 창고 속 음악램Lamb - 언더테일 합주_ ♬Undertale animation언더테일에 빠져 관련 영상들을 찾아봤을 때 봤었던 영상.음악도 음악이지만, 부드러운 그림체가 정말 좋다.Hit the road Jack!길을 치다 - 먼 길을 나서다, 여행길에 오르다, 출발하다, 떠나다Reynah - 인터스텔라 Interstellar OST : “First Step” Piano cover 피아노 커버 - Hans ZimmerReynah 이 채널도 많이 봤었다.인터스텔라 OST First Step 는 들을 때 마다 소름이 있다.Envane - Shia LaBeouf - Just Do It (Make Your Dreams Come True) [Ultimate Remix]왠지 모르게 저 ‘Just Do It’ 영상에 꽂힌 적이 있다.관련 영상을 찾다가 보게 된듯.놈놈놈 OST빠삐놈 병神놈놈놈만 저장되어 있긴 했는데, 아마 빠삐놈 병神 때문에 저장한 것 같아서 같이..딕훼밀리 - 또 만나요이제는 우리가 헤어져야 할 시간~함중아와 양키스 - 풍문으로 들었소장기하에 빠져있을 때 찾게 된 원곡.M.C. Hammer - U Can’t Touch This왜 아는 지 모르겠지만 어렸을 때 들었던 기억이 있다.카세트 테이프로 들었었나?동생의 분홍색 바비 카세트 테이프 플레이어가 왠지 생각난다.Circus Charlie (NES) Music - Stage 1어디서 들었더라.Parov Stelar - All Night (Official Audio)아이폰 광고였나?A.DE (에이디이) – Strawberry (스트로베리)에렌디라 구독이었나 후원 이펙트 사운드Tido Kang - 애국가를 연주해보았습니다.Tido Kang도 많이 봤었다!Scatman (ski-ba-bop-ba-dop-bop) Official Video HD - Scatman John왜 알게 됐더라.LEESSANG Crown 광대오, 내 웃고 있나요~Caravan Palace - WonderlandMomotaroVeorra - SilkPogo - ForgetAustin Mahone - Mmm Yeah ft. PitbullBIG DATA - Dangerous [Oliver RemiX]모두 유튜브 애니메이션 밈으로 알게되었던 걸로 기억한다.그러고 보니 애니메이션 밈도 많이 봤었다.색깔볼펜, TITANIA 두 분을 좋았던 걸로 기억.대부 OST 1. Main Theme주로 개그콘서트 어떤 코너에서 들었던 것 같다.밥 먹자였나The Script - Hall of Fame (Official Video) ft. will.i.am어디서 들었더라.Katy Perry - Firework (Official Music Video)어디서 들었더라.Can’t Help Falling In Love on a Kalimba똘킹 악기 살 때 들었었..나?Yiruma - Maybe어디서 들었더라. 왠지 모를 향수가 있다.Beauty and the Beast “Belle” | Sing-A-Long | DisneyCarmen Twillie, Lebo M. - Circle Of Life (Official Video from “The Lion King”)The Lion King - I Just Can’t Wait To Be King (1080p)Cast of The Lion King - Can You Feel The Love Tonight (from “The Lion King”)Pocahontas - Colors of the Wind HD전부 DVD로 봤었더랬다. 다 추억이다.Deep Purple - Smoke on the Water (Audio)어디서 들었더라.Gold &amp;amp; Jive-Silver Ocean원피스 극장판 노래, 티저에서 봤었나? 도입부가 레전드Dr - I Keep Holding On (My Hope Will Never Die)어디서 들었더라.은송 - 도만 나오는 노래은송 - 레까지 나오는 노래알고리즘으로 봤던 것 같다. 언젠가 ㅊㅅ랑 이야기 했던 노래.HYUKOH(혁오) - TOMBOY(톰보이 뮤직비디오) M/V이거 왜 창고에 들어가 있었지. 좋다.Fun.: We Are Young ft. Janelle Monáe [OFFICIAL VIDEO]이거도 왜 창고에 들어가 있었지. 좋다.Darude - Sandstorm밈은 나중에 알게 되었었고, 무튼 어디선가 들어서 알고 있었다.그 휴대폰 앱 중에 효과음 같은 거 모은 앱 있었는데, 거기서 들었던 것 같기도 하고.a-ha - Take On Me (Official Video) [Remastered in 4K]어디선가 들었다가, 다크 소울 밈으로 다시 한 번 알게된George Michael - Careless Whisper (Official Video)모를 수가 없는. 노래 좋다.Rainbow Road삑사리나는 타이타닉 리코더 영상 연관 동영상으로 있었던 걸로 기억NOMA - Brain Power트레인파워{현토끼/)/)} 마감프로젝트 :: 유즈키 유카리 - 마감은 아직입니까? (Feat. 커피슈, 녕) ver KOR 【歌ってみた】트위치에서 많이 봤었던Benny Benassi - Satisfaction중학교 도덕시간에 봤던 지식채널 E 영상에 배경음악으로 나왔던 노래한 번 듣고 뇌리에 박혀서 집와서 찾아봤는데, 뮤비가 심상치 않았었더랬다.Sneaky Snitch – Kevin MacLeod (No Copyright Music)Sad Romance (Violin Version)Jerry And Harry 영상에서 자주 들었던PSY - GANGNAM STYLE (FT. THOMAS THE TANK ENGINE: (강남스타일) M/V초등학교 때였나 ㄷㅈ이가 알려줬던 걸로 기억하는Kizuna AI - AIAIAI (feat. 나카타 야스타카)【Official Music Video】노래는 좋다. 음음애국가 편곡 - 이런 나라가 되어줬으면 하는 바람입니다“아리랑 랩소디 (Arirang Rhapsody)” Piano Solo 피아노 솔로 커버 - Lee Ji Soo 이지수아리랑 뉴에이지 ( Arirang Newage ) - JayM ( 제이엠 )섬집아기(밤하늘 피아노 편곡ver.)동대문을 열어라 &amp;amp; 우리집에 왜 왔니[Korean Traditional Music Remake] Ganggangsullae for Haegeum and Piano : 해금과 피아노를 위한 강강술래대문놀이 - nokyung lee국뽕에 빠졌을 때THX Sound Effect Remastered HD (Warning Huge Bass)A THX sound system testDVD 보면 듣게되는. 계속 생각난다.Baby Shark (Trap Remix)[리믹스] 18-19 침착맨 아웃트로 침펄매직 (Prod. JE.ON) 제온[피아노]까치 까치 설날은 (Piano ver.) - JE.ON(제온)[Remix] 어 그렇게 드로우를 많이 하면 ~ LookSam 룩삼 리믹스 (Prod.JE.ON, COVER by TROUBlE JAY)뭐지.Super Mario World Theme Song (GFM Trap Remix)마팔 선생님 방송보다가 들었던 걸로 기억Yunomi feat. Nicamoq - ロボティックガール (Snail’s House Remix)우지코 연관 동영상으로 떴었나?Pendulum - Blood Sugar [1080p HD]MLG 볼 때 들었던 느낌Tambourin김세환 - 목장길 따라 kpop 韓國歌謠와썹, 사딸라Stay Tuned - are you there?Lofi 듣기 시작했을 때PIKASONIC - New Start!deadman 死人 - “Omae Wa Mou / 이미 죽어있다”┃듀엣 (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧ (커버곡)deadman 死人 - “Omae Wa Mou / Already Dead” (Piano) | Tiny Little Adiantum알고리듬Ether - Silent Partner악어 컨텐츠하면서 많이 들었던 것 같다Songify This - Reality Hits You Hard Bro고전POP / STARS 𝐯𝐬 메갈로바니아AWAKEN MY POP/STARS (Pillar Men x K/DA Mashup)KDA 샌즈 삼기둥Alan Walker - Alone매드무비? 런치패드?Giorno’s Theme in 5 Styles of MusicCocktail Jazz 버전이 미쳤다Skeewiff - Matador (Official Audio)해피투게더 요리 할 때 나오는MACINTOSH PLUS - リサフランク420 / 現代のコンピュー |(reupload)Vaporwave와 Lofi가 유튜브를 가득채우던 때가 있었다.ＳＡＮＳ 이런 글씨체와 함께.Kiss the rain-Yiruma(이루마)가야금커버 Gayageum cover By.Yeji기차역, 지하철 특유의 분위기를 좋아하는데,거기에 불을 더 세차게 지핀 음악.Chika’s Dance - Kaguya-sama: Love is War ED 2 - “Chikatto Chika Chika” (Piano)치카치카Renai Circulation「恋愛サーキュレーション」歌ってみた【＊なみりん】티비플로 먼저 알게 된Tomorrow (annie) Lyrics동생이 합창단에서 불렀던 노래.영화도 영어 시간에 봤었던 것 같다.The Raindrop Flower (Jazz Ver.)｜메이플스토리 (MapleStory) OST : Jazz of MapleThe Cygnus Garden (Jazz Ver.)｜메이플스토리 (MapleStory) OST : Jazz of Maple재즈에 메이플? 참을 수 없다.Somewhere Over the Rainbow - The Wizard of Oz (1/8) Movie CLIP (1939) HD동생이 합창단에서 불렀던 노래.그걸 떠나서 너무나도 좋은 노래.[MV] REOL - No title알고리즘. 좋다.Sam Brown - StopCareless Whisper와 같은 류의Undertale Remix ▸ Waterfall Theme ▸DJ-R ft. bLiNd음악도, 그림도 좋다.다섯 손가락 OST Part 1:임정희 - 날 사랑하지마다섯손가락OST - 지호의 theme어렸을 땐 밤 늦게 게임을 못하니까, 가족과 옹기종기 모여 TV 드라마를 보곤 했다.다섯 손가락 내가 좋아하던 몇 안되는 드라마 중 하나.초등학교? 중학교? 학교에서 많이 이야기 했었던.그렌라간의 대표 ost 【 libera me from hell 】내가 좋았했던 영상 중에 로봇 크기 비교인가 우주적 존재 크기 비교인가 있었다.거기에 나왔던 배경음악.추후 그렌라간을 보면서 가슴이 웅장해졌었더랬다.Faint [Official Music Video] - Linkin ParkJohn Legend - All of Me (Official Video)Adele - Rolling in the Deep (Official Music Video)SKRILLEX - Bangarang feat. Sirah [Official Music Video]Survivor - Eye Of The Tiger (Official HD Video)Smash Mouth - All Star (Official Music Video)Owl City &amp;amp; Carly Rae Jepsen - Good Time (Official Video)Moby - ‘Extreme Ways’ (Jason Bourne) (Official Audio)The Black Eyed Peas - Pump It (Official Music Video)Billie Eilish - bad guyGrandmaster Flash &amp;amp; The Furious Five - The Message (Official Video)LMFAO - Shots ft. Lil Jon외국 노래는 이상하게 어디서 들었는지 모르겠는데 다 안다.블루(BLOO) - Downtown Baby / 가사나는 가요, 랩/힙합 같은 걸 잘 듣지 않는다.그치만 가끔 귀에 꽂히는 노래들이 있다.익화리의 봄ㅈㅎ이가 디코에 틀었었던아유미 Cutie Honey(큐티하니) (가사 첨부)갸루상으로 먼저 알게된일본 노래같은데 한국어가 들리는 매직Eurythmics, Annie Lennox, Dave Stewart - Sweet Dreams (Are Made Of This) (Official Video)개좋음. 근데 어디서 들었더라.Hopes and Dreams “Orchestrated”정리하다보니 언더테일 뽕이 차오른다실버판테온 - 장범준 SILVERPantheon빵테오오오오오오오오오오오온똘삼 - 똘러코스터 EDM MIX 풀버전 (EXTENDED)[똘삼] Plastic Coaster (똘러코스터 × Plastic Love)[똘삼] 똘러코스펙터자꾸Snow Halation but it’s Bakamitai이것도 마팔 선생님 방송보다가Birthday Song for ミク / 鏡音リン･レン､巡音ルカ､KAITO､MEIKO【公式PV】Hatsune Miku ~ Triple Baka - Full Song (English Subtitles v2) [LamazeP - REUPLOAD w/subtitles added]하츠네 미쿠&amp;amp; 카가미네 린의 프로레슬링 시합곡 [링의 세라프] 실황중계는 KAITO어느 순간 보컬로이드에 대한 장벽이 무너졌었더랬다후욱후욱[온스테이지2.0] 이날치 - 범 내려온다(with 앰비규어스 댄스컴퍼니)범 내려온다Queen – Bohemian Rhapsody (Official Video Remastered)보헤미안 랩소디 영화보고, 죠죠 보다보니 퀸 노래가 좋은 게 너무 많더라메이플스토리운명의소녀_오프닝영상그냥 좋다.K/DA - DRUM GO DUM ft. Aluna, Wolftyla, Bekuh BOOM (Official Audio)K/DA 신곡들 나올 땐 라이엇 뽕에 미쳤었다Back Street Girls: Gokudolls Ending Theme song (Male Version)Back Street Girls Gokkudoll Music (Full Song)넷플릭스로 들여다보게 된 심연근데 재밌긴 해.이후 BNA와 비스타즈도 이어서 봤다와우.로파이 느낌으로 즐기는 K/DA | 레전드 오브 룬테라K/DA + Lofi + 레전드 오브 룬테라참을 수 없다.🔮[MV] 소원 이뤄질 시간 D-day!💛 | 바나나맛우유 X BIBI (비비) X 람다람 - 요술단지이건 진짜 잊고 있었는데신세계 (2012) 리믹스 Remix거죽기 거죽기 따악 따악ずっと真夜中でいいのに。『お勉強しといてよ』MV（ZUTOMAYO - STUDY ME）ずっと真夜中でいいのに。『勘ぐれい』MV（ZUTOMAYO - Hunch Gray）인스턴트 헤븐 feat.Eve / 나나오아카리우타이테가 알고리즘에 많이 뜨던 때가 있었다Initial D- Looka Bomba유로비트도 알고리즘에 많이 떴었다Michael Jackson - Thriller (Official 4K Video)좋다. 근데 13분이나 했네Silent Hill 2 OST - TrueDead Silence - Main Theme 🤫 SCARY PIANO | + Sheet Music“Clouds” Huma-HumaIb OST - “Memory” (Ib’s Theme / Title Song)살인자를 찾아라이게 뭐얔ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ고음소리Owen Ovadoz - mmm (feat. nafla) [Official Music Video]어디서 들었더라.무튼 가끔씩 들어줘야 한다.어머니의 김치찌개 참을 수 없다.Tuvan Throat Singing인간 악기SUPER JUNIOR 슈퍼주니어 ‘쏘리 쏘리 (SORRY, SORRY)’ MV쏘리쏘리쏘리쏘리니가니가니가내게빠져빠져빠져빠져베이베[MV] IU(아이유)_LILAC(라일락)아이유 - 라일락 (시티팝 리믹스) IU - LILAC (Citypop remix)뭔가 J POP 느낌나서 좋다Axollo - Burn It [NCS Release]정상인 출입 금지Will Smith - Prince Ali (From “Aladdin”/Audio Only)Will Smith - Friend Like Me (From “Aladdin”/Audio Only)Will Smith - Arabian Nights (2019) (From “Aladdin”/Audio Only)뭔가 애매하게 재밌었던 알라딘 실사화노래도 애매하게 좋다EXO-K 엑소케이 ‘MAMA’ MV (Korean ver.)도입부가 참을 수 없다ナムルの純真 (配角的純真)모어 피치 서머 스노우!Wonder Girls(원더걸스) “NOBODY (Kor. Ver)” M/VGirls’ Generation 소녀시대 ‘Gee’ MVGirls’ Generation 소녀시대 ‘훗 (Hoot)’ MV올레 TV인가, 우리집 TV에서 뮤직비디오를 틀 수 있었는데그때 많이 틀었던 노래들마이티 마우스 (Mighty Mouth) 노래모음옛날엔 전혀 듣지 않았던 노래들인데,이상하게 작년부터 듣기가 좋다.Flavel &amp;amp; Neto - Eu Quero Tchu, Eu Quero Tcha (Official Video)랩해도 돼가 많이 틀었던 것 같은03. Fly Away팬스가에 한참 빠진 적이 있었더랬다.BE WORRIED, NOT HAPPY - a minor orchestral version of “Don’t Worry, Be Happy”왜 좋지BBC Sherlock Theme Song셜록홈즈 패러디한 청소기 광고가 인상깊었어서롯데칠성 | [칠성사이다로어슈거 X 김하온] I AM DOWN M/V (Full ver.)광고 노래가 좋아서Escaflowne- Dance of Curse예숙아 롤해예수가 너오래コノユビトマレD-selections / LAYon-theLINED-selections / 「AlegriA」リリックビデオTia / Deal with the devil카케구루이뮤비 왜 이래kyOresu - DORIME🙏🏻 (loli cover)제목이 이랬나[한글번역] Lauren Aquilina - King좋다Stratovarius - Forever (lyrics)아 망했는데요 이거는망했어요~Sting - Saint Agnes and The Burning Train (CD The Soul Cages)이광수 아웃 이광수 아웃Non, je ne regrette rienㄹㄹㄹㄹ리아Monster in My Pocket (NES) Music - Stage 04 Towering Catastrophe스묻ㅅ 라잌 버러【MV】 Kinetic Studio - 『달빛을찾아서』 (IRA Game OST)이라 얼른 정식출시하면 좋겠다[Official Audio] IDIOTAPE - Melodie (11111101)바위골렘 인트로Requiem for a Dream (original song)어디서 들었더라.Ritchie Valens - La Bamba바라람밤밤밤 밤바“SING, SING, SING” BY BENNY GOODMAN싱싱 불어라~그러고보니 흥 해라 흥 픽쳐스도 봤었지 참コットンキャンディえいえいおー!Kimpring 선생님 방송보다가[MV] BAEK JI YOUNG(백지영)_The woman(그여자) (SECRET GARDEN DRAMA OST Part.1)내 인생 첫 드라마는 시크릿 가든이었을거다Jason Mraz - I’m Yours (한국어 자막/해석/가사)Ben E. King - Stand By Me어디서 들었더라.Sandglass OST - Cranes생각났다뮤직플스토리와 너무 추억이다The Munchables OST – 18 – Panic Restaurant쁘르로세드래곤볼Z 시작할때 나오는 이전이야기 설명 브금클템 아앙~Old Boy OST - The Last Waltz어디서 들었더라.Beach House - Space Song밈, 근데 다시 들어보니 좋다.「 란마 ½ 1기 」 OP 『말괄량이로 만들지 말아줘』 (1080p, CC:KOR Subs)야빱빠 야빱바CLC(씨엘씨) - ‘Devil’ Official Music VideoMMDNice Boys색깔볼펜 애니메이션Matter of Time롤챔스였나 LCK였나Japanese Konbini Store song늪지대 패러디 영상으로 먼저 알게되었었다.비공개/삭제Snowpoint City포켓몬Anamanaguchi -「 Pop It (feat. meesh彡☆) 」 (Official Music Video)에렌디라Virtual Riot - Energy Drink (FREE DOWNLOAD)매드 무비https://youtu.be/PA5R7KWzjAk이건 못 찾겠다.." }, { "title": "⛏️ 홍삼 캔디", "url": "/posts/Past/", "categories": "⛏️Memo", "tags": "", "date": "2023-01-31 23:02:00 +0900", "snippet": "나의 추억을 상기시켜주는 문서생각마다 적을 것타인의 이름은 초성으로 적을 것 애니메이션 미국에서 봤던 Thomas &amp;amp; Friends Blue’s Clues Bob the builder Super Why! Snow Man - DVD Lazy Town Teletubbies Barney &amp;amp; Friends The Backyardigands Wonder Pets Louie Mickey mouse Clubhouse Dora the exploler Sesame Street Caillou The magical school bus Clifford Arthur Little Einsteins 한국에서 봤던 따개비루 뚜바뚜바 눈보리 치로와 친구들 캐니멀 토끼네 집으로 오세요 맥스엔루비~ 루비엔맥스 완소! 퍼펙튼 반장 뭐시기 OK * 3 메이플스토리 애니메이션 한자왕 주몽 닌자고 또봇 바비블루위키 하하I Spy 책Olivia 웹 사이트https://www.starfall.com/h/https://pbskids.org/텔레토비 그 청소기 같은 애 쿠키 뿌리는 거인터넷 게임 중에 그걸로 화면 꽉 채우는 거토마스무슨 펭귄 멀티 게임도 있었는데.. Club Penguin Online 이건가??모험하고 포탈타는 그런 게임도 https://pbskids.org/cyberchase/ 이건가?한국와서도 토마스 게임 했었는데..그때부터 성에..무슨 구슬 실험실 같은 거 게임색칠 놀이 같은 거 그림 그리고 프린트 할 수 있는거근데 잉크 비싸서 많이 뽑지는 못했음 ㅋㅋhttps://twitter.com/DIVE_2_BLUE/status/1182205028364247041?ref_src=twsrc%5Etfw어렸을 때 갔던 치과 천장 가까운 사이드 벽쪽에 기찻길이 있고, 거기에 작은 기차가 영상처럼 다니고 있었다토마스 좋아하던 나는 그 치과가 좋았던 것 같다그 치과에서 진료인가 받고 나면 스티커를 줬었다월 마트에 가면 노란 스마일 스티커를 주고는 했다내 연두색 필통에 붙였던 기억이 난다월 마트 안에서 비닐 봉투를 뒤집어 쓴 기억이 있다화물칸에 미니카들이 가득찬 트럭 장난감을 산 적이 있다계산하시는 분이 좋겠다고 말했다고 부모님이 전달해준 기억이 있다사자 인형 세 마리를 사고 자동차를 타고 집에 돌아오던 기억이 있다그 인형 한 마리를 한국에서 ㅈㅎ이었나 다른 집 애에게 준 기억이 있다내 인생에서 첫 번째로 후회되는 일이었다큰 장난감 마트에 가서토마스 장난감을 샀던 기억이 있다초딩 때 학급 책먼나라 이웃나라그 구슬 축구하는 거 달린 필통케로로 가방지니키즈깨비키즈내친구 포밍뿌야후꾸러기지게임 옷입히기동물농장엔젤메이플노래하는 영어 야후꾸러기i love egg졸라맨깜찍이 음료뽀로로 음료한컴타자 옛날꺼동아리 바둑동아리 마인이메이터컴퓨터실컴퓨터실 바탕화면 부수기bomb link주주 클럽미니게임천국컴투스프로야구마이펫과 놀기미니게임 ex골프소녀백과뭐 개구리 터지는 거아오오니버블버블테런리듬세상핑구2층 놀이방펜타스톰, ㅊㅅ가 추천해었던 걸로 기억하는데 2017년트페 같은 발헨싱이랑 가렌 같은애, 말파이트 같은 룸버, 황금 쓰는 길더, 카타 같은 버터플라이 많이 했었음데스티니 차일드, ㅅㅇ이가 추천했었던 걸로 기억하는데 2018년2019년 12월 20일 컴퓨팅 사고력 발표2019년 6월 7일 2019 청강문화산업대학교 만화 - 애니메이션 - 게임 콘텐츠 실기대전 _ 1차 공모 - 기획 부문 - 팔로우 나이트2019년 5월 18일 기획 학원 - 리그오브레전드 역 기획서? 분석 기획서?2019년 12월 19일 더 나은 프로그래머가 되기 위해서는?2019년 12월 8일 ㅈㅎ이랑 게임 만들기2020년 5월 10일 강릉명륜고 3학년 7반 1번 김도윤지구과학 과제물로 ‘컴퓨터 속에서 찾을 수 있는 광물과 암석’ 조사2020년? 교내 과학 사진 대회에서 비가 내린 도로 인도가 어둡게 보인 이유로, 표면이 매끄러워져 빛 난반사가 적어짐 -&amp;gt; 빛 총 반사량이 줄어들기 때문 이라고 조사, 신의 색칠놀이2020년? 교내 패임랩, 트랜지스터, 양자컴퓨터, 트랜지스터가 무엇인지, 트랜지스터 관점에서 본 슈퍼 컴퓨터와 양자 컴퓨터, 양자 컴퓨터의 쓰임, 3분 정도 발표했어야 했는데 5분인가 7분 발표 했던 것으로 기억2020년 6월 28일? 생물과학 과학자 발표시간에 마셜 니런버그 조사, 우리 학년에서 이거 버그아니야? 라는 말이 유행이였던 걸로 기억2020년? 영어 시간에 빅 데이터 조사2020년 체육 - 건강에 미치는 효과 중 신체적, 사회적 효과에 대한 보고서 제출 과제2020년 국어 7월 23일 - 책 발표 - 피, 땀, 픽셀. 대충 나는 게임 개발자 꿈꾼다, 근데 시장에는 기술 책 밖에 없었다, 근데 이 책이 나왔다, 책 내용 소개,동아리 책 대여 해주려고 했는데2020년 8월 12일 국어 - 인공지능과 인권자기소개서 쓴다고 노트북 가져가고태양계 프로젝트 만든다고 노트북 가져가고고3때 코로나 때문에 온라인 수업 할 때 좋았지 ebs 온라인 클래스지구과학, 생명과학 다 노트 정리 해보라고 했었어 가지고 고생좀 했었지영어 원어민 시간에 음식 레시피 영어로 발표 하는 거 우리 조는 카레C 동아리 했었지Special Force (아두이노) 동아리 했었지M-Unity 동아리 했었지미술 동아리 했었지고등학교 때 1학점짜리 그 뭔 과목에서 ㄱㅂ이랑 해서 이모티콘 만드려고게임 사업 계획서 썼었지 메이플이랑 옥토패스 트래블러 분석하고수학학원MIT APP INVENTER 로 뭐 많이 만들었는데2021년 비사 과제로 징벌적 손해 배상제 토론 찬성/반대 입장 조사2021년 창사 과제로 지금까지의 인생 정리하는 글교수님 친구가 블리자드 들어갔다고 했었음2021년 이산수학2021년 인호미 발표, 게임에서 적용되는 인공지능, 그 중에서도 길찾기, A* 알고리즘영어 1 2 정리 열심히슬라이드 캡처하고 다 타자치고 슬라이드랑 똑같이 중요 표시하고 -&amp;gt; 시험 오픈북이었거든그래서 둘다 A+210612 비사 과제로 꿈과 관련된 발표 3분짜리 찍어야한다고 자괴감 받으면서 영상인호미 강릉 인구 같은거 조사해서 발표2022년 첫 상황극 터진ㅈㅎ이랑 ㅇㅇ이랑 테라리아 - 다이너 마이트 겁나 터뜨려서 큰 구멍 만들었었지롤드컵 기념 롤크리에이터 공모전에서 가렌 글 쓴 적 있었음가렌 롤드컵에서 처음 나왔을 때, 올스타에서 나왔을 때 막 조사하고롤 부쉬 렌즈에 이상한 형상 보이던거 호들갑 떨면서 해도리한테 보냈다가 아니었던 거 레전드롤체 나왔는데 내 폰에서 안돌아가서 슬펏음에렌디라 보다가 산타한테 선물 받은게 트위치 첫 구독디코하다가 공사장 ASMR 많이 틀었지2020년 10월 14일 수요일[김도윤] [오후 9:51] 시험지 지금까지 모아둔거[김도윤] [오후 9:51] 버렸나보다[김도윤] [오후 9:51] 허무하네 갑자기[김도윤] [오후 9:53] 병신 진짜[김도윤] [오후 9:53] 뭐하냐[김도윤] [오후 10:02] 영동대 입시 설명회2020년 10월 20일 화요일[김도윤] [오전 7:21] 대부분 다시 정상 등교 하는듯[김도윤] [오전 7:22] 애기가 안녕하세요 라 했다[김도윤] [오전 7:22] 나 아저씨??2020년 8월 23일 일요일[김도윤] [오전 11:31] 타고[김도윤] [오전 11:31] 렌트카[김도윤] [오전 11:31] 레몬트리호텔[김도윤] [오전 11:32] 쓰레기 고양이[김도윤] [오전 11:32] 해미가[김도윤] [오전 11:32] 왼쪽갔다가 오른쪽[김도윤] [오전 11:32] 밥머고 바닷길[김도윤] [오전 11:32] Part[김도윤] [오전 11:33] 집[김도윤] [오전 11:33] 집 기상[김도윤] [오전 11:33] 데프트 영접[김도윤] [오전 11:33] 염소 닭 말 데프트[김도윤] [오전 11:33] 마라도[김도윤] [오후 3:31] 끝[김도윤] [오후 3:31] 짜2 짬2 사이다[김도윤] [오후 3:31] 물맛[김도윤] [오후 3:31] 고양이 발[김도윤] [오후 3:32] 하이스코어[김도윤] [오후 4:09] 끝2020년 6월 22일 월요일[김도윤] [오전 8:01] 새벽에 어떻게든 제출[김도윤] [오전 8:01] 금요일 오랜만에 게임[김도윤] [오전 8:02] 갑자기 뜬금 대주간다고함[김도윤] [오전 8:02] 토요일 아침 출발[김도윤] [오전 8:02] 블루투스 연결 음악 듣기[김도윤] [오전 8:02] 퀸 노래 광팬[김도윤] [오전 8:02] 11시 도착 4시간정도 걸림[김도윤] [오전 8:03] 무슨 칼국수집 가서 칼국우먹음[김도윤] [오전 8:03] 이디아가서 녹차먹음[김도윤] [오전 8:04] 원두 모양이랑 티팩 미세먼지 이야기 고래[김도윤] [오전 8:04] 어머니 먼저 올라가고[김도윤] [오전 8:04] 아버지랑 집 정리해서 1시간 늦게 출발[김도윤] [오전 8:04] 10년만에 집 복귀[김도윤] [오전 8:05] 오늘 길 차 막힌다고 해서 국도로 올라감[김도윤] [오전 8:05] 볼게 많았음[김도윤] [오전 8:05] 산 터널 기준으로 날씨가 바뀌는[김도윤] [오전 8:05] 비가 세차게 와서 와이퍼 속도가 분하지 않은[김도윤] [오전 8:06] 태백 특유의 분위기 산 강 다리 옛날 건물[김도윤] [오전 8:06] 석탄최초발견지 태양의후예 촬영지[김도윤] [오전 8:06] 산 비탈에 농사 짓기[김도윤] [오전 8:07] 구릉은 산에서 피어오른다[김도윤] [오전 8:07] 도로가 아스팔트 잘깔려있어서 조용했음[김도윤] [오전 8:08] 감자 꽃[김도윤] [오전 8:08] 태백 도로에 빨갛고 분홍빛 장미[김도윤] [오전 8:09] 강릉 주변 아버지 어릴적 이야기[김도윤] [오전 8:09] 강릉 맨 구석 지역에서 온? 전학 온? 친구들[김도윤] [오전 8:10] 집와서 바로 게임[김도윤] [오전 8:10] 일어나자마자 게임[김도윤] [오전 8:10] 끝[김도윤] [오전 8:10] 이렐리아2020년 7월 1일 수요일[김도윤] [오전 4:26] ㅇㅈ이 가장 친한 친구인줄 알았을때[김도윤] [오전 4:34] 수학여행 좋아하는 사람[김도윤] [오전 4:34] 초등하교 아 수련회네 참[김도윤] [오전 4:38] 가끔은 ㅈㅇㅇ이 부러워[김도윤] [오전 5:09] 초등학교 부산[김도윤] [오전 5:09] 피아노 학원 my way 손목 초등학교 영어 시간 때 선생님께서 틀어주셨던 노래 타이푼 - 사랑을 주세요" }, { "title": "🌱 붕어빵", "url": "/posts/DayStone-230131/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-31 11:02:00 +0900", "snippet": "🗿 붕어빵새벽에 일어나고 책상 앞에 앉았더니,책상에 붕어빵 두 개가 놓여있었다.자는 사이 동생이 방에 붕어빵 두 개를 두고 갔었다.맛있다.붕어빵하고 호빵은 계속 먹어도 질리지 않을 것 같다.이게 내가 좋아하는 음식인가??🗿 삐쩍작업하다 울집 강아지가 내 옆에서 서성거리길래내 무릎에 눕혔다애가 삐쩍말랐다힘도 없고숨소리가 쇳소리 같고헛기침도 계속하고🗿 한 것트위터 리트윗, 북마크 정리도 끝냈다.브라우저 북마크 정리도 조금 했다.어제 밤에는 방 정리도 조금 했었더랬다.코테 스터디 이번주 문제도 체크했다.문서들도 여럿 정리하고,영단어도 정리했다.책도 읽었다.월초에 읽다만 ‘읽기 좋은 코드가 좋은 코드다’ 3-11 장 까지 읽었다.부지런하자간바루조이 !🗿 벌써벌써 1월의 마지막 날이다.벌써 2월이다.벌써 올해의 1/12가 지났다.올해의 진행도가 8%나 되었다.2월달에는 정말 내가 하고 싶은 일들을 하고 싶었는데..아무래도 그른 것 같다 ㅋㅋ..🗿 깃허브 닉네임 변경그냥..갑자기 신경쓰여서 인터넷 계정들의 닉네임을 통일시켰다.바뀌게 된 계정들 중에는 깃허브 계정도 있었는데깃허브 닉네임을 바꾸면, 블로그 주소도 바꿔야 했다.주소를 바꾸니..구글 애널리틱스와 서치 콘솔, 그 외 검색 엔진 툴들에서 사용하던 주소를 모두 바꿔야했다.리다이렉션을 생각안하고 무작정 바꾼 이유로 뜨게 된 404 에러를 해결하기위해,새로 깃허브 계정을 급하게 만들어 다시 블로그 레포를 파고,jekyll-redirect-from 플러그인을 설치한 다음 문서 하나하나 리다이렉션 새 링크를 달아주고,커밋을 하고 블로그에 들어가봤더니..아뿔사, 깃허브 액션에서 레포에 권한이 없다고 에러가fatal: unable to access ~: The requested URL returned error: 403Error: Invalid exit code: 128레포 설정에서 Actions/General/Workflow permissions를Read and write permission로 설정해주니 에러가 사라졌다.참고이번엔 다르다, 다시 액션 Re-run 해주고 들어가봤더니..아뿔사, 이번엔 CSS가 적용이 안된다— layout: home # Index page —레포 설정에서 Pages/Build andn deployment의 빌드 브렌치를 gh-page로 바꾸니 에러는 없어졌다.https://velog.io/@hashnsalt/Github-Blog-%EB%A7%8C%EB%93%A4%EA%B8%B0-2이제 정말 다 된다, 레포 Private으로 바꾸고 마무리..아뿔사, 다시 들어가보니 죄다 404 에러가 뜬다새로 만든 계정은 깃허브 Pro가 아니라서 블로그 레포를 Private인 채로 사용할 수 없다는 걸 망각하고 있었다.다시 Public으로 바꿔주고, main으로 바뀐 빌드 브랜치도 다시 gh-page로 바꾸니 정상 작동한다.그렇게 블로그 대소동은 막을 내렸다.🗿 그리고영어 공부를 시작했다.오랜만에 치킨을 먹었다.울집 아픈 강아지만 챙겨주니, 울집 다른 강아지가 서러운지 계속 짖어대는 데 힘들다..내일은 브라우저 북마크 정리를 해야겠다." }, { "title": "⛏️ Advice", "url": "/posts/Advice/", "categories": "⛏️Memo", "tags": "", "date": "2023-01-31 05:25:00 +0900", "snippet": "웹 서핑을 하며 본 조언들.그 중에서 공감되고 마음에 드는 것들을 모았다.출처를 아는 것은 기록💎 조언 레시피다 가르쳐주셔도 돼요? - 가르쳐줘도 따라할 사람만 하지.. 게으른 사람은 안해요 실행과 공유에 관한 이야기. 21년, 이 문장과 트위터 타래를 본 이후로, 자료를 공유하는 버릇을 가지려고 노력하고 있다. 나는 도토리 모은 위치를 잊어버린 다람쥐 마냥, 자료를 모아두고 소모한 적이 많이 없었는데, 이럴 바에는 공유를 하고, 공유하는 김에 그것에 대해 공부를 하는 게 낫다고 판단했다. 정말 도움이 되는 것 같다. 물론 앞으론 공유 뿐만 아니라, 자료를 직접 소모하는 실행에 옮길 필요가 있어보인다. ㅡ 소화 제일 무서운 사람 유형 ‘아~ 이제 자야겠다’ 하고 바로 잠드는 사람 밥먹고 바로 설거지하는 사람 운동할 때 노래 안듣는 사람 술 진탕 먹고 집에 와서 청소 다 하고 샤워하고 자는 사람 아 이판하고 집가야지 하고 개털렸는데 바로 집가는 사람 나이들면 열정, 갈망은 너무 소중한 자원이니까, 분야에 관계없이 해볼까 싶은 생각이 들면 그 불씨를 꺼트리지말고 냅다 보조기구들을 질러버리시는게 좋습니다. 저는 그렇게 질러놓은 물건들은 당장 할 맘이 사라졌더라도 거실 진열장에 둡니다. 눈에 자꾸 띄어야 할 맘이 다시 생기니까… 공부는 정통으로. 하지만 구현은 꼭 정통일 필요는 없음. 수학이나 외국어나 코딩이나. 처음 보면 뭔 소린지 모르겠는데. 하루 지나면 뭔 소린지 알 것 같고. 다음 장 보면 내가 완전히 잘못 알고 있었군 하다가. 또 공부하고 실제로 해보다 보면 “어라? 이게 맞나?” 싶으면서 삽질하다가 깨달음을 얻고 다시 책을 들쳐보면 “아니… 이게 다 책에 있었다니” 분명 나 혼자 깨달은 줄 알았는데 책에 이미 써있다. 생각해보면 이거 티알피지나 심리학도 그랬던 것 같은데… 물론 책에 안 나오는 암묵지가 많기 때문인데. 이제 이 깨달음을 남에게 썰을 풀면서 설명해보면. 못 알아듣기 때문에. 시행착오를 하면서 설명하는 방법 개발해서 몇 번 성공하면 기고만장해졌다가 이해 못 하는 분들과 오개념을 만나고 나도 또 뒤통수를 맞음. 하지만 내가 썰을 풀면 다들 나는 처음부터 잘 이해가 된 걸로 아시지만. 나는 학습 전략으로 뒤통수 맞는 속도를 빠르게 했을 뿐이라. 전혀 모르는 분야를 같이 탐구하면서 읽어보면. “이 복잡한 걸 이렇게 이해할 수 있다니!”하고 다들 놀라실 뿐이다. @ 이거 뇌세포 커넥션과도 뭔가 연관이 있지 않을까? @ 이거 Self Worth Theory: The Key to Understanding &amp;amp; Overcoming Procrastination / Nic Voge / TEDxPrincetonU 미루는 습관 고치는 방법도 미루는 사람들을 위한 2장짜리 요약글 주변 개발자들한테 늘 하는 말이 있는데, “코드가 더러워도 좋으니 일단 완성을 해라, 코드 퀄리티는 완성보다 우선시되면 안된다”는 것. 코드 퀄리티가 아무리 좋다 한들 완성되지 않았으면 의미가 없다. 서비스를 만들고 싶다면 일단 완성해서 쓸 수 있게 만들고 고치는건 그 다음의 일. 개인 프로젝트를 시작하는 초보 개발자한테도 하는 말인데, 코드 퀄리티만 신경 쓰다가 완성하지 못한 경험만 가지는 것보다 오히려 정말 상상할 수 없는 스파게티 코드를 만들더라도 완성을 해본 경험을 가지는 것이 더 중요하다고 생각한다. 특히 최적화와 같은 문제를 초반부터 생각한다면 이는 초반에 너무 생각할거리를 방대하게 만들며 그와 동시에 엄청난 부담감을 안겨주기 십상이다. 느려도 좋고 코드가 끔찍해도 좋으니 일단 완성을 시키는게 중요하다는게 내 생각. 특히 소규모 서비스를 생각하고 개발하는 사람들이 개발 초기부터 확장성과 최적화를 열심히 고민하면서 만들거나, 심하게는 능숙하게 쓰지 못하지만 빠르다는 평가를 받는 언어나 프레임워크를 무리하게 도입하기도 한다. 그러다가 비슷한 서비스가 나오기라도 하면 선점의 효과를 이기기 힘들다. 우리가 알고 있는 많은 대형 서비스가 처음 출시됐을 때의 코드로 아직도 서비스를 하고 있을까? 거의 그렇지 않다. 첫번째 버전에서 완벽을 추구해봐야 1년, 2년이 지나서 다시 열어보면 끔찍한 코드일 수 있다. 프로젝트를 시작 할 때 짜는 코드는 아예 임시 코드라고 생각하는게 오히려 나을지도. 그림을 잘 그리고 싶으면 그림을 많이 그려보면 되고, 코딩을 잘 하고 싶으면 코딩을 많이 해보면 된다. 다시한번 되뇌어본다. “어중간한 퀄리티의 결과를 낼거라면 안하는게 낫잖아?” 라고 생각하는 부류였습니다만, 이런 사상은 이상만 높아져, 눈은 높은데 기술은 따라가지 못합니다. 정신력은 약해져 다른 사람들의 미숙함만을 비판하며 “나는 아직 진심을 다하지 않았을 뿐” 이라고 투덜거리는 사이에 돌에는 이끼가 낍니다. 40년 정도 살아오면서 깨달은 것입니다만 “상황이 안정되면 〇〇을 하자” 라고 말할 때의 ‘안정되는’ 타이밍은, 거의 오지 않기 때문에 하고 싶은게 있다면 될 수 있는 한 빨리 해버리는게 좋다고 생각합니다. 푸념하지 마라. 욕하지 마라. 험담하지 마라. 이런 습관을 버리는 것만으로 인생은 100배 즐거워진다. 푸념, 욕설, 험담만 하면 동족이 모여든다. 반대로 진실하고 긍정적인 사람은 멀어진다. 부정적인 감정을 가지지 말라는게 아니라, 항상 부정적인 발언을 하면 인생을 나쁜 방향으로 이끄니 삼가자. 모르는 것을 아는 척하는 순간, 성장할 기회를 한 번 잃어버린 것이다. 32년간 살면서 배운 점 지각할 것 같은 느낌이 들면 그런 느낌이 든 순간부터 상대에게 연락할 것 “우리 같이 뭔가 재밌는 일 하자!” 라고 하는 사람과는 대체로 아무 일도 없음 첫대면에 반말하는 사람은 대체로 위험 바빠서 잠을 못잔다고 자랑하는 사람은 그냥 평범하게 죽어가고 있는 것 . 70까지 할수있는데 68 해둔거랑 100까지 해낼수 있는데도 60정도에서 마감해서 낸 애랑 얘기하다 보면 알겠지 진짜 얄심히 했는지 지식기술은 있는데 설렁설렁 해서 낸건지 . 경험상 팀으로 오래 가는 사람들은 즐겁게 하하호호하기 좋은 사람들보다, 아쉬운 소리 불편한 점들을 말해도 사이가 나빠지지 않고 받아들이고 사과할 거 사과하고 잘지내는 사람들이었다 . 뭐든 열심히 하면 더 좋지만, 사실 그냥 하기만 하면 된다. 그 이유는? 사람들은 생각은 하지만 대부분 안한다. . 개발이 어려운 이유는 많은 개념들이 오랜 시간이 지난후에 경험을 쌓고 나서야 제대로 이해가 되는 것들이 많다는 겁니다. 어떤 지식을 전부 이해하고 습득한 뒤에 무언가를 개발하려하지 마십시요. 개발은 하는거지 배우기만 하는게 아닙니다.삽질일 지언정 그것또한 이해를 위한 과정일 수 있습니다 . 40대가 되니 비로소 보이는 것. 개뿔 그런게 어딨어. 나이로 뭔가 깨달음이 생긴다는 오만함을 조심하십시오. . ‘떠벌림 효과’ 는 스스로를 절벽에 떨어뜨려 스트레스를 주어서 게으른 나를 움직이게 하는 좋은 방법중 하나다. . 공부가 어려운 건 사실입니다. 하지만 내 게임을 만드는 건 어렵지 않습니다. 시나리오 작법이 어려운 건 사실입니다. 하지만 내 소설을 쓰는 건 어렵지 않습니다. 만약, 간단한 2D 어드벤쳐 게임을 만들고 싶다면, 유니티의 수많은 3D 기능들의 학습은 잠시 보류할 수도 있습니다. 만들고 싶은 게임의 기능이 명확하다면, 해당 기능만 RnD 하고 학습하면 됩니다. 간단한 게임을 만들긴 쉽지만, 어떤 게임도 만들 수 있도록 스킬을 쌓는 건 어려운 것과 동일합니다. 지금까지 살면서 봤던 빨리 성장하던 사람들의 공통점이 쪽팔림을 생각하지 않고 질문을 정말 많이 했는데 ‘제가 몰라서 그런데요’, ‘제가 잘못 알고 있는 것 같은데요’라는 말을 매우 적극적으로 사용했었다. 자신의 무지나 실수를 인정함과 동시에 자신을 낮추고 상대방을 높이는 고급스런 말투였던 사람이 모든 것을 알 수 없고, 그렇기에 실수나 잘못을 안할 수 없달까 당연한 일이다. 중요한건 자신의 무지나 실수, 잘못을 빠르게 인정하고 그 다음으로 나아가고 발전하는 것이다. 하지만, 많은 이들이 ‘자신의 무지나 실수를 인정하지 못해’ 발전의 기회를 잃고 제자리에 머무르는지라. 안타깝다 나이를 먹어도 계속 발전하는 사람들과 멈추는 사람들의 차이도 저런 부분에서 드러나는데, 계속 발전하는 사람들은 나이를 먹어도 여전히 상대가 자신보다 어리든 경력이 적든 상관없이 물어봐서 몰랐던 것을 배우고 잘못 아는걸 수정해가면서 계속 발전하지만, 멈추는 사람은 언젠가부터 묻지 않는다 한두달간 시험공부만 하다보니 느낀 점. 모르는 문제, 틀린 문제는 사실 명확하게 공부할 지점을 알려주기 때문에 오히려 좋은 신호에 가깝다. 경계해야 할 신호는, 어중간하게 알거나 애매한데 맞추거나 찍었는데 우연히 정답인 문제들. 이런 문제들을 그냥 넘기면 평생 애매한 상태로 방치되기 쉽다. 좀 더 이어보면, 확실히 알고있는 것은 더 공부할 필요가 없으니 소거시키고, 내가 정확히는 모르거나 틀린 문제들만 따로 모아서 공부하는 것을 반복 해야. 이 루틴은 대부분의 스킬 향상에 효과적인데, 그림으로 예를 들면, 이미 잘 그리는 것은 더 연습하지 않고, 잘 못그리는 것만 더 연습하는 식. 여기서 주의해야할 점은, 무작정 내가 잘 못하는 분야라고 해서 시간을 쏟기보다는, 정말 나에게 필요한 것인지, 내 방향성에 맞는지를 판단해야 하고, 판단하기 어렵다면 얼마나 자원을 할당할 것인지를 꼭 고려해야. “저녁 8시의 스스로가 무엇을 하고 있는지 보아라.” 그게 무엇이던 미래의 본인에게 아주 큰 영향을 행사하고 있을것. 정말 ‘그냥 하는것’ 은 아주 중요하다. 왜냐면 나이먹을수록 한 개인은 습관의 총 합이기때문에. 좀 아니라고 생각하는걸 안하는것과, 좀 두렵거나 귀찮은걸 안하는것은 완전 다른 것이다. 어쩌면 정반대일수도 있겠지. 하버드 세계 최장기 행복 연구: 비결은 인간 관계. 일에서도 가장 중요한 건 소명 열정보다 좋은 관계. 동료 중요. 터놓고 얘기할 사람 한 명만 있어도 만족감 커. 일의 가치엔 출근하고 싶게 만드는 동료와의 결속감 포함. 일의 의미와 만족감은 자신이 어떤 사람이냐에 달려. 소득은 기본적인 물질 수요 충족 넘어서면 행복감과 비례 안 해 죽기 전 후회: 남성 주로 “일에 너무 많은 시간 보낸 것” “중시하는 사람과 더 많은 시간 못 보낸 것” 여성 ”남들이 생각하는 것 걱정하는 데 많은 시간 쓴 것” 자부심 느낀 것도 업적/상 아닌 관계: “난 좋은 반려/부모/친구/멘토였다” 왜 아이디어는 항상 샤워할 때 샘솟는 걸까? 샤워를 하거나 멍 때릴 때, 즉 뇌가 외부에서 얻는 자극이 적을 때는 쉬면서 기억을 정리하는 단계로 들어가는데, 이때 일종의 재충전을 하면서 통찰력이 향상되는 효과가 있다고 한다 일반인에게 집을 그려보라라고 한다면, 지붕을 그린 뒤 기둥을 그리고 문을 그려넣지만, 전문 기획자, 혹은 설계실무자에게 ‘집을 그려보자’ 라고 한다면 토대를 만들고 기둥을 세운 뒤 지붕을 올린다 포기하고 싶을 때 니가 왜 시작했는지 기억하라 남이 하는 일들이 쉬워 보인다면 그 사람이 잘하고 있기 때문이다 당신이 만나는 모든 사람들은 당신이 전혀 모르는 전투에서 각자 싸우고 있습니다. 언제나 모두에게 친절하게 대하세요 개에게 물린 상처는 개를 죽인다고 아물지 않는다 배고픈 자는 수저가 없어도 밥을 먹는다 지금 편한 이유는 내리막길을 걷고있기 때문이다 맑은 날이 계속되면 가뭄이 온다" }, { "title": "🌱 죠죠리온", "url": "/posts/DayStone-230129/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-29 03:36:00 +0900", "snippet": "🗿 죠죠리온나도 내 세계를 만들고 싶었다.그리고 내 세계를 모험하는 인물을 다룬 이야기도 만들고 싶었다.그러다가정말 그냥 문득 생각이 나서네이버 시리즈에 죠죠 8부가 번역되어 올라왔는지 검색했다.작년 8월에 올라왔었다.단행본 기준으로 10권.흐르듯 결제했다.먼저 300개의 쿠키를단행본 한 권이 60개의 쿠키씩이니까,한 번의 결제로 5권을 읽었다.60 * 5 = 300이니까.역시..재밌다그런데 잠이 왔다재밌지만 잠이 왔다요즘 잠이 많아지긴 했다루틴이나 패턴도 평소보다 뒤틀렸다그래서 침대에 누웠다누운 뒤에 일어나 저녁을 먹고다시 이어서 만화를 볼까 했지만 다시 잤다요즘 내 패턴은 이런식이다하루를 그냥 어물쩡 넘겨버리게 된다그리고 다시 일어났다일요일 = 오늘 새벽 1시 즈음인가마저 읽기 시작했다계속 읽다 보니까는5권을 모두 읽었다더이상 내가 가지고 있는 쿠키가 없었다흐르듯 결제했다다시 300개의 쿠키를300개의 쿠키가 3만원이니까난 하루만에 6만원을 써버렸다지난 날들, 동생의 소비 습관을 보고 뭐라해왔지만그게 나라고 다를 건 없었던 것이다그래도 재밌었다10권을 이어 모두 읽었다나에게 이 10권은 충분히 6만원의 가치가 있었다동생에게 뭐라하지 말아야겠다그리고 하룻돌을 새긴다새긴다라는 표현이 좋다이제 작업을 해야한다🗿 깜빡한 것들루틴과 패턴이 이렇다보니하룻돌에 까먹고 새기지 못한 것들이 있다사소한 거지만기억하고 싶은 것들둘 다 가족들이 본가에 갔다가 가져온 것들이다하나는 고로쇠다고로시가 아니라 고로쇠본가 지역에서 나는,1만 5000원 정도하는 고로쇠 통을 받아오셨다고로쇠의 맛은..물 맛조금 뭔가 단 것 같은데,단 것을 먹고 싶은 마음을 만족시키기엔몇 컵을 연속으로 먹어도 부족할 것 같은미묘한 단 맛칼슘이 그냥 먹는 물보다 몇 십배는 많다는데음그냥 칼슘 영양제 같은 걸 사먹으면 되는 거 아닌가?그런 생각이 들었다4.5L 나 되기에, 일단 먹어치우기 위해내 방에 통째로 들고와컵에 따라 먹고있다뭔가 본가 특유의 향기도 나는 듯한..!?가족들이 본가에 갔다가 가져온 것 또 다른 하나는 조기할머님께서 14마리였나 사셨다가4마리는 거기서 드시고,남은 10마리를 주셨다고 한다오랜만에 먹는 생선이라 그런가짭쪼롬하니 정말 맛있다한 마리에 3000원 정도 한다나비싸긴 하다그래도 맛있는 건 맛있는 거다밥을 두 그릇이나 먹었다정말 맛있다조리법도 보니까가루 묻히고 기름 두르고 앞뒤로 구우면 끝자취방에서 한 번 해먹어보고 싶다냄새는.. 어쩔 수 없는거지 뭐" }, { "title": "⛏️ Cosmic Expansion", "url": "/posts/Cosmic-Expansion/", "categories": "⛏️Memo", "tags": "", "date": "2023-01-27 10:46:00 +0900", "snippet": "💎 우주 팽창레딧 돌아다니다가 보게 된 영상.우주 팽창이 초광속으로 진행되고 있는데,이로인해 하늘에 떠있는 수많은 별들을 더 이상 관측하지 못하게 되고,(광년 단위로 떨어진 별들의 빛이 지구에 도달한 것인데, 초광속으로 멀어지게 되면 빛이 우리에게 닿지 않을 것)초광속 혹은 그에 준하는 속도로 이동할 수 있는 기술을 인류가 만들어내지 않는 이상,영원히 인류가 도달할 수 없는 은하들이 점점 생겨날 것이라는 영상이다.인류가 지구에 홀로 고립되는 것만 같아 뭔가 무섭다..때가 오기전에 지구를 떠난다던지, 지구가 망한다던지 둘 중 하나일 것 같지만..무튼 무섭다.때가 오기전에 외계 문명을 찾을 수 있을까" }, { "title": "⛏️ Concept", "url": "/posts/Concept/", "categories": "⛏️Memo", "tags": "", "date": "2023-01-27 08:15:00 +0900", "snippet": "내 망상과,그런 망상을 하기위한 소재를 모아두는 곳설정 놀음이다.중학생 때 부터 적어온 망상 백업본을 날린 게내 인생에서 제일 한탄스럽다💎 소재소재 찾기 웹 서핑하다 긁어온 것들 뮤직 비디오 트위터, 특히 백업계?판타지 마녀와 샤먼 1 개인적으로 주술같은 것을 쓰는가 아닌가 차이같더라고요. 오히려 저는 주술사와 샤먼과 마녀의 차이가 뭔지 고민하는데 뚜렷한 답은 안나오고요. 2 일단 각자가 가진 이미지가 뚜렷하다고 생각되네요. 마녀의 경우는 빗자루, 가마솥, 물약 등의 연상이 자연스레 되고, 샤먼은 토템같은 매개체를 갖고 있으니까요. 1 이미지를 생각못하고 능력만 생각했었네요. 물 속에서 터진 탄환은 꽃과도 같아서 인어는 그것이 무엇에 스인 줄도 모르고 마냥 예뻐하며 인간세계를 동경할 것 같다는 이야기가 있죠 가고일 (성당 지키는) 초능력자, 총잡이, 성기사, 야만용사, 연금술사, 마법사, 아마조네스, 비재능자 하이퍼 라이트 드리프터(게임) - 갑자기 나타난 정체불명의 검은 존재에 의해 파괴된 세상에서 검은 존재에게 맞서다가 생긴 치명적인 병을 치료하기 위해 고군분투하는 한 방랑자 A Shipwright자연/물건/역사 마라분타 - 군대개미 판도 Pando 라는 군락, 뿌리가 하나로 연결되어 있는 모든 줄기들이 하나의 개체, DNA 상 전부 하나의 나무 Elysia chlorotica - 푸른 민달팽이 흔한 나뭇잎 의태족, 초록색을 내기 위해서 먹이를 먹을 때 전부 소화시키는게 아니라 엽록체를 산채로 장에 보관, 처음에는 엽록체를 유지하기 위해 계속 해조류를 먹어야 함, 나중가면 내장세포와 엽록체가 합체되어 더 먹지않아도 됨, 광합성으로 빛에서 에너지도 얻을 수 있게 됨. 요정의 링 : 고리 모양으로 자란 버섯 요정들이 둥글게 모여 춤을 추면 그 자리에 버섯이 자란다는 전설 진균류는 곰팡이처럼 포자를 자기 주위로 퍼트리며 번식, 처음에는 동글게 퍼져나가다가, 가운데 부분에 영양분을 다 흡수하면 더 이상 자라지 못하고 허물어지기 때문에 고리 모양만 남게 되는 것 검은 장미 - 터키의 할페티라는 곳에서만 자연적으로 존대한다 과일 샐러드 나무는 실제로 존재한다 - 그 나무들에서는 7개짜기의 다른 종류의 과일들이 동시에 열린다 고양이는 상대방이 자신의 소유임을 알리기 위해 상대방의 얼굴에 문지른다. 고양이가 당신의 얼굴을 문지른다면, 당신이 가족으로서 인정 받았다는 말이다. 바오밥 나무는 천 년이 지나면 자연적으로 속이 텅 비게 된다. 아구는 짝짓기를 할 때, 몸을 녹여 서로 융합시켜 영원히 몸을 공유한다. 만약 수컷이 암컷을 찾으면, 수컷은 암컷에게 들러붙어 서로 합체한다. 이 과정에서 수컷은 둘이 혈관을 공유할때까지 장기 일부를 잃게 된다. 스켈레톤 프라워는 섬세한 꽃잎들을 가지고 있는데, 이들은 비가 내리면 투명화된다. 캐나다에는 점박이 모양의 호수들이 있는데, 대부분의 물이 열에 증발하고 물웅덩이에 화려한 광석 퇴적물들이 남는다. 반딧불이들은 현대의 전등보다도 더 효율적인 빛 생산을 한다. 대부분의 거미들은 거미줄에 쓰이는 실크 단백질을 재활용하기 위해 자신의 거미줄을 섭취한다. 촛불은 타면서 수백만개의 작은 다이아몬드를 소모하는데, 이는 그들이 탄소 4개의 형태 (다이아몬드의 화학적 구조)를 포함하고 있기 때문이다. 매우 독성이 강한 나무가 있는데, 비에 흠뻑 젖은 이 나무의 잎사귀는 당신의 피부를 태워버릴 것이다. 이 나무는 Manchineel 대극과 나무라고 불린다. 베네수엘라 엔젤 폭포 크레타섬의 3000년 된 올리브 나무 섞이지 않는 바다 - 다른 염분 농도때문에 만나도 섞이지 않는 발트해와 북극해의 자연현상, Square Ocean Wave 발광하는 식물성 플랑크톤 American woodcock 어릴 땐 어른들이 단감 씨앗 안에는 작은 숟가락이 들어있다며 갈라서 보여주면 그 말을 곧이곧대로 믿었었다. Falcon Head Stabilization 우리는 비에 관해 가장 기초적인 것조차 잘 모른다. 빗방울의 모양을 예로 들어보자. 대개의 사람들은 빗방울이 수도꼭지에 매달린 물방울처럼 위쪽 끝이 뾰족하고 아래쪽은 둥근 모양으로 떨어지리라 상상한다. 그러나 실상 빗방울은 작은 낙하산 모양으로 떨어진다. 아래쪽이 아니라 위쪽이 둥근모양을 띠고 있다는 뜻이다. 이는 떨어지는 빗방울이 대기로부터 압력을 받아 아래쪽이 불안정해지면서 평평해지고 찌그러지기 때문이다.” ㅡ신시아 바넷, RAIN Bone Music 구소련시절 정부의 검열 때문에 외국의 노래조차 들을 수 없었던 러시아 사람들은 병원에서 쓰고 버린 엑스레이필름들을 가져다 축음기로 녹음시켜 몰래 팔았음. 러시아 사람들은 이런 뼈음악으로 비틀즈나 롤링스톤즈 밥딜런같은 외국의 노래들을 들었다고함 실제 레코드판보다는 당연히 성능이 떨어지기 때문에 몇번 돌리면 금방 부서지고 한 면만 녹음이 가능했지만 버린 엑스레이필름으로 만든거라 가격이 쌌기 때문에 많이 팔렸다고함. 소련정부에서는 이런 활동을 단속하기 위해 순찰대도 꾸렸지만 막을순 없었다고함. Trachyandra 요오드 시계 반응 이 반응은, 2개의 무색투명한 액체를 혼합하면 처음엔 눈에 보이는 반응은 일어나지 않습니다. 하지만, 조금 경과하면 혼합액체가 돌연 깊은 파란색으로 변화하는 겁니다. 황철석으로 치환된 암모나이트 화석. 은행나무 촉석루 700년 된 씨앗 산하엽 야광충 Leaf Sheep 접목 렌즈 플레어 렌즈 플레어 효과는 렌즈 코팅등에 의한 빛망울이라 눈에는 보이지 않고 카메라에만 보이는 효과를 말하며, 이 효과는 볼류메트릭 라이트 계열의 효과라고 말합니다. 게임엔진에서는 라이트 샤프트 혹은 갓레이라고 부릅니다. 습기많은날 밤 가로등에서도 볼 수 있는, 습기에 의한 빛의 산란효과. 카메라 렌즈를 통해서만 나오는 효과고 실제 눈만으로는 볼 수 없는 효과인데 사람들은 카메라를 통한 영상물에 익숙해져서, 있는걸 자연스러워 하죠 전문용어(?)로 틴들현상이라고 부르죠. 공통과학 (요즘도 이 과목명이 있는지 모르겠군요) 시간에 배우고 나면 하늘에서 빛으로 길이 열릴때마다 누군가 “틴들현상이다!” 외치는 것을 들을 수 있습니다(…) 어쩌면 선녀가 하늘로 올라갔다는 이야기는 공작을 보고 만들어낸 이야기인지도 모르겠다… 카라칼의 귀 오호츠크와 홋카이도의 깊고 차가운 바다에서 발견되는 희귀한 불가사리 Trophodiscus almus. 새끼를 표면 위에 낳는다는 특징이 있는데, 마치 별이 그려진 듯한 느낌을 줍니다. 불가사리 손 위에 가득한 형형색색의 갯민숭달팽이(Nudibranch). 조상으로부터 껍질이 퇴화한 이들은 북극에서 따뜻한 열대 산호초를 거쳐 남극 대륙 주변에 이르는 세계의 모든 바다에 서식하며 약 3,000여 종이 세상에 알려졌습니다. An ocean full of ice eggs문장/설명 사랑했던 사람을 닮은 사람을 보면 그 사람을 사랑한다기보단 사랑햇던 사람이 더 그리워지는 그런 기분. 위로가 필요한 순간을 보았지만, 자신은 절대 그 위로를 해줄 수 없음을 알았을 때의 머뭇거림 Somewhere over the rainbow - 20 days after this song, World War 2 started. 아침에 울면서 일어난적이 있는데 분명 일어난 직후엔 꿈 내용 기억했는데 몇 분 정도 흐르니깐 암것도 기억안남 ㅋㅋㅋㅋ 부모님이 와서 왜우냐고 하니까 몰라 그냥 우는 중이야 라고 말했던 기억이 인적마저 끊긴 마을에 언젠가 사람들이 돌아올 것이라고 기다리며 노래 만들고 있는 해골 - 진짜 브룩이네 ! You know you’re dead when the crowd is singing the other team’s theme. 뭔가 저승사자가 생전 붉은 실로 이어져있던 연인을 그리며 부르는 노래같음 ㅇㅇ. 노력하고 누군가를 존경하는 애들이 좋더라~ 박테리아들은 우리 몸의 면역체계를 뚫기 위해 진화해 왔어. 그렇기 대문에 네가 만약 미래로 시간여행을 한다면 넌 죽을거야. 반대로 네가 과거로 시간여행을 한다면, 과거 사람들이 다 죽겠지. - 혹사병이나 스페인 독감이 어떤 XX 같은 시간여행자 때문이였던거 아냐? 노래가 울려퍼지는 이 순간만큼은 몽환의 세계에 있는 것 같아서 좋다 플라톤의 사원소설에 의하면 정십이면체는 우주에 해당하는데 시그마는 두 개의 정십이면체 초구체를 들고 있네요. 마법소녀가 누구나 구해야하는건 아니죠 마법소녀, 히어로들이 사람들을 구하기 위해 있는 존재? 지구를 지키는 이유는 본인의 평범한 일상을 유지하고 살아가기 위해서이다. 본인이 평범한 일상을 사는데에 방해되는 존재를 굳이 도와주어야할 이유가 있는지? 무지하고 무식하기 짝이없는 무지막지한 세상에 홀로 떨어진, 단 한 명의 지식인 마냥 고통스러워보인다. 초록색 렌즈, 눈을 뚫어지게 보시다, 학생 눈에도 여름이 왔네요 싱그럽고 예뻐요 뒷집 도령이 앞집 낭자보고 가슴뛰는 소리야 Mortgage - 담보는 “죽음의 계약”을 의미하는 프랑스 단어에서 유래되었다 국가 아랍 에미리트는 기후를 바꾸기 위해 산을 건설할 생각을 심각하게 고민중이다. 무언가를 찾아나서는 도전은 언제나 ‘초심자의 행운’ 으로 시작된다. 그리고 반드시 가혹한 시험으로 끝을 맺는다 파울로 코멜료 - 연금술사 사람들은 아무도 없고 오직 몬스터와 나 밖에 없다 신은 모든 곳에 있을 수 없기에 어머니를 만들었다 가장 진한 어둠은 가장 흐린 빛에도 사라진다 Actual visualization of a sound wave. You can actually see the sound traveling from the stage to the back by the crowd pumping their fists in time (as they hear the music). Thx 비밀번호는 ‘길고 복잡하지만 의미 없는 것’ 으로 해달라길래 ‘인생’ 으로 했다 존 프럼 신앙 화물신앙의 대표사례로 알려진 바누아투 탄나 섬에서 행해지는 존 프럼 신앙. 태평양 전쟁의 미군으로 여겨지는 그를 메시아로 숭배하는 거라고………… 이에 대한 문답이 흥미로운데, 19년 동안 존 프럼은 돌아오지 않았다. 그런데도 기다릴 것인가?” “당신들은 2천년동안 예수를 기다리고 있다.” 문화적 상대성에 대해 배운 새로운 사례다. 창문에 부딪혀 죽는 새들 “불행히도 새들은 토마토도 돌멩이도 아니었기에, 조용히 죽어갔다” 창문에 부딪혀 죽은 박새들 얘기 보는데 비유가 너무 문학적이다…뭔가 더 큰 사회 문제에 대한 비유같아 인간에게 시각적인 충격도, 물리적인 불편도 주지 않는 일에 대한 무관심. 심지어는 그것이 한 개체 혹은 집단의 죽음이라는 극단적인 상황임에도 인간이 보려하거나 고치려 하지 않는다는 것. 비단 박새만의 상황은 아니겠지요. 폴란드인: 유럽에선 같은 인간끼리 서로를 먹지 않습니다 식인종: 그럼 아무 이유 없이 그냥 야만적으로 사람을 죽인다는 말이예요? 판타지 세계관 주점에 들어가서 캐릭터들이 술을 주문하려고 할 때마다 바텐더가 한숨을 팍 내쉬면서“이름과 나이 그리고 종족을 말해주쇼” 라고 말하면서 종족마다 몇 살부터 술을 마셔도 되는지적혀있는 책을 꺼내면 진짜 웃길 것 같음 We’re Finally Landing “Unfortunately this was not humanly possible” music plays “Until” 기억을 가지고 과거에 갈 수 있다면 기억을 갖고 과거로 가면 이렇게 돈을 벌고 저렇게 돈을 벌고 같은 상상을 자주 하는 편이지만 막상 그렇게 과거로 가고 싶은 생각은 없는게, 삼풍, 성수대교, 911, 311 같은 재난에 대한 죄책감을 견뎌 낼 수 같지 않다. 과거로 간 미래인이 과연 그 재난을 막을 수 있을까…싶은 ㅋㅋㅋ 소설 리플레이 주인공은 초반에는 재난 막으려고 분투하다가 오히려 비난받고… 다음번 회귀부터는 그냥 모른 척 하는 묘가 나오더군요. 현실적이라는 생각이 들었습니다. 테러리스트의 오명을 쓰고 재난 전날에 미리 협박성 경고를 하는게 유일한 방법이겠죠. 건물 골조를 미리 부숴뒀다… 비행기를 납치하겠다… 원자력발전소를 폭파하겠다 등등. 역사에는 초거물급 범죄자로 기록되겠지만 세계평화를 위해서라도 절대 잡히면 안됩니다. 중국속담 조선에서는 1년의 절반은 사람이 호랑이를 사냥하고 나머지 절반은 호랑이가 사람을 사냥한다 좋은 스토리는 익숙함으로 시작해서 낯섦으로 끝난다. ‘갓오브워’가 좋은 스토리인 이유는 익숙한 가족의 문제로 시작해 기이한 신들의 사정으로 맺음하기 때문. ‘태초에 천족과 마족’ 스토리를 좋게 보기 어려운 이유 중 하나는 그 도입부부터가 비일상의 관념으로 채워지기 때문이다. “My battery is low and it’s getting dark”는 인류 역사에 최초로 남은 기계의 유언이 되었다 재밌는 얘기 들었다. 사물에 기억을 저장하는 사람들이 있다고. 아주 옛날의 극장표를 버리지 못하는 사람들. 이들은 그 사물과 접촉하면서 그 날의 기억들을 생생히 떠올릴 수 있고 극단적인 경우에는 그 사물이 없으면 최근의 기억도 할 수 없다고 한다. 앤디 워홀도 그 중의 하나였을 거라고. 공각기동대SAC를 보면 쿠사나기 모토코 또한 손목시계에 추억을 담고 있어서.. 바트는 그 손목시계를 “보조기억장치”라고 부르기도 하지요. 하드디스크에는 기껏 자석화된 금속분자들만 나열되어 있을 뿐인데.. 헤드로 부터 읽어들인 0과1이 데이터로 사용되는 걸 보면.. 틀린 말도 아닌 듯.. 개기일식을 실제로 관측한 사람이 이야기 해준 적 있다. 완벽하게 둘이 합쳐지는 순간. 비정상적으로 바람이 불고 온 세상은 어두워지는 순간 조도에 반응하는 가로등이 일시에 켜지고 새들이 날아가고 동물들의 우는 소리가 들리도 별이 보이는 판타지스런 경험을 할 수 있다고.. 별똥별 한 개 = 소원 한 개 천개 이루어 주세요 = 별똥별 천 개 장례식 ‘내가 죽으면 장례식은 안 치러도 돼’ 라고 말하는 사람이 있다. 장례식을 치루면 고인을 향한 작별이 한 번에 끝난다. 치루지 않으면 고인의 죽음을 안 지인들이 따로따로 찾아와, 유족들은 그때마다 피폐해진다. 예로부터 끊임없이 장례식을 치러 온 데엔 나름의 지혜가 담겨있는 것이다. 생각해보면 3년 상을 치룬 사람이 괜히 영웅취급을 받던게 아님. 3년동안 몸도 마음도 모두 피폐해진다는 건 죽음과 크게 다름이 없는 것인데, 그것을 끝까지 해냈다는 뜻이니. “아빠랑 결혼할래!” 라며 결혼식 그림을 그리던 딸에게, 아내가 “아빠랑은 결혼할 수 없어” 라고 가르쳐주자 딸이 “아빠는 10년 후에 죽어있을테니까?” 라며 불길한 이야기를 했다 부모님이 젊어진 모습으로 나타나면 찡할 것 같음 아홉 번째의 저주 - 아홉 번째 교향곡을 완성하면 그 작곡가는 곧 죽게 된다는 그런 믿음 사라지는게 아니야 우리들만 아는 비밀로 되는거야 충분히 무언가를 타인에게 시킬 수 있는 위치에 서 있음에도 불구하고 시켜야 할 일 조차 시키지 못하는, 권위를 전혀 활용하지 못하는 소심한 인간상이었다. 이러한 성격이 물론 자신의 지식적인 권위를 높이는 데엔 큰 기여를 했을 것이다. 남에게 맡겨야 할 일 조차 자신의 손을 거쳐가고, 또 그렇게 자신의 손을 거쳐가면서 그 ‘거쳐갈 일’ 과 관련된 또 다른 지식이 자신의 손에 들어왔을 테니 말이다. 하짐나 이제 더 이상 그는 그럴 필요가 없었다. 오히려 적재적소에 인원을 배치하여, 더욱 나은 연구를 이끌어내야 하는 ‘관리자’ 라는 위치에 서 있기 때문이었다. 그런 그였으나, 여전히 그 소극적인 성격을 변화시키지 못하고 그 결과, 상급자를 하대하는 연구소의 분위기를 자아내고 말았다. 연구소의 상하 관계가 말 그대로 ‘엉망’ 이었다. 그는 언제나 이런 자신의 성격이 싫었다. 막말로 찌질하다고 할 수 있을지도 모르겠다. 하지만 그에게 있어 이러한 소극적인 성격은 뒤틀린만한 어둠을 제공하기엔 충분하고도 남았다. 외지인에 의해 뒤틀린 이후, 그는 안경을 벗어 던지고 선글라스를 끼기 시작했고 시리도록 눈이 부시다 달빛에 눈이 부실리가 없다. 주로 태양빛에 눈이 부신다는 표현을 쓰지. 시리도록 눈이 부시다는 눈에 고인 또는 흐르는 눈물에 달빛이 반사되어 발짝하는 이런 느낌 있잖아요 그때 그 눈물 흘러서 차가운 밤공기에 눈 주위가 시린거고 그 반짝하는 비유가 부시다는 걸로 씁니다. 가뭄으로 인해 드러난 저수지 아래의 400년전 교회 지구적 강함 - 단력, 잠재적 에너지, 진화, 각성 우주적 강함 - 누가 더 높은 차원의 힘을 사용하나 낙천적 - 세상과 인생을 즐겁고 좋은 것으로 여기는. 또는 그런 것 무협 영화에서 어느 고수가 바위에 한자 세겨넣듯이 그런 연출을 이용한 게임은 어떨까요? 마법천자문..? 제스처인식은 어떨까요? 예를들어 한자의 획을 인식해 공격이나 마법등을 사용한다거나 하는거죠. 예전에 어떤 문화책에 ‘문자귀술법’ 이라는 기술이 있었는데, 호랑이 호 자를 쓰면 글시에서 호랑이가 튀어나와 적을 공격하는 뭐 그런… 무기력하다 - 어떠한 일을 감당할 수 있는 기운과 힘이 없다. 한심하다 - 정도에 너무 지나치거나 모자라서 딱하거나 기막히다, 마음이 서늘하다 게으르다 - 행동이 느리고 움직이거나 일하기를 싫어하는 성미나 버릇이 있다. 우울하다 - 근심스럽거나 답답하여 활기가 없다, 근심스럽거나 답답하여 활기가 없음 근심 - 해결되지 않은 일 때문에 속을 태우거나 우울해함 우주에서 술집을 열면? - 스페이스바 생물발광 슈퍼셀 - 토네이도의 원인이 되는 거대한 적란운 화산번개 - 화산 폭발로 인한 번개 스노우 도너츠 - 바람등에 의해 도너츠모양으로 말린 눈 수평 무지개 - 대기 중 얼음 알갱이에 햇빛이 굴절되어 거의 수평으로 무지개가 보이는 광학 현상 렌즈구름 - 볼록 렌즈와 같은 모양을 한 구름 오로라 - 천체의 북극 부근에서 발견되는 대기의 발광 현상 화재선풍 - 화재 등에 의해 발생한 화염을 동반 선풍 Finnish Lapland - 핀란드 라플란드 지방에 눈이 쌓인 나무 환일현상 - 대기에 더있는 미세한 얼음 결정에 태양 빛이 굴정되거나 반사되면서 프리즘처럼 보이는 현상 스카이펀치 - 원형의 틈새가 열려있는 구름 프로스트 플라워 - 공기 중의 수증기가 얼음이나 바위 등의 표면에 부착하여 얼어 붙어 꽆잎과 같은 형태로 성장한 것 주상절리 - 용암이 흐르다가 바다와 만나면서 굳을 때 육각 기둥모양으로 굳어져 생긴 지형 페니덴츠 - 해발 4000 미터가 넘는 고산에서 드물게 생성되는 몇 센티 부터 몇 미터 정도의 날카롭고 뾰족한 얼음 탑 빛 기둥 - 일출 또는 일몰 시 태양에서 수평선에 수직 방향으로 불꽃 모양의 빛이 보이는 현상 모닝글로리 - 호주 북부에서 잘 볼 수있는 아침을 중심으로 나타나는 거대한 롤 모양의 구름 띠 용오름 - 토네이도가 수면에 발생한 것 헤스달렌의 빛 - 1900년경부터 노르웨이 헤스다렌에서 목격 된 수수께끼의 빛, 플라즈마와 UFO 설도 있음 Brinicles - 바다 속을 소용돌이하면서 급속냉각시키는 자연 현상 지진광 - 지진 발생으로 인한 지면에서 방출되는 기체가 공기 중의 산소, 오존과 결합해 생기는 현상 구상번개 - 뇌우가 심할 때 드물게 나타나는 공모양의 번개 해적 첨 나왔을때 하도몰려서 NPC가 파는 템이 매진이 됐는데 어이가 없어서 쉬팔 새로 나온 맵이라, 전직들이 찾는 곳이라 호기심에 가곤 했죠, 메멘토모리 나바호 인디언 네가 세상에 태어날 때 너는 울었지만 세상을 기뻐했으니, 네가 죽을 때 세상은 울어도 너는 기뻐할 수 있도록 그런 삶을 살아라 아라홍련 삼도천 - 이승에서 저싱으로 갈 때 건너게 되는 강이에요 금사경 성베드로는 예수님으로부터 천국의 열쇠를 받았다고 알려지고 있으면, 그 대문에 종종 천국의 수문장으로 묘사된다 그러므로 성베드로가 내 이름을 부르지 않는 다는 것은 천국에 가지 못한다는 뜻 브로니클 Brincle 1960 남극에서 처음 발견된 현상으로 바닷속이 어는 형상 이것이 지나가면서 주변의 모든 생물을 얼려 죽이기 때문에 별명이 죽음의 고드름 또는 죽음의 기둥이라고 한다 극저온의 해수가 해저 바닥까지 닿으면 거기서부터는 바닥을 타고 흐르는데, 지나가면서 그 주변을 빙한지옥으로 만들어버린다 해저 바닥에 살던 생물들은 그게 성게건 불가사리건 간에 영하 60도 과냉각수를 버틸 재간이 없기 때문에 그대로 바닷물과 같이 얼어죽는다 브로니클이 죽음의 고드름이라고 불리는 이유다 스피로그래프 무기를 빼앗고 말굽모양 자석으로 상대를 구속시킨다 정부에서는 부족한 재정을 확충하기위해 백성에게 곡물을 받고 벼슬을 팔아 신분을 높여 주어 신분 제도에도 큰 변화가 생겼다. 과거는 열리지 않는 ‘문’ 과 같고, 추억은 잃어버린 ‘열쇠’ 와 같다 우리가 사는 우주 말고 다른 우주에서 온 충직한 전사 (자기 세계의 왕만 섬김) 가벼운 쓰레기 버린 걸로 경찰한테 보여서 째끼다가 더 큰 사고 내면서 튀는 것 같다 되게 무도회에서 호두깎이 인형 같은 사람이랑 공주랑 춤추는 느낌이랄까요 여신은 눈뜨지 않습니다. 태어난 순간부터 지금가지 그리고 앞으로도 영원히 그녀는 잠들어 있습니다. 어쩌면 우리의 삶은 그녀가 꾸는 꿈일지도 모르죠. 청춘은 젊은이에게 주기 너무 아깝다 폼페이 7대 금서 17년의 고독 50일의 우정 실제 오아시스의 대부분은 마실 수 없는 물이라고 한다 미생물투버 기생충, 파리때가 졸라 많고 사해처럼 졸라 짠 경우도 있다 땃쥐 태어나서 죽어본 적이 없다 개밥 그릇 바뀐다고 사료임은 바뀌지 않는다 인격을 시험하려거늘 권력을 쥐어줘봐라 벡터리움 남편 잃으면 과부, 아내 잃으면 홀아비, 자식 잃으면 단어조차 없음 알라차 - 무언가인가 잘못되었음을 이상하게 여기거나 어떤 것을 신기하게 여길 때 내는 소리 아스트랄 스타일리쉬 리벤지 국가별 사후세계 신화마다 다른데 다른 지역에 가서 죽으면 저승영사관 본토송환기 어디 기준으론 지옥행이라 탈출해야하는 모코코 씨앗들은 거인의 재채기때문에 다 날려갔다 바이 - 아주 전혀 - 부모님의 크나큰 사랑은 바이 견줄 데 없다. 여우 - 나무를 탈 수 있는 유일한 개과동물 타키온 라플라스의 악마 삼라만상 ~ 할 때가 좋았지 인생은 모두 좋았다 그냥 더 좆같아지는 거 아님/ 멧밭쥐 label 영문 위키백과에 의하면 콜로이드 용액을 통과하는 빛이 파장에 따라 산란/투과되는 비율이 달라지는 현상을 가리키는 보다 제한적인 의미의 용어라는 모양이군요 여담으로 벽안의 푸른 빛이 틴들 효과로 설명된다고 합니다. 홍채의 색소 농도가 낮으면 바깥 층에서 짧은 파장의 빛이 산란되고 보다 긴 파장의 빛은 안쪽의 층에서 흡수되기 때문에 푸른 빛을 내게 된다고. 파란 새의 깃털처럼 구조색의 일종이라는군요. 별명과 객체의 성질을 연결시키자단어/주제/요소 오파츠 OOPARTS Out-Of-Place ARTifactS 시대를 벗어난 유물 제노사이드 - 인종, 이념 등의 대립을 이유로 특정집단의 구성원을 대량 학살하여 절멸시키려는 행위 알 한 비익연리 - 일생을 함께할 짝, 영원한 사랑 비익조 - 한 마리의 새가 날개가 하나 뿐이어서 한 쌍이 붙어야만 비로소 날 수 있다. 연리지 - 뿌리가 다른 두 나무가 자라 올라가면 가지가 붙어 하나의 나무가 되는 신비로운 자연 형상 이무기 운도 - 구름과 파도를 아울러 이르는 말, 물결치듯이 사납게 일어나는 구름, 멀리 수평선에 보이는 파도. 이랑 - 갈아 놓은 밭의 한 두둑과 한 고랑을 아울러 이르는 말 두둑 - 논이나 밭 가장자리에 경계를 이룰 수 있도록 두두툭하게 만든 것 [비슷한 말 두렁]. 푸르다 유의어 - 청청, 싱싱, 쾌청, 푸르뎅뎅, 창창, 푸르스름, 푸르죽죽하다 언덕 다윗의 별, 렘판의 별, 이스라엘 국기 인의예지신 음양오행설 사신수 메타픽션 4대 문명 - 문자를 기록하고 사용하는 데에 보편화된 사회 문명의 시작을 알리는 ‘문자’가 사요된 점에서 반영한 것이다. 문명은 한자 그 자체의 뜻으로서도 글자 문, 밝을 명, 문자를 밝힌다 (개척한다) 이다 베르세르크 카르다쇼프 척도 Nazars 호랑이는 순우리말로 칡범 혹은 갈범이라고 했는데 저 떡 뺏어먹는 호랑이는 영조시절 오일장을 위해 미시령을 넘나들던 상인들에게 빈번하게 떡을 뺏어먹는다는 사실이 조선와조실록에 기록되어 있습니다. 마을 뿐 아니라 조정에도 그 소문이 파다하게 퍼졌고, 후에 저 호랑이는 수시로 저런 짓을 벌인다 하여 상습범이라 불리게 되었다는 기록도 있네요. 회드 - 켈트 신화, 참나무를 아는자 혹은 숲을 나는자, 자연 숭배를 기본으로 하는 사제나 지식인 리히텐베르크 무늬 - 번개, 신경계 손상을 비롯해 피부 흉터 설리번 뒷마당 게이트 드럭 자연에 속아든 ? 녹아든 고대 생명체 월화정인 닿으면 보석이 되어버리는 무언가 : 손 / 금 / 보석 뜻 얼음 용암 하늘에 보석치럼 피는 꽃 순정만화 사랑에 피는 꽃 인간 로봇 죽음 초록색 새 보호색 반딧불이 마족 염동력 마법쓰는 식물 마법 뿌린 음식 마법 소년 ? 소녀 하늘 껍질 차력 저주까지 같이 받음 붉은 ㅡ 검은 모루 ㅡ 사막 자석 능력 스타일리쉬 리벤지 daft hands ㅡ 손문신 나무잎 깃털 그랑블루 ㅡ 깊은바다 애너그램 모르포나비 날개 축전기 하늘 가득한 구름들이 모여 비의 신으로 아우렐리온 솔 물의 정령들이 혹은 순수한 비의 신 툰 칸을 부시고 ㅡ 포켓몬스터 EX카드 처럼 엄청높은 파도와 레고, 만화방 사람 울음소리 지도 ㆍ 마우스 휠 올리면 구름이 생기다가 ㅡ 하늘섬 ㆍ 마우스 휠 내리면 땅이 생기다가 ㅡ 지하세계식물로만 이루어진 지형 코브라효과 슈퍼로봇 ㆍ 필살기 리얼로봇 ㆍ 장비처럼 데스노트 아인 식극의 소마 기동전사건담OO ㆍ 힘으로 전쟁 제압 마법진 구루구루 이야기 ㆍ 행운 로제타석 빙하처럼 떠 다니는 섬 기차와 아이, 선택, 죄인 데우스 엑스 마키나 동물가까이 오면 독열매떨어뜨리는 식물열매나무 테라포밍 켈트매듭 문양 리프라이즈 라이트 모티프 환생했는데 나 전생이 나 생명의 구분 한 개채 인간의 구분 환생 지구멸망 영혼 하나 몸 여러 음양오행 토니베넷 겁나 큰 풍력발전소 vanadium 구름 닿는 카나리아 가위벌과 러다이트 운동 상사화 연고 라바만싱 -&amp;gt; 뭐지? 필터 깊디깊은곳의선택 yoshida yuni Simon Beck - 눈 위 발자국으로 그림 백일하 화투 배경에 메이드 엘리베이터 문을 열었는데 엘리베이터가 나온다 날씨도장 땅버섯 검은 합창단 흰색 빨간색, 신 붉은 창 우두머리 머리 하얀 손 마름 아이 머리 하얀 손 신 HW 우두머리 SW 샤프트 각도 가시 선인장 초야 파타모르가나 태양 기둥 고전 부전나비 비바리움 화산회 번개회 뢰 토니베넷 NEONATO 펄서 생존자 편향의 오류, 전투기 오류 데페이즈망 아방가르드 붉은 여왕 효과 맥거핀 미나렛 아킬레스 거북이 아케이넘 RPG에서는 마법이 물리 법칙을 왜곡하고 차단하기므로 마법사가 기계를 만지면 고장나고 기술자가 마법 물품을 만지면 마력이 달아난다는 설정. 양이 열리는 식물 마물 바로메츠, 아르간 열매를 먹는 모로코의 염소들 땅거미 시금석 석관 속박과 굴레의 족괘 어음 약속의 증서 신랄하다 비통과 중오의 잔 박해 연민 사대복음서 신호등을 랜턴 + 낫 처럼 들고 다니는 사신 평타로 콤포 쌓는 - 아란, 베인 기어 모아 스킬 진화 ㅡ 업그레이드 노코스트 뱀파이어 ㅡ 문도, 블라디 평타가 마법 (스킬) 저고리 고양이 ㅡ 동전? 화폐 비례? 아이템? 상점 할인? 상호작용 오브젝트와 상호작용 나무 열매 꽃 상자 미믹 동전 유적 해골 몬스터 제단 포탈 만들기 마법 + 기계 모험가 기계적(방화쇠 트리거 버튼 레버)으로 마법 뿌리기 마법진 포탈~ 캐릭터가 늙어죽게 하지 말아라.(물론 다른 요소들이 충분히 있다면 상관없을 수도 있다.) 캐릭터가 추구하던 중요한 목표를 이루지 못했을 때 죽여라.해당 목표를 더 열정적으로 이루려고 노력했을수록 죽음은 더 슬퍼진다. 다른 캐릭터와 굳건한 관계를 이루게 한 뒤 죽여라. 죽음의 원인에 맞서 싸우게 한 뒤 죽여라.발버둥 치다 결국 실패한 뒤 상실을 맞게 하라. 캐릭터의 발달이 한창 이루어지던 도중 죽여라. 캐릭터의 장례식에 대한 묘사는 너무 세세히 묘사하지 말아라. 목숨을 하찮게 보이게 만드는 죽음 방식을 선택하라.만일 캐릭터가 제국을 구한 전사였다면, 딸의 간식을 사러 나갔다가 골목에서 강도에게 죽게 하라. 캐릭터의 죽음보다는 죽음 이후 주변 인물의 붕괴에 더 주목 하라. 캐릭터의 죽음/장례식 때 노래를 넣어라. 그 노래를 들을 때마다 팬들이 슬퍼하도록. 캐릭터가 농담을 하거나, 미소 짓거나, 즐거움/행복을 보이고 있는 도중 죽여라. 느리고 고통스럽게 죽여라. 직전에 해당 캐릭터의 의외의 일면을 드러낸 후 죽여라.(항상 터프하고 용맹하던 캐릭터가 죽는 것을 진심으로 두려워한다던가,항상 밝게 웃던 캐릭터가 죽기 전에 눈물을 흘린다던가, 혹은 그 반대) 캐릭터가 뭔가 오해하도록 만든 후 죽여라.(캐릭터가 자신이 배신당했다고 생각하거나, 사랑하던 이가 자신을 버렸다고 믿도록 하고 오해를 풀 틈을 주지 않고 죽여라.) 죽음 이후 캐릭터가 모함당하도록 만들어라.사망한 캐릭터가 오해받고, 배신자로 낙인찍히고, 미움받고, 독자들만이 진실을 알고 지켜보도록 만들어라. 또 다른 사랑받는 캐릭터에 의해 살해당하도록 해라.죽은 캐릭터를 항상 곁에서 응원하던, 팬들이 모두 좋아하던 캐릭터에 의해 캐릭터가 살 수 있었음을 보여 주어라다른 선택을 했으면 죽지 않았을 수도 있지만 이타적 이유로 죽음을 무릅썼다던가,그 캐릭터를 구해줄 수도 있었을 파트너가 아주 사소한 다툼 때문에, 혹은 그 캐릭터의 깜짝 생일 파티 준비 때문에 하필 그 시간 그 자리에 없게 하라. 몰락한 왕국, 과거의 영광왕좌의 게임 - 웨스테로스를 기준으로 볼 때 지명이나 이름들 대부분이 상당히 토속적이다. 한국어로 번역하면서 음역해놓은 것만 보면 멋있게 느껴질 수 있겠지만, 원래 의미를 살리게 되면 아주 직설적이고 고풍스러운 지명이 된다. 대륙의 이름인 웨스테로스부터 ‘서쪽대륙’ 정도의 의미이고, 수도인 킹스 랜딩은 ‘왕이 상륙한 땅’, 주요 가문의 거성들 또한 ‘겨울언덕’, ‘흐르는 강’, ‘캐스터의 바위’, ‘둥우리’, ‘높새정원’, ‘폭풍의 끝’, ‘태양창’이 된다. 다만 이건 얼불노만이 그렇다고 볼 수 없다. - 사실 모든 지명, 이름 등은 원래 어원 자체가 이렇다. 하지만 다른 언어에서 유래한 것들(미국은 아메리카 원주민, 영국은 켈트족 등)도 많고, 고어로 이루어진 경우가 많다보니 현대인이 느끼기에는 어원을 깨닫지 못하고 그냥 지명으로만 인식되는 것이다. 특히 한국은 한자의 영향으로 원래의 우리말 지명이 거의 사라지고 한자식 지명만 남아서 얼음과 불의 노래 같은 고풍스러운 지명이 잘 인식되지 않는 것이다. 광주(光州)를 빛고을, 대전(大田)을 한밭이라 부르는 것을 생각해보면 깨달을 수 있을 것이다.현실 세계와 유전 형질이 다르게 발현되는 듯 하다. 예를 들자면 수백, 수천년 동안 같은 은발자안, 흑발벽안, 금발녹안 등등의 형질을 유지하는 대가문들이라던가… 형질을 유지하는 덕분(?)에 대가문의 사생아 확인이나 부인의 불륜 의혹을 쉽게 알아 낼 수 있는 듯 하다. - 존 아린과 에다드 스타크는 흑발이 우성인 바라테온 가문 사람임에도 어머니를 닯은 금발의 세 남매를 보고 세르세이가 불륜을 저질렀다는 걸 쉽게 알아냈다." }, { "title": "🕯️ Capacity Reserve", "url": "/posts/Capacity-Reserve/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2023-01-27 07:37:00 +0900", "snippet": " Capacity : the maximum amount that something can contain.Reserve : 예약Budget : 예산, 지출 예상 비용💎 Capacity Reserve입력 크기를 알고 있다면, Capacity를 예약할 것.좀 더 넉넉하게 하더라도, Capacity를 예약할 것.예를 들어 C++ STL Vector, C# List 같은 동적 배열.Size/Count가 Capacity를 초과하여 크기를 늘려야 할 때,더 큰 크기의 새로운 메모리 할당, 기존 요소 복사, 기존 메모리 Free 하는 비용을 생각해야한다.💎 여담고성능 프로그램에서는 이런 리소스 Budget을 확실히 정해 모든 걸 배열로 처리하는 것도 가능이러면 프로그램을 오래 돌리고 나서야 리소스 부족 문제가 발견되는 걸 막을 수 있다,프로그램이 시작하는 순간 이 최대 리소스를 사용하고 있느니." }, { "title": "🌱 트위터 마음 정리", "url": "/posts/DayStone-230127/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-27 04:26:00 +0900", "snippet": "🗿 트위터 마음 정리아무리 마음 탭을 새로고침을 해봐도스크롤을 내리면서 보이는 마음들의 수 보다,상단 UI에서 숫자를 통해 알려주는 내 마음 수가 더 큰 것 같다.내 눈에 보이는 마음 수는 많아봤자 100개에서 200개 수준인 것 같은데,UI에서는 700여 개 찍었다고 알려준다. 715검색해보니 요런 글이 있는 것으로 보아,트윗뿐만 아니라 마음도 한 번에 많은 수를 지우게 되면 뭔가 누락되는 게 있는 것 같다.대충 다 정리했다고 생각했는데, 누락된 게 있다고 생각하니 여간 신경이 쓰이지 않을 수 없다.🗿 FL Studio어제 결국 FL Studio를 구매했었드랬다.20만원 정도인 줄 알았는데, 환율에 세금에 다 더해져서 26만원 나왔다..튜토리얼 보고 나름 따라해보긴 했는데,아직 역시 잘 모르겠다.일단 이펙트? 플러그인? 을 블렌더 모디파이어 마냥 하나씩 좀 차근차근 배워보고,내가 좋아하는 음악들 카피 해보면서 공부하면 되지 않을까 싶다.올해는 음악을 공부하자.🗿 예금인생 첫 예금을 들었다.근데 금리 보고, 받게 될 돈을 계산해보니까..생각보다 적었다.그냥 주식 한 번 해보는 게 재밌을 것 같은데..하는 생각이 든다.그래서 자본주의에 대한 EBS 다큐 5부 중 1부를 보았다경제를 공부하자" }, { "title": "⛏️ VRChat World 로딩 패널", "url": "/posts/VRC-Loading-Panel/", "categories": "⛏️Memo", "tags": "", "date": "2023-01-25 10:27:00 +0900", "snippet": "💎 머릿말본 글은 2023 신년맞이 VRChat 캘린더 투고를 목적으로 작성되었습니다.💎 VRChat World 로딩 패널 루석바 (23-01-25 기준) 화본역 (23-01-25 기준)위 두 월드처럼,월드에 접속하는 동안, 짧은 로딩 화면을 보여주는 방법을 알아봅니다.※ PC 유저에게만 적용됨 !부스에서 프리팹을 다운받아 보실 수 있습니다.💎 원리월드를 로딩하는 동안,월드에 배치된 RenderMode가 Overlay인 Canvas가VRChat의 UI보다 더 우선적으로 보이는 것을 이용합니다.Overlay Canvas는 VR에서는 보이지 않기 때문에,로딩 패널은 PC 유저에게만 적용됩니다.💎 구현 1 - Canvas 만들기로딩하는 동안 보여지게 될 Canvas를 만들어줍니다.Hierarchy 창 좌측 상단의 + 버튼을 클릭,혹은 빈 공간을 우클릭하고,이후 열리는 창에서 UI/Canvas를 선택해,새로운 Canvas 오브젝트를 만들어줍니다.Hierarchy 창에서 새로 만들어진 Canvas 오브젝트를 선택하고,Inspector 창에서 Canvas Scaler 컴포넌트를 찾아,UI Scale Mode를 Scale With Screen Size로 변경해줍니다.이후 컴포넌트에 새로 보이게 되는 Reference Resolution을,본인이 로딩 패널을 작업할 해상도로 설정해줍니다.필자는 1920 x 1080 해상도의 모니터를 사용하기에, 편의상 사진처럼 적용시켜주었습니다.이렇게 Canvas Scaler 컴포넌트를 여럿 설정해주는 이유는,로딩 패널을 우리가 작업한 해상도 뿐만 아니라,다른 해상도에서도 비율이 망가지거나 짤리지 않도록 적절하게 보여주기 위함입니다.Canvas Scaler 의 UI Scale Mode를 Scale With Screen Size로 설정해주고,Match를 Width에 맞춰주게 되면,일반적인 특정 해상도를 사용하는 유저가 맵에 접속했을 때,로딩 패널의 비율이 망가지거나 일부분이 짤리지 않도록,Reference Resolution에 대해 가로 기준으로 적절하게 비율을 재설정해주게 됩니다. 2 - 로딩 패널 만들고 꾸미기로딩하는 동안 보여지게될 패널을 만들고 꾸며줍니다.Canvas를 우클릭하고 나오는 창에서,UI/Panel을 선택해 새로운 Panel 오브젝트를 만들어줍니다.키보드 숫자 2, 혹은 Scene 창 좌측 상단에 위치한 2D 버튼을 눌러,2D 모드로 전환합니다.이후, 만들어뒀던 Panel 오브젝트를 클릭하여 선택하고,키보드 F를 눌러 화면 중앙에 Panel 오브젝트가 포커스되도록 합니다.Game 창 좌측 상단에 위치한 해상도와,우리가 앞에서 설정한 Canvas Scaler의 Reference Resolution 해상도가 일치하는지 확인합니다.만약 불일치 하다면,위 사진들을 참고하여 Reference Resolution과 같은 해상도를 만들어 적용시켜줍니다.다시 Panel 오브젝트를 클릭하여 선택하고,Inspector 창에서 Image 컴포넌트를 찾아,색을 불투명한 검정색으로 바꿔줍니다.이 친구는 로딩 패널의 배경으로 사용될 것입니다.위에서, 로딩 패널을 만든 사람이 작업할 당시 사용한 해상도 뿐만 아니라,일반적인 특정 해상도에서도 화면을 적절하게 보여주기 위해,Canvas Scaler를 사용하여 비율을 조절해준다고 언급했었는데,이때 비율을 조정되면서, 화면 가장자리에 투명한 빈 공간이 생길 수 있기 때문에,이곳을 매꾸기 위한 배경을 만들어주는 것입니다.이후, 유니티 UI를 이용하여 로딩 패널을 원하는대로 꾸며줍니다. 3 - 간단한 우동 그래프 만들기맵이 모두 로딩되면, 로딩 패널이 보이지 않아야 할 것입니다.때문에 맵이 로딩된 이후, 로딩 패널 오브젝트를 비활성화시켜주는 기능이 필요합니다.Canvas 오브젝트를 선택하고,Inspector 창을 밑으로 내려 Add Component 버튼을 눌러줍니다.이후 뜨는 검색창에 Udon 을 입력해 Udon Behaviour 컴포넌트를 찾고 추가해줍니다.Udon Behaviour에서 New Program 버튼 밑에 있는 선택지가Udon Graph Program Asset 임을 한 번 확인해주고,New Program 버튼을 눌러 새로운 우동 그래프 파일을 만들어줍니다.정상적으로 파일이 만들어졌다면,Open Udon Graph 버튼을 눌러, Udon Graph 창을 열어줍니다.위와 같이 우동을 만들어줍니다.혹은 아래 텍스트를 복사하여, Udon Graph 창에 붙여넣기 하셔도 됩니다.application/vnd.unity.graphview.elements ALWRz24TMRDGXyWas73a9Xr/RcoBaEEVEiCV5oKile0dRwbHi3a9gWibJ+PQR+IV8JK0qCWHqFLlg2fG9vj7ffP7190IW2EHhPmXEfRg7QexCQlcbtH5+tqLzgOBwTShpllTFWmeUCywoVxzTUWpK5phnktepZqLIlz+3vbGm9bBfISfMKdpEcUEdiHKWBTvCbi2wZuriz78uSKgbfvjmIEqGdeYFbQsM0l5wmJaikrSiiUq7FJyjGF16LCcZP/tsSePpN8443eXbm0cvguVj/IrKh/V9Rp9vX4o1PXJew+wQmCcaeQ0bWQeYPUkigkaM840qlSyip2ATVh5pM3Sp7AAj3GfgowwTJIOQpaHqYxgXO+FU3h1AfOpYe8749bHY4D9ufjX6F8pb7YYwl3vcfO6bS0Kd58u28B9T3/WIP6j/wdPT9Cf4+jt1PVFbCLPeXZwJjo6RWabXrWdNZLMltj1AXzBo3haZPZmsH7ocOFw8J2wZPZpkNao97j73H5Dt5BFITKV5UmVBu/K6vatsD1O41vt/wA=Start 이벤트는 맵에 접속하자마자 딱 한 번 호출되는 이벤트입니다.Start 이벤트를 통해, 플레이어가 맵에 접속하는 타이밍을 캐치한 뒤,Get gameObject 노드와 SetActive 노드를 실행시켜 줄 것입니다.Get gameObject 노드는 이 우동 그래프가 들어있는 게임 오브젝트를 가져오고,SetActive 노드로 그렇게 가져온 게임 오브젝트를 비활성화 시켜줍니다.이런식으로,맵이 모두 로딩되고 접속하게 되면 Canvas 오브젝트가 비활성화되는 우동 그래프를 만들 수 있습니다.우동 그래프를 만들거나 수정한 이후에는,반드시 Udon Graph 창 우측 상단에 위치한 Compile 버튼을 눌러줍시다. 4 - 테스트 해보기모든 준비가 끝났습니다.Canvas 오브젝트를 반드시 활성화 시킨채로 맵을 업로드하고,맵에 접속하여 로딩 패널이 제대로 작동하는지 확인합니다." }, { "title": "🌱 밀림", "url": "/posts/DayStone-230125/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-25 01:30:00 +0900", "snippet": "🗿 밀림密林ㅡ정글이 아니라 밀리다의 밀림이다.하룻돌이 메챠 밀린 것이다.일본 여행을 다녀오고 나서, 한동안 작업만 붙잡고 있었다.그래서 하룻돌도 못쓰고, TIL도 못쓰고, 공부도 못했다.마감 두 개를 끝낸 지금,여유가 생겨 밀린 일기를 적는다.날이 갈수록 내 기억력이 성하지 않아지고 있어서,그때그때 적어줘야 하는데..어렴풋한 기억과, 찰나의 메모들을 바탕으로 적는다.🗿 17일 SSD 구매오래전부터 느꼈지만,부쩍 내 컴퓨터의 속도가 느려지고 있었다.파일 하나 옮기려면 한 세월이고,부팅 한 번 하고나면 믹스커피 한 잔 타고 와도 인터넷 브라우저가 열리지 않았다.작업하다 갑자기 멈추는 경우도 허다하고,그게 블루스크린으로 이어지기도 하고..CPU와 메모리는 전에 짱짱한 걸로 바꿨었기에,이 원흉이 HDD이라는 것을 쉽게 직감할 수 있었다.윈도우도 HDD에 깔려있었으니.그래서 질렀다. P31 2TB.쿠팡에서 26만원 주고 모셔왔다.17일에 주문해서,19일에 도착하고,작업하느라 20일에 끼워넣었다.이 손가락 만한게 2TB 라니..엄지손가락 크기의 2GB USB를 쓰던 나로서는 신기하지 않을 수가 없었다.그리고 빨랐다..부팅, 프로그램 설치, 파일 이동, 빨라진게 확실히 체감되었다.기분 탓인지는 몰라도 인터넷도 빠르게 느껴졌다..HDD로부터 파일 옮기다가 하나 실수로 날려먹을 거 빼고는,정말 상쾌한 기분이었다.다음은 그래픽 카드다..🗿 20일~24일 설날나를 제외한 가족 모두는, 20일에 본가로 내려갔다.나는 작업 밀린 게 있어서..노년의 시츄 두 마리와 함께 자택 경비원으로 남았다.그냥.. 정말 작업만 해서 평소랑 크게 다른 건 없었다.시츄 한 마리가 요즘 상태가 안좋다.병원 대려가보니 심장쪽이 안좋다고 했던 것 같다.숨을 가쁘게 쉬고, 계속 떨고, 밥도 안먹고, 멍하니 누워있는다.떠는 걸 보고 아무래도 춥나 하는 생각에,내 방에 있으라고 바닥에 이불깔고, 전기 난로를 켜뒀다.작업하면서 신경쓰여서 계속 어떻나 보기는 했는데,금방 떠날 것 같다.그냥 그럴 것 같다.다른 한 마리는 먹을 거에 눈이 뒤집어져서..먹을 거 안 들고 있는데 막 달려들고 낑낑대고..다른 한 마리와 반대로 지나치게 활동적이라 힘들다.얘 이제 혼자 남으면 어떡하나 걱정되기는 하는데,몇 년 보다보니 얘들이 또 깊은 생각을 하는 친구들은 아닌거 같아서..그게 다행이라면 다행이라고나 해야할까.그냥 그런 것 같다.21일에 사촌 동생이랑 몇 년만에 통화 한 번 했었다.24일엔,의자에 이불 뒤집어쓰고 작업하고 있었는데,이불 한 구석이 난로 쪽에 떨어져서,담배불에 지진 것 마냥 구멍이 숭 나버렸다.가족들이 돌아왔는데, 새뱃돈을 전달 받았다.새배도 안하고, 인사도 안하고 받은 새뱃돈이라..흠.부모님이 카톡 프로필을 외할아버지 사진으로 바꾸셨다.올해 설날은 그냥 그렇게 지나갔다.🗿 그 외적을 게 많을 줄 알았는데 생각보다 적다.22일에 일 회의하고, 주니티 방송하고,23일에 주니티 후기적고,24일에 일 촬영 날이라 급하게 수정하고,25일 오늘 일 정산서랑 하룻돌을 쓴다.마우스 휠이 고장났다.휠 내리면 지혼자 다시 조금 올라간다.마우스도 조만간 바꿔야겠다.디스코드에 저장해뒀던 텍스트 파일 하나를 클릭 미스로 실수로 삭제했다.이렇게 날려먹은 내 기록들이 몇 개나 되는건지..백업을 잘해둬야겠다.블루택 이거..포스터에 붙이 자국이 남았다..속상하다.Muse Dash가 재밌다.그래서 DLC도 3만원 주고 샀다.충분한 가치가 있는 것에는 아낌없이 쓰자.프로그램을 만들 때에는 테스트를 제대로 하자.마감을 미루지 말자.부지런해지자.간바루조이 !🗿 25일트위터 북마크 정리를 했다.이젠 마음에 들어요 정리를 할 차례.근데.. 마음에 들어요가 3300개..마우스 휠 고장난 것 때문에 열받아서라도 못 하겠다!!!일단 마우스부터 주문해야겠다.쌓여가는 메모는 늘어가는데,소모를 못하고 있다.내 걸 만들 때가 왔다.1000개 정리해서 2000개까지 줄었다.외할아버지께서는 마늘 장아찌를 좋아하신다고 하셨다.눈물을 보이셨다.오랜만에 많은 이야기를 했다.마우스를 주문했다.작곡 프로그램을 구매할 것이다.그러기 위해서 어떤 걸 살 것인지 좀 더 자세히 알아봐야 할 것.(오래전부터 FL Studio를 생각해두긴 했다.)블로그 포스트 링크와 제목 포맷을 정리했다." }, { "title": "🌱 일본 여행 3", "url": "/posts/DayStone-230116/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-16 03:44:00 +0900", "snippet": "🗿 일본 - 13, 14, 15, 16일4일치의 일기다.물론 그새 까먹은 것들이 많다.13일아침에 야키니꾸? 고기 구워먹는 거헤에르메스 자주 보인다Animate 죠죠스크램블 스트릿트빌딩 1층에서 케이끼 난 안먹음근처 빌딩 14 -&amp;gt; 45? 전망대저녁 무튼 라면같은 검은 국물에 기름 띄워진호텔 돌아가려는데 비가오는 길에 타코야끼중간에 지하들어가서 지하철 쪽으로14일아침에 CUP NOODLE -&amp;gt; 카레맛 그게 아니였다 사리곰탕 느낌비가 온다편의점에서 오뎅 집어먹기뭐햇더라아이맥스 근처 도심 돌아다니기저녁에 봐야 하는데 낮에 봄애들이 12월에 군대가자는또 돈키호테게임 스테이션 잠깐 -&amp;gt; 가챠, 게임기, 리듬게임기다시 아이맥스 쪽그 뭐냐 타코야끼냉동 우동스다리 아파잠깐 빠칭코 구경15일집가는 날강원도 눈결항네팔 추락코웨이직원.. 가격 착각, 12시 40분, 4시 30분공항 음식29번 세 줄16일비행기한국 도착좋같은 검사 줄 존나 김 패딩 찢어버리고 싶음공항 -&amp;gt; 서울서울역 거의 다 문 닫음햄버거 먹으려 햇는데..근처 모텔근처 편의점 라면한국인들이 불친저한건지, 일본이 친절한건지공항은 이쁜대 건물이 안이뻐이제 작업해야 한다" }, { "title": "🌱 일본 여행 2", "url": "/posts/DayStone-230113/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-13 03:23:00 +0900", "snippet": "🗿 일본 - 12일어제 (12일) 또 방송보다가 골아떨어지고,13일 새벽 3시에 깨서 적는 기록.어제는 일찍 나가기로 해서 아침에 어찌 일어나긴 했는데,내가 너무 피곤한 바람에 다시 자고 오전 11시 30분쯤 다시 일어났다.나 때문에 기존 계획에 지장이 생겨서 가족들에게 미안했다.무튼 아침으로 내가 자는 동안 가족들이 사온, 롤 케이크와..뭐 였더라.음.아무튼 뭐랑 해서 먹었다.먹고 나왔다.오늘은 하라주쿠 쪽에 있는 무슨 골목이랑, 요상하게 보정되어 나오는 일본식 인생네컷? 에 가기로 했었다.호텔 지하와 연결되어 있는, 신주쿠 지하철 역으로 가서,기나긴 통로를 지나,부모님께서 한국에서 미리 구매해둔 지하철 3일 자유 이용권을 출력했다.근데 우리가 가고자 했던 하카주쿠 역은 JR 노선에 배치되어 있었는데,우리가 출력한 지하철 자유 이용권에 JR 노선은 포함되어 있지 않았다.부모님 말씀으로는 일본 지하철 노선을 관리하는 곳이 여러 곳이라 했던 것 같다.그래서 자유 이용권임에도 불구하고, 일부 노선은 그 대상에 포함되지 않았던 것이다.이리저리 방황하다가,음.메이지진구마에역 역으로 갔었나.제대로 기억이 안나는 데 무튼 주변 역으로 가, 내려서 우리가 가고가 했던 골목쪽으로 걸어가기로 했다.지하철 출구에서 딱 나왔는데, 처음 보이는 풍경를 통해 든 생각은일본 느낌이 아닌 것 같았다.건물들도 독특하게 생기고, 인도도 넓고, 서양쪽 외국인들이 꽤 있다보니,서양쪽 느낌이 더 났던 것 같다.독특했다.부모님과 나는,폰으로 구글 지도의 네비를 들으며 앞장서가는 동생을 졸졸 따라갔다.확실히 우리나라와는 분위기가 많이 다르다고 해야하나,길거리, 골목 하나하나 꾸며져 있고, 세련되어 있는 느낌이었다.일뽕 거르고 그랬다다.무튼 주변을 두리번두리번 둘러보며 그 골목으로 향했다.방금 인터넷에 검색해서 찾아보니 다케시타도리 라는 곳이었다.제대로 기억하는 게 맞는 지 모르겠지만, 우리나라 명동에 있는 그런 느낌의 골목이었다.막 군것질 거리 팔고, 옷/화장품 팔고, 기념품 팔고, 카페있고 그런 느낌.특별히 생각나는 건,동물 카페 (강아지, 수달, 부엉이? 등) 들이 특히 많이 보였고,크레페 가게들도 뭔가 많았고,코스프레 옷 같은 걸 입고 사진 찍을 수 있는 곳이 있었고,BOYS 였나? 실시간으로 틱톡 영상을 찍고 있는 것 같았던 후레시맨 같은 형님들의 전용 공간이 있었고,전단지 나눠주는 흑형들이 유독 많았고,가챠 왕창 있는 가게가 있었다.우리는 크레페 가게에서 딸기 크레페 하나 사서 나눠 먹고, (크림에서 아이클레이 향이 나서 먹기 힘들었다)가챠 가게 구경하다 트위터에서 많이 본 것 같은 동물 캐릭터를 동생이 하나 뽑고,이리저리 돌아다니다가 큰 거리로 나왔다.이제 프리쿠라? 라고 불리는 일본의 인생네컷을 찍으러 갔다.가는 길에 크게 갤럭시 건물이 있었는데,그 옆에 익숙한 얼굴의 백종원 아저씨 간판을 포함해, 한국 간판이 많이 달린 건물이 하나 있었다.또 가는 길에 이케아도 잠깐 들러 구경하고,유니클로도 잠깐 들러 구경했다.유니클로든 어디든, 스파이 패밀리나 다른 애니 콜라보 제품이 있어서,오우 역시 이런 것도 가능하구나. 싶었다.우리나라 유니클로 같은 곳에 애니메이션 콜라보 제품이 배치되는 일은 영원히 없을 것 같은데.중고 옷만 모아서 따로 파는 옷 가게도 들렀다.얼룩 안지워진 옷도 하나 팔고 있었다. (그냥 기억났다)한 바퀴 둘러보고 금방 나왔다.그리고 근처에 프리쿠라가 있었다.입구에 떡하니 남자 혼자서 입장 금지 써져있길래,느낌 싸 했다.들어가니 여자 얼굴 대따 크게 그려진 기계들과,JD 누님들만 있어서 벌써 기가 눌리는 기분이었다.빨리 나가고 싶었다.기계에 100엔짜리 동전 5개 넣고 들어가서 가족들과 막 찍고 나왔는데,뭐 그냥 사진 디폴트가 과장된 보정으로 나왔다.사진을 찍고 나서는, 기계 다른 편에서 추가적으로 보정이나 꾸미기 등을 할 수 있는데,죄다 일본어라 뭔 소리인지도 모르겠는데 짧은 시간 제한까지 있어서 이게 뭔가 싶었다.뉴비는 뭐 아무것도 못하고 하더놈들만 잘하는 구조였다.그래서 스티커로 뽑을지, 포토 카드로 뽑을지에 대한 선택지도고민할 틈새도 없이 타이머가 끝나 지나가버리고,사진들도 뭘 출력해야 선택해야 하는 거였는데,어리바리 타다가 보정/꾸미기를 안한 디폴트 상태의 사진이 선택되어 나왔다.다른 기계에서도 한 번 더 찍었는데,결과는 똑같았다.뭔지 해석하고 고민할 동안 타이머가 다 지나서 뭐 제대로 선택한 것도 없이 출력이 되었다.동생이 좀 아쉬워하는 눈치였는데 뭐 어쩌겠는가.모르면 맞아야 하는 것이 프리쿠라의 세계였다.그러고 나왔다.시간이 남아서 시부야 쪽에 있는 메가 돈키호테에 가기로 했는데,어제 오늘 평소 운동량에 비해 월등히 많은 운동을 한 결과 다리와 허리가 너무 아픈 상태였다.목적지까지 걸어서 20분 간다는 걸 듣고,내가 아.. 이건 좀 아니다 싶어 징징거려서,근처 하라주쿠 역에서 시부야 역 까지 딱 한 정거장 지하철 탔다.역에 도착하고 일단 밥 먼저 먹기로 해서 메가 돈키호테 근처의 스시집을 갔다.가는 길에 스크램블 거리인가, 거기에 사람이 너무 많은 걸 두 눈으로 봤는데,지금 가는 곳이 맛집이라길래, 아.. 이거 100% 어제처럼 또 줄 서야한다 하고 채념하고 있었는데엥.가게가 커서 그런지 바로 그냥 자리 잡았다.여기는 그냥 회전 초밥집은 아니고,각자 자리에 있는 작은 키오스크로 초밥을 주문하면,앞에 있는 회전대가 돌다가 딱 내 자리 앞에서 멈추는 그런 상위호환의 초밥집이었다.주문하면 눈 앞에 딱 도착해서 재밌었다.키오스크에 번역이 일부 요상하게 되어 있었는데, 그것도 나름 재밌었다.‘조금 사치스러운 일품의’ 메뉴도 있어서 표현이 재밌었다.맛은 그냥 맛있게 먹었다.방어 초밥이 싸고 맛있었던 것 같다.오늘 여기 오는 길에 무슨 스테이끼가 1인분에 3000엔이었던 걸 봤는데,여기는 우리 가족 다해서 4000엔 나왔다.배 부르게 먹어서 가성비가 아주 좋았다고 할 수 있다.다리 허리 회복시키고, 배도 채우고 메가 돈키호테로 갔다.그냥 뭐 더 넓고 한국인들 많은 도키호테였다.특별히 뭐 한거라곤 꼭대기 층에서 동생이 200엔 * 4번 = 8000원 주고 가챠 코너에서 가챠를 돌린 거였다.어물쩡 어물쩡 거리다 주체를 못하고 계속 뽑길래 역시 가챠/콜렉션 게임의 매출 순위가 높은 이유를 알 것만 같았다.그러고 지하철 다시 타고 호텔로 오고,또 다시 편의점에서 주전부리 사들도 방으로 돌아왔다.정말 다리 허리 빠지는 줄 알았다.주전부리 대강 먹고 누워서 방송보다가 잤다.그렇게 12일, 여행의 두 번째 날이 끝났다.🗿 음아무래도 내가 너무 버릇없이 행동하는 것 같다.여행까지 와놓고 말투도 툭툭 던지는 느낌이다.좀 더 조심해야겠다.그리고 난 병신이다." }, { "title": "🌱 일본 여행 1", "url": "/posts/DayStone-230112/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-12 05:44:00 +0900", "snippet": "🗿 일본 - 11일11일 아침에 일어나,양양 공항으로 갔다.전에 제주도 가는 비행기 타러 왔을 때 주차장에 주차할 곳이 없어서 뒷편에 있는 자갈돌 깔린 임시주차장에 주차를 했었는데,이번에도 역시 주차할 곳이 없어서 임시 주차장에 주차했다.탑승 수속 (체크인)을 하는데,가족들은 프리패스였지만, 나만 얼굴 검사를 했다..내가 여러 의미로 심상치 않은 외관을 지니긴 했다.수속 전에 바나나 우유를 하나 샀었는데, 액체를 반입 못하다보니 원샷했다.양양 공항도 국제 공항인데, 탑승구가 4곳 밖에 없다.탑승구까지 많이 안걸어도 되다보니 그건 좋았는데,아무래도 수도권 공항들과 비교하면, 상대적으로 공항 특유의 그 설레는 감성이 느껴지지는 않아서 아쉬웠다.우리는 일본행 비행기를 탔다.비행기도 뭔가.. 그냥 버스타는 느낌이었다.비행기가 익숙하다는 의미가 아니라, 뭔가.. 분위기가..무튼 비행기를 탔다.오면서 우리집 근처 호수도 보고, 울릉도도 보고 여러 가지 봤다.동생이 정말 인상깊은 광경을 찍었어가지구 올리고 싶었는데, 아직 사진을 못받아서 나중에라도 올려봐야겠다.비행기는 1시간 반 정도 걸렸다.우리집에서 양양 공항까지 30분 정도 걸리니,항공편만 있다면 우리집에서 나리타 공항까지 30분 + 1시간 30분 = 2~3시간 밖에 안걸린다.비행기 기다리는 시간 감안하더라도,나리타 공항이 광양에 있는 외할머니댁보다 시간적으로 더 가깝다는 말이다.외할머니댁까지 가는데 여섯 일곱 시간 정도는 필요하니까.이런 세상에.안내 방송 들었을 때는 비행기가 시속 900KM 라고 했던 것 같다.아따 빠르다, 좋은 세상이다.도착하고 나서는 입국 수속을 시작했다.수속을 시작하기전에 폰 유심칩을 로밍 유심칩으로 교체하려고 했는데,유심 빼는 용도의 작은 철심이 구멍에 박힌채 부러져서 너무 당황스러웠다.옆에서 공항 직원분이 막 도와주려 하는데,어우 머쓱해서 땀이 엄청 났다, 순간 엄청 더웠다..게다가 일본 추울까봐 패딩도 입었는데 생각보다 따뜻해가지구,굉장히 엄청나게 더웠다..다행히 부러지고 남은 철심 손잡이로, 구멍에 박힌 철심을 어떻게든 긁어 꺼내서유심을 갈아끼우는 대에는 성공했다. 다행이다.물론 유심에 정신팔린 사이에 우리 비행기에서 내린 승객들과,같은 시간대에 도착한 상하이 비행기에서 내린 승객들이 우리 앞을 다 지나가서,수속 줄이 엄청 밀려 거진 30분은 서있어야만 했다.굉장히.. 힘들었다.무튼 일본에 도착했다.음.뭐랄까.하도하도 ‘일본은 깨끗하다!’ 들어서 내가 선입견을 가지고 있다거나, 이미 콩깍지 씌인 건지는 모르겠지만,일본 올 때 마다 느끼는 건 확실히 깔끔하고 깨끗한 것 같다.단순히 깔끔하고 깨끗한 것만 그런 게 아니라, 뭔가 디자인(구조/설계)적으로도 이쁜 것 같다.모른다,그냥 단순히 일뽕일 수도 있는데, 무튼 내가 느낀 경험으로는 그렇다.어쨌든.공항에서 호텔까지 가는 버스를 기다렸다.그동안 화장실에.. 잠깐 다녀왔는데.어우, 무슨 화장실 칸마다 비대가 있었다.앉는 부분 닦는 용도의 전용 세정제도 달려있고,잠깐 일어났는데 물도 지혼자 내려가고..어우, 신기했다.동생이 자판기에서 딸기 우유를 사왔다.그냥 캔에 담긴 딸기 우유맛이었다.버스타고 잠깐 졸았더니 호텔역에 도착했다.정류장 코 앞이 바로 호텔이라 편했다.근데..여기도 체크인 줄이 굉장히 길었다..첫 날부터.. 다리가.. 아프기 시작했다..체크인 하는데 직원이 실수를 해서..아. 좀 더 기다렸다.방 카드를 받고 엘리베이터 타는 곳으로 갔다.특이하게 지금 엘리베이터가 몇 층에 있는 지 알 수가 없었다.버튼도 누르면 그 옆에 있는 엘리베이터가 내려오는 게 아니라, 6개의 엘리베이터 중 먼저 도착하는 엘리베이터가 열렸다.엘리베이터 안에 있는 버튼도 신기했다.식당, 로비 등으로 쓰이는 1~4층을 제외한 나머지 층들은 그냥 눌리지 않았다.한 쪽 벽에 달린 카드 리더기에 방 카드를 가져다대면 알잘딱으로 그 층으로 올라갔다.오우, 신기했다.짐을 풀고, 첫 끼니를 해치우러 다시 밖에 나왔다.동생이 찾아온, 호텔 주변에 있는 우동 맛집을 찾아갔는데,아.또 줄이 길었다.참을 수 없었지만, 번호표를 받고 기다렸다.키오스크에 있는 QR 코드를 찍었더니, 앞으로 몇 팀이 대기중인지 나왔다.우리 앞으론 9팀 남아있었다.버스에서도, 호텔에서도 그랬지만,여기 줄에도 한국인들이 많았다.줄서서 기다리고 있었는데, 앞에 서계시는 한국인 커플분들이 여기 좀 기다려야 한다고, 번호표 뽑았으면 주변 돌아다니다 오는 게 좋다고 하셨다.마침 금방 직원분이 밖으로 나와서 번호 몇 번이후 부터는 식당 앞에서 기다리지 마라고 했다.아무래도 줄이 길면 주변 다른 가게/식당들에게 피해를 줄 수 있기도 하고, (골목이다보니)줄이 길면 다른 고객들이 그냥 갈 수도 있으니 그러는 것 같다.그래서 주변을 돌아다녔다.패밀리마트였나, 편의점 들어가서 삼각김밥 하나씩 사들고 나왔다.그러곤 다시 주변을 서성거리다, 우리 번호 순서가 되어 식당에 들어갔다.자루우동과 이름이 기억안나는 버터랑 날계란 들어간 우동을 시켰다.맛있었다.근데, 차가웠다.추웠다.물도 얼음물이었다, 추웠다.밖에 나와서 달달달 떨었다.다시 호텔로 돌아가기 전에,호텔에서 먹을 주전부리들을 사가기 위해 편의점에 들렸다.나는 왁굳형이 유학시절 좋아했다는 산토리 쿠로 우롱차와,캠방 때 먹은 U.F.O, 카레 라면을 장바구니 담았다.산토리 쿠로 우롱차.오, 그냥 차 맛이었다. 맛있었다.U.F.O.오, 짜다. 짠걸 좋아해서 맛있었다.푸딩과, 메론 소다와, 오징어 다리와, 아까 사두고 안먹은 삼각김밥과, 호텔 방에 구비된 커피도 먹었다.음, 맛있었다.TV를 틀었다.바로 스모 선수들이 튀어나와서 당황했다.채널 이리저리 돌리긴 했는데, 뭐 어디를 틀어도 사실 제대로 알아들을 수가 없다보니,말 몰라도 볼 수 있는, 세상에 일어난 일들(영상들) 보는 예능 프로그램을 봤다.그 예능 프로가 끝나고,다시 이러저리 채널 돌리다가 뭐 볼게 없어서,잠깐 왁굳형 방송보다가 잤다.근데 나는 익숙하지 못한 곳에서 제대로 잠을 못잔다.그래서 3시에 눈이 떠져버렸다.음.그래서 하룻돌을 쓴다.지금은 아침 7시다. 한국 시간 기준인지 일본 시간 기준인지는 모르겠지만,아무튼 7시다.아 그리고,일본 IP다 보니까 유튜브 광고도 일본 광고가 나오고,트위치 화질도 1080P로 볼 수 있었다.11일의 기록. 완.🗿 12일그냥 열등감에 미치겠다.난 왜 못하는 거고 안되는 건지 모르겠다.그냥 병신이다 ㅋㅋ" }, { "title": "🌱 아무것도 안했다", "url": "/posts/DayStone-230110/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-10 23:13:00 +0900", "snippet": "🗿 아무것도 안했다밤새고,아침에 영화를 봤다.타짜 클립이 유튜브에 계속 뜨길래,한 번 보기로 했다.왓챠에서 봤는데,영화가 끝나도록 쿵작작 쿵작작이 안나와서뭐지 했는데알고보니 봤던 영화가 타짜 : 신의 손 였다.타짜도 여러 개가 있는 줄 몰랐어가지구 그냥 뜨는 거 봤었는데,아쉽게 됐다.그래서 그냥 타짜도 봤다.익숙한 장면들 많이 나와서 아 이게 이거구나 하고 봤는데,너무 익숙해서 그런지 그렇게 막 재미는 없었던 것 같다.오히려 나는 신의 손이 더 재밌있었던 것 같은 느낌.아무튼 영화 두 편보고 의자에서 골아떨어졌다.그렇게 아무것도 하지 않은 채 하루가 죄다 지나가버렸다.🗿 택배오늘은 택배가 2개 왔다.하나는 내일 여행가는 일본에서 쓰기 위한 유심칩,하나는 주르르님 달력이다.얼마전 6일에 왁굳형 굳즈를 처음 가져봤는데,며칠 안지나서 르르땅 굿주를 가지게 되니,그저 왁뽕 주뽕 터지지가 않을 수가 없다.열심히 해야겠다.🗿 근데 아무것도 안했다근데 아무것도 안했다.내일 여행가서 최소한 오늘까지는 끝내려고 했던 작업이 3개 정도 있는데,결국 하나도 끝내지 못했다.노트북.. 들고가서 자기전에 잠깐씩이라도 작업해야겠다.바쁘다 바빠.간바루조이 !🗿 그래도 책은 읽었다그래도 책은 읽었다역시나 오늘도 ‘읽기가 좋은 코드가 좋은 코드다’이제 2-8 챕터까지 다 읽었다." }, { "title": "🕯️ 매크로 #, ## 연산자", "url": "/posts/Macro-Operator/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2023-01-10 23:01:00 +0900", "snippet": "💎 # 연산자#define DEFINE_STRING(token) string #token;// Define String Variable TempDEFINE_STRING(Temp);#define PRINT_TOKEN(token) printf(#token &quot; is %d&quot;, token)// Print &quot;intVariable is 4444&quot;int intVariable = 4444;PRINT_TOKEN(intVariable);매개변수를 문자열로💎 ## 연산자#define DEFINE_INT_X(token) int x##token = token;// Define Int Variable x1DEFINE_INT_X(3);#define CALL_FUNC(token) SomeObj-&amp;gt;SomeFunc##token()// Call SomeObj-&amp;gt;SomeFuncA()CALL_FUNC(A);// Call SomeObj-&amp;gt;SomeFuncTemp()CALL_FUNC(TEMP);매개변수를 문자열로 만들고 다른 토큰과 합침" }, { "title": "🕯️ Short-Circuit Evaluation", "url": "/posts/Short-Circuit-Evaluation/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2023-01-09 22:02:00 +0900", "snippet": "💎 Short-Circuit Evaluation단락 방식참고 - 위키피디아, 참고 - 제로니모님의 글대부분의 프로그래밍 언어에서는, 불 연산에 Short-Circuit Evaluation 이 적용된다.위 그림처럼,순서대로 연산하는 도중 이미 결과가 결정되는 경우,굳이 남은 피연산자들까지 계산할 필요가 없기 때문에, 결과가 결정된 시점에서 계산을 마친다.SomeObject a = null;if (a != null &amp;amp;&amp;amp; a.SomeFunc())C# 에서 &amp;amp;&amp;amp; 은 Short-Circuit Evaluation 이 적용되기 때문에,위 코드에서는 a != null 에서 계산이 끝나고, a.SomeFunc() 가 실행되지 않아 런타임 에러가 발생하지 않는다.이런식으로 활용할 수 있다.만약 Short-Circuit Evaluation 이 적용되지 않았다면,위 코드에서 a 가 null 인채로 a.SomeFunc() 가 실행되어 NullReferenceException 이 발생했을 것이다.// 1 : 최소 1msif (takes1ms() || takes1s())// 2 : 최소 1sif (takes1s() || takes1ms())// a : 최소 O(1)if (boolVariable || take1s())// b : 최소 1sif (takes1s() || boolVariable)또, 만약 함수의 반환 값을 피연산자로 사용하는 경우,상대적으로 비용이 높은 함수를 뒷쪽에 배치하여 시간 복잡도를 줄일 수도 있다.if (false &amp;amp; SomeFunc())if (true | SomeFunc())반면, 결과와 상관없이 피연산자로 존재하는 모든 함수들을 실행시키고 싶은 경우가 있을 수 있다.(예시가 딱 떠오르지는 않지만)이 경우, C# 에서는 &amp;amp; 이나 | 를 사용할 수 있다.&amp;amp; 와 | 는 비트 연산자로 쓰이기도 하지만, 불 연산 식에 사용될 경우, 불 논리 연산자로써 사용된다.&amp;amp; 이나 | 를 불 논리 연산자로써 사용하면, 결과와 상관없이 모든 피연산자들을 계산한다.때문에 위 두 줄의 코드는, 첫 번째 피연산자에서 이미 결과가 결정되어버리지만, 계산을 끝내지 않고 SomeFunc() 함수를 실행시킨다.이때, 이런 &amp;amp; 와 | 를 &amp;amp;&amp;amp; 와 || 에 구분지어,Eager Operators (&amp;amp;, |) 와 Short-Circuit Operators (&amp;amp;&amp;amp;, ||) 로 부를 수 있다.C# 튜플 비교 시, Short-Circuit Evaluation 이 적용된다." }, { "title": "🕯️ 드모르간 법칙, De Morgan&#39;s Law", "url": "/posts/De-Morgans-Law/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2023-01-09 22:02:00 +0900", "snippet": "💎 드모르간 법칙, De Morgan’s Law not (A or B) = (not A) and (not B)not (A and B) = (not A) or (not B)💎 이를 이용해, 읽기 좋은 코드 만들기// 1if (!(file_exists &amp;amp;&amp;amp; !is_protected))// 2 (With De Morgan&#39;s Law)if (!file_exists || is_protected)2번 조건문이 더 읽기 쉽다 !" }, { "title": "🕯️ Zero Day Attack(Exploit)", "url": "/posts/Zero-Day-Attack/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2023-01-09 21:24:00 +0900", "snippet": "💎 Zero Day-&amp;gt; 이전에 알려지지 않은 취약점💎 Zero Day Attack-&amp;gt; Zero Day에 대한 패치가 만들어지기 전에 일어나는 공격💎 One/N Day Attack-&amp;gt; 취약점에 대한 패치가 만들어졌으나, 패치가 적용되지 않은 곳에서 일어나는 공격💎 Old Day(Olday) Attack-&amp;gt; 오래된 패치임에도, 이를 적용시키지 않은 곳을 대상으로 일어나는 공격… 이라고 나오지만, 한국어 자료들만 검색되는 것으로 미루어보아, 외국에서는 쓰이지 않는 용어인 것 같다." }, { "title": "🌱 뇌정지", "url": "/posts/DayStone-230108/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-08 19:19:00 +0900", "snippet": "🗿 뇌정지do{ continue;} while (false);위 코드는 무한 루프인가, 한 번만 실행되는가?나는 생각하는 것을 그만뒀다.🗿 책 읽기 - 읽기 좋은 코드가 좋은 코드다계속해서 읽고 있는 ‘읽기 좋은 코드가 좋은 코드다’.이제 책 장수로 따지면 거의 절반인 2-7장까지 읽었다.1-6 2-1 2-2 이렇게 이어질 줄 알았는데, 1-6 2-7 이라 의아했다.🗿 건강검진결과오늘은 아니고,지난 3일에 건강검진결과가 메일로 날라왔었다.나는 건강하다!저체중에 운동 부족인 것만 제외하면 말이다.운동..밖에 나가긴 싫으니 집에서 뭐라도 해야할 것 같긴 한데..그치만 운동하기 싫다..🗿 취미가 없다지금 취미랄 게 없다.요즘 느끼는 도파민은 단순히 하루하루 공부하면서 성취감을 느끼는 것 뿐이고,뭔가 재미를 느끼거나 하는 게 없다.아직 게임을 하기에는 스트레스를 감당할 자신이 없다.그렇다고 평소 게임말고 별달리 즐기는 게 없었기에..쉬고 놀고 하고 싶은데 하고 싶은 게 없다.그저 멍하니 커뮤니티를 새로고침할 뿐….진짜 고쳐야 하는데.🗿 스피커한 쪽이 안들리길래 오래썼으니 고장났나보다~하고 반대쪽 스피커 책상 가운데에 두고 한동안 쓰고 있었는데,그냥 USB 단자 뺏다꼽으니 말짱해졌다.머쓱🗿 좋아하는 게 없다취미가 없는 게 아니다.그냥 좋아하는 게 없다.뭘 해야 할지 모르겠다.갑자기 공허하다." }, { "title": "🕯️ Yoda Notation", "url": "/posts/Yoda-Notation/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2023-01-08 18:08:00 +0900", "snippet": "💎 Yoda Notation(Condition)참고// 1if (length &amp;gt;= 10)// 2if (10 &amp;lt;= length)“180보다 내 키가 컸다면..” 은 아무래도 부자연스럽다.같은 이유로 2번 조건문도 부자연스럽다.“10이 lengtg보다 작거나 같다면” 은 아무래도 부자연스럽다.이처럼 비교 조건문을 적을 때는, “내 키가 180보다 컸다면..” 같은 어순과 동일하게,왼쪽에 변하는 값(질문을 받는), 오른쪽에 정해진 값(비교 대상으로 사용 되는) 으로 적는 것이 일반적이다.“length가 10보다 작거나 같다면” 은 상대적으로 자연스럽다.반면, 의도적으로 2번 조건문처럼 적는 경우가 있다.if (intVar = 10)// intVar == 10 이라고 적었어야 했는데 !위처럼 == 를 써야 하는 상황에서,실수로 = 만 적어버리는 실수를 할 때가 있다.이는 분명 논리적인 오류가 존재하지만, 코드 상의 오류는 존재하지 않기 때문에,컴파일 에러가 발생하지 않는다.때문에 이를 놓치는 경우,직접 버그를 찾아야 하는 경우가 발생할 수 있다.if (10 = intVar)// 컴파일 에러 !이때, 위처럼 피연산자들의 순서를 바꾸게 된다면,상수에 변수를 대입할 수는 없기에, 컴파일 에러가 발생하게 된다.이를 통해 실수를 사전에 방지할 수 있다!이처럼 의도적으로 읽기에 부자연스러운 순서로 비교 조건문을 적는 방법을,스타워즈의 등장인물, 요다가 어색한 어순으로 말한다는 특징에서 따와,요다 표기법(조건) 이라고 한다.요다 표기법에는 또 다른 이점도 있다.// 1String myString = null;if (myString.equals(&quot;foobar&quot;)) { /* ... */ }// This causes a NullPointerException in Java// 2String myString = null;if (&quot;foobar&quot;.equals(myString)) { /* ... */ }// This resolves to false without throwing a NullPointerException위는 Wikipedia의 Yoda_conditions 문서의 예제다.위같은 상황에서는 예외 발생을 피할 수 있게 해주는 역할도 하게 된다.이러한 이점들이 분명 존재하기는 하지만,최신 컴파일러/IDE 에서는 알잘딱으로 실수에 대해 경고를 표기해주기도 하고,애초에 할당 연산 시 반환값이 존재하지 않거나, 조건문에 할당 연산문을 허용하지 않는 언어들도 있고,무엇보다 가독성을 해치기 때문에,‘요다 표기법은 불필요한 과거의 것이 되어 가고 있다.’라는 ‘읽기 좋은 코드가 좋은 코드가’ 저자의 의견처럼,요즘 들어서는 그렇게 쓰이지 않는 모양인 것 같다." }, { "title": "🕯️ The Swap Trick", "url": "/posts/The-Swap-Trick/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2023-01-07 23:22:00 +0900", "snippet": "💎 The Swap Trick : 메모리 재할당참고0참고1참고2참고3읽기 좋은 코드가 좋은 코드다의 84p 에서 언급된 The Swap Trick.아래는 책에 나온 예제 코드다.struct Recorder{ vector&amp;lt;float&amp;gt; data; ... void Clear() { vector&amp;lt;float&amp;gt;().swap(data); // 뭐? 그냥 data.clear() 를 호출하지 않는 이유가 뭐지? }}위 코드를 보면 주석에 적힌 말처럼 단순히 data.clear() 호출하면 될 것 같은데,빈 벡터 (vector()) 와 swap 해주고 있다.이는 ‘잘 알려지지 않은 C++ 언어 특유의 세부 사항 ㅡ 저자에 따르면’ 을 알아야 한다.vector.clear()는 vector 안에 저장된 값들은 제거시켜주지만,vector에 할당된 메모리는 해제되지 않는다!때문에 강제로 메모리를 해제해주기 위해,빈 vector와 swap을 해주는 것이다.스코프가 끝나는 시점에는 자동으로 힙에서 메모리가 해제되기 때문에,계속해서 사용하는 vector가 아니라면 이렇게 쓸 필요는 없을 것 같다.책에서 나오는 The Swap Trick 은 이를 의미하는 것 같고,검색해보니 다른 것도 있는 것 같다.vector&amp;lt;float&amp;gt;(data).swap(data);이렇게 같은 vector를 그대로 swap 해주면,vector가 메모리를 딱 저장된 요소들만큼만 사용하게 된다.무슨 말이냐 하면,vector는 용량이 꽉 찼을때 스스로 메모리를 재할당하여 일정 비율로 크기를 키우는데,이때 커진 메모리를 모두 사용하지 않는 이상, 낭비되는 메모리가 생기게 된다.때문에 위와 같은 방법으로 The Swap Trick을 사용해 메모리를 절약한다.이는 vector 뿐만 아니라 string, deque 같이 동적으로 메모리 할당량이 바뀌는 친구들에게도 적용된다고 한다.C++ 11 에서는 이와 같은 기능을 하는 shrink_to_fit() 함수가 있다고 하는데,이도 새로운 vector를 만들고, 복사하는 것이기에,큰 vector에 대하여 사용할 경우, CPU 오버헤드를 한 번 고민해봐야 한다.또, 방금 언급한 것 처럼 과도한 오버헤드가 발생할 수 있기에,shrink_to_fit() 함수는 non-binding 함수 (모든 컴파일러에서 반드시 구현되지는 않는) 이라고 한다.때문에 이전에 사용하던 컴파일러와의 호환성 역시 생각해야 할 것이다." }, { "title": "🌱 책 읽기", "url": "/posts/DayStone-230107/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-07 03:38:00 +0900", "snippet": "🗿 책 읽기 : 읽기 좋은 코드가 좋은 코드다책을 읽자.일단 읽기 좋은 코드가 좋은 코드다 1-3장까지 읽었다. (03:39)그리고 5장까지 읽었다. (23:02)새벽에 잔잔할 때 읽어야겠다. 음악 틀거나 방송 봐야할 때에는 역시 집중이 잘 안된다.🗿 영단어 외우기 : Quizlet, Merriam-Webster책 읽으면서 궁금한 점이 생겨 구글링을 했는데,영어를 잘 못하다보니 모르는 단어가 많아서 단어 하나하나를 다시 구글링하며 읽었다.토익 강의도 신청했겠다, 영어 좀 해야겠다 싶어서단어 외우는 사이트.. 로 검색을 하니 Quizlet 이라는 게 나왔다.꽤 괜찮은 것 같다.계속 무료 플랜으로 써보다가, 유료 플랜도 고민해봐야겠다.개같이 비싼 요즘 구독제에 비해서는 착한 35,000원/1년 이라는 가격에 잠깐 멈칫했다가,또 금새 잘 안할 수도 있으니 일단 두고보기로 했다.Merriam-Webster 라는 곳도 찾았다.여긴 단어 외우는 사이트는 아니고, 그냥 백과사전 같은 느낌.근데 ‘오늘의 단어’ 가 꽤 매력적으로 느껴져서 북마크하고 챙겨보기로 했다.영어 문서를 안 읽는 날에도, 여기서 최소 한 단어 쯤은 가져갈 수 있으니, 시너지가 있을 것 같다.영어도 열심히다.{ % include ganbaru-zoi.html % }🗿 동그라미 그리기트위터 보다가 찾은,완벽한 동그라미 그리기 사이트.나의 기록은 97% 다. 하하하.🗿 백준읽기 좋은 코드가 좋은 코드다 읽다가 책 표지로 책갈피 만들어서 읽은 곳에 끼웠는데,이제보니 옮긴이가 임백준님이시다.헉, 설마 백준 사이트 만드신 분이건가!했더니 그건 아니였다.백준 온라인 저지 만드신 분은 최백준님이셨다.이런이런" }, { "title": "🕯️ 상수 이름에 접두사 k, 헝가리안 표기법", "url": "/posts/Prefix-K-For-Constants/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2023-01-06 23:46:00 +0900", "snippet": "💎 상수 이름에 접두사 k참고 요약 :c는 char의 약자로 이미 쓰고 있기 때문에,수학에서 상수로 쓰이고, 독일어로 상수의 첫 글자인 (konstant), k 를 쓰게 되었다.… 혹은 그저 정말 발음이 유사해서 썼다던지.private const int kVariable = 1;위처럼 상수 이름 앞에 k를 붙이는 경우가 있다.과거에 약한 타입 언어(Weak Type Language)가 쓰일 때,지금 같이 자동 타입 검사가 있지 않았던 탓에, 타입을 잘못 오해하고 사용하는 경우가 빈번했다.이 문제를 해결하기 위해 헝가리안이었던 마이크로소프트의 찰스 시모니가 제안한 방법이,바로 헝가리안 표기법이다.private bool bVariable = true;private char cVariable = &#39;A&#39;;헝가리안 표기법은 위와 같이 변수 이름 앞에 변수 타입을 명시하는 표기법이다.이렇게 변수 이름 앞에 변수 타입을 지정함으로써, 변수를 쓰면서 그 변수 타입이 무엇인지 바로 알 수 있었다.이를 통해 변수 타입을 잘못 오해하고 사용하는 문제를 해결하고자 했다.이후 시간이 흘러, 강한 타입 언어(String Type Language)가 등장하면서 주요 언어로 더욱 쓰이게 되었는데,강한 타입 언어는 타입을 분명하게 알 수 있었음에도 불구하고, 많은 팀과 프로그래머들이 헝가리안 표기법을 그대로 채택했다고 한다.내 생각에는 참고 링크의 답변의 의견처럼,사용된 맥락을 생각하지 않고 무분별하게 이전 관습을 차용함으로서 생긴 오용이라고 생각된다.물론 내가 프로그래밍을 시작한 시점엔 이미 IDE가 자동 타입 검사를 해주는 편리함이 있었기에,당시 상황에 대해 뭐라 할 자격은 없다고 생각이 들기는 하지만..무튼 헝가리안 표기법의 목적은 변수 타입을 한눈에 볼 수 있음에 있는데,지금은 단순히 변수에 마우스만 올려도 타입을 알려주는 편리한 IDE가 존재하기에,굳이 가독성을 떨궈가며 헝가리안 표기법을 사용할 이유는 없는 것 같다.첫 글자가 똑같은 타입에 대해서, 계속해서 상수와 같은 특수한 케이스를 만들수도도 없고 말이다." }, { "title": "🕯️ OnParticleCollision 이 호출되지 않을 때", "url": "/posts/OnParticleCollision-Not-Work/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2023-01-06 23:46:00 +0900", "snippet": "💎 OnParticleCollision 이 호출되지 않을 때 파티클 시스템에서 Collision 이 켜져있는 지확인 Collision 에서 Type 이 World 인지 확인 (기본 Plane) ⭐ Collision 에서 Send Collision Messages 가 켜져있는지 확인 Collision 에서 Collision Quality 가 High 인지 확인 Collision 에서 Collision Quality / Collides With 의 레이어에 닿고자 하는 오브젝트의 레이어가 포함되어 있는지 확인참고" }, { "title": "🌱 게임 패드", "url": "/posts/DayStone-230106/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-06 15:55:00 +0900", "snippet": "🗿 게임 패드 : GAMESIR T4 Pro주문했던 게임 패드가 왔다가성비 좋은 게 T4 Pro 라길래, 고민없이 바로 주문했었더랬다.구성품은 게임 패드, 충전기/연결단자, 블루투스 USB 단자, 휴대폰 걸이, 설명서 및 프로모션들이다.컴퓨터에 연결하니 게임 패드에 불이 딱 켜지는 게 이뻤다.그래서 이걸로 뭐하지.🗿 우왁굳즈 : OVAINE GYERUIK 새벽반차가리 반팔티 (화이트)어제 하룻돌에 적지 않았는데,왁굳형 굳즈 샀던 것도 어제 왔었다언젠가 휠라 간석동점처럼 오프라인 행사 하게 된다면 입고가지 않을까싶은.애초에 잘 나가질 않아서 입기위해서 샀다기보단,첫 굳즈를 가진다는 것에 의미를 더 두었다.기쁘다.🗿 심사내가 멘티로 참여하던 스터디의 멘토가 되어버린 건에 대하여..멘토가 돼버린 이후 처음으로 하게 된 일은ㅡ새로 들어올 멘티들의 지원서를 보고 점수를 매기는 것.오늘까지가 지원을 받는 마지막 날이라,그동안 설렁설렁 미뤄뒀다가 한 번에 해치웠다.남을 평가하고 점수매긴다는 게 이렇게 미안하고 망설여지는 일 일줄이야.나름 객관적인 기준을 가지고 점수를 매기려해도, 이게 또 보통 일이 아니다.감성이 들어가고, 주관이 들어가고, 신경쓰이는 게 너무 많다.그리고..지원자들 중에 실력자가 너무 많다.어이ㅡ 어이ㅡ, 그러니까 내가 멘토고 저 사람들이 멘티인게 맞는 거냐구.더 공부해야겠다.간바루조이 !" }, { "title": "🌱 벌써 다섯 밤", "url": "/posts/DayStone-230105/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-05 20:15:00 +0900", "snippet": "🗿 벌써 다섯 밤벌써 올해의 다섯 번째 밤이다.너무 순식간이다.올해는 다르다.시간을 의미있게 보낼 것이다.그러기 위해서는..일단 커뮤니티를 줄여야 할 것 같다.슬롯머신에 중독된 것 마냥 끝 없는 새로고침 스크롤을 하는 것을 그만둬야 한다.새로운 자극을 위해서는, 새로운 걸 공부하자.일단 ToStudy 목록도 하나하나 정복해나가야 할 것이고,FL Studio도 사서 만져보고 싶다.Adobe 툴들도 마찬가지다.그전에 오늘은 코테 연습이다.두 문제 풀고 작업하자간바루조이 !" }, { "title": "🌱 막막하다", "url": "/posts/DayStone-230104/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-04 00:49:00 +0900", "snippet": "🗿 막막하다막막하다.가슴이 답답하다.다 재미가 없다.만들고 싶었던 게임의 유니티 프로젝트를 열어도, 어떤 게임을 해봐도 재미가 없다.갑자기 여유가 찾아와서 뭘 해야할지 모르는 것인가?그냥 뭘 어떻게 해야 할지 모르겠다.짜증만이 가득하다. 정말 힘들다.마지막 남은 마감 때문인가.진짜 모르겠다아무것도 새로 시작하지 않았는데벌써 번 아웃이 온 것 같다.작년이랑 똑같다.답답하다." }, { "title": "🌱 새해", "url": "/posts/DayStone-230101/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2023-01-01 18:47:00 +0900", "snippet": "🗿 새해새해가 밝았다.물론 글을 쓰는 지금은 해가 졌다.어젠 (12월 31일에) 동생이 우리 집을 자기 친구들과의 파티 장소로 쓰는 바람에,나와 어머니가 추운 밤에 밖으로 좇겨나야 했다. (이런)나와 어머닌 밤 늦게 근처 영화관에서 영화 한 편을 보고, (아바타를 봤다)근처 바닷가에서 차박하기로 했다.쪽잠을 자고 일어난 이른 새벽엔 동생을 대리고 나와 일출을 보기로 했다.나는 졸림과 귀찮음과 의무감이 공존하는 감정으로올해의 첫 일출을 보았다.여기 강릉엔 7시 40분 즈음에 해가 떴다.생각해보면 결국 똑같이 뜨는 해인데,그냥 1월 1일이라는 이유 하나 만으로 사람들이 추운 겨울날 새벽에 잔뜩 모이는 걸 보니아무래도 사람은 본능적으로 한정판에 환장하게 되는 건가..뭐 그런 생각을 했다.해가 머리를 드밀었을 때,나도 모르게 핸드폰 카메라를 꺼내 사진을 찍었는데,아무리 순간을 기록하기 위해서라지만그 순간을 순수하게 진정 경험하지 못하고 카메라 너머로 해를 보고 있는 게과연 무슨 의미가 있는 것인가 순간 생각이 들었다.사진으로 볼 거면 그냥 TV로 보면 되지..또 뭐 그런 생각을 했다.그렇게 새해가 왔다.🗿 작년의 회고록 : 시작작년 1월 1일에는 한창 팬 게임인 왁그리드 버그를 고치고 있었다.완성을 포기하고 공모전에 제출했던 게임이 생각보다 반응이 뜨거웠었는데,테스터가 나랑 친구 한 명 뿐이었던지라, 게임 진행이 안되는 치명적인 버그가 생겼었고,급하게 테스터 20분 정도를 불러 테스트를 진행하며, 끝 없는 버그를 고쳐나갔었다.몬스터 한 박스 비워나가며 개발했던 게임이었는데..테스터분들과 밤새가며 결국 수많은 버그를 잡아내는 것에는 성공했지만,난이도 조절 실패과 컨텐츠 부족으로 인해,허영뿐인 게임에 대한 기대를 만족시키고, 맨 처음 주었던 감동을 그대로 다시 전달하기에는 무리였다.한참 관심받은 후 실망 시킬 때의 그 기분이란,또 허영에 대해 흥분하고 있는 사람들을 보고있는 부담감이란.정말 내 인생 최악의 경험이 아닐 수가 없었다.나에겐 실패의 경험이었다.물론 처음으로 받아본 관심이기도 했다.내가 만든 걸 좋아해준다는 건 정말 짜릿한 경험이었다.또 다시 느껴보고 싶었다.내가 좋아하는 사람이 날 알아주면 좋겠다.그런 마음이 가득했고, 지금도 그렇다🗿 작년의 회고록 : 바빴다2022년은 내 짧은 인생에 있어서가장 바쁘고, 힘들고, 우울하고, 공허하고, 의미있던 한 해였다.뭔가 프로젝트를 이렇게 쉼 없이 달려온 것도 처음이고, (애초에 팀 프로젝트도 처음 해봤다)1학년는 비대면 수업으로만 학교 다니다가 (딱 하나 대면 수업이 있긴 했다),2학년이 되고 나서 처음 대면 수업을 시작했는데,1학기 2학기 전공 시간표가 죄다 아침에 있어서 슈발 다 들으니까 공강없이 주 5일 풀 오전/오후 수업이었다.학교가서 졸면서 오전 수업 듣고, 자취방와서 밥 잠깐 먹고, 다시 졸면서 오후 수업 듣고,다시 자취방 와서 밥 먹으면서 알바 외주랑 과제하고, 새벽부터는 프로젝트 작업하고..의자에서 2시간 쪽잠자고 무한 반복..정말 힘들어 죽을 것 같았다.내 시간이 없으니까 재미가 없다.프로젝트 작업도 그렇게 즐겁지는 않았다.팀원들이랑 이런저런 이야기 하는 게 더 재밌었지, 작업이 재밌었던 적은 많이 없었던 것 같다.공개 날 버그 터지면 정말 팀원 보기가 부끄럽고 한 동안 지옥이었다.그렇다고 열심히 했다는 걸 알아주는 사람들도 없으니.. 프로젝트가 공개될 때 마다 공허하고 아쉬움이 많다.나만 그런건지 몰라도 크리스마스, 연말 분위기가 하나도 실감나지 않았다.하나도 설레지 않았다.나이 먹으면서 부뎌진건지, 그냥 감정이 감각이 죽은건지..그냥 재미가 없다.무튼..올해는 내가 하고 싶은 것들을 하고 싶다.기대는 그렇다.🗿 작년의 회고록 : 왁타버스 VRChat 작업 연말정산정말 난 일정이 비거나 쉰 적이 한 번도 없는데..결과물이 생각보다 적다.모르겠다.🗿 작년의 회고록 : 처음, 목표작년에는 나의 처음이 정말 많았다.처음으로 플레이 가능할 정도의 게임 개발처음으로 사람들의 관심에게 받아보기처음으로 개인이 아닌, 팀 프로젝트 개발 경험처음으로 실친이 아닌 인터넷 지인들을 만나기처음으로 집 떠나 자취하기처음으로 아르바이트를 하고 월급 받아보기올해도 나의 처음이 많았으면 좋겠다.목표로 하는 처음은처음으로 멀티 플레이 게임 개발하기처음으로 게임으로 수익화 해보기처음으로 3D 애니메이션 만들어보기처음으로 완성된 음악 만들어보기이정도가 되시겠다.물론 목표는 많다. 키워드 처음을 붙일 수 없는 목표들이라 그렇지그림을 잘 그리고 싶다.인체 구도를 어느정도 그릴 수 있으면 좋겠다.그림체나 완성도는 뒷전이다.To Study 리스트를 정리하고 싶다.공부하려고 북마크해둔 건 많은데, 그동안 공부하지를 않아서 쌓여있는 게 많다.보급형 암기빵 느낌으로 열심히 공부하려고 한다.영상, 디자인 툴을 다루고 싶다.이건 어도비 결제가 좀 부담스러워서 못하고 있는데..정기적인 수입이 생긴다면 바로 실행에 옮길 것 같다.내 판타지 세계관을 완성시키고 싶다.세계관에 완성.. 이라는 건 없지만큰 서사구조를 완성시키고 싶다.어릴적부터의 꿈이라 이건 꼭 이뤄낼 것이다.영어를 잘하고 싶다.한국을 벗어나 캐나다로 가고 싶다.그러기 위해서는 영어를 잘해야 한다.이제 3학년이니 토익 준비도 해야한다.영어를 공부해야 한다.더 있었는데 생각나면 적어야겠다.230105맞다, 쉐이더, 쉐이더도 공부 해야한다.Amplify 툴 사두고 제대로 써보지를 못했다." }, { "title": "🌱 첫 눈", "url": "/posts/DayStone-221206/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-12-06 13:21:00 +0900", "snippet": "🗿 첫 눈밤새 빗물 소리가 들리는가 했는데,아침에 학교가려고 나와보니 눈이 오고 있었다.이쁘긴 했는데,추워서 금방 싫어졌다수업 끝나고 보니 또 금방 녹아서 다 없어지고 있었다뽀드득 소리 오랜만에 들어서 그거 하나는 좋았다+ 다른 수업 끝나고 하늘이 개었는데바닥에 쌓인 눈이 반짝거려서 이뻤다🗿 종강이제 종강하는 수업이 하나 둘 생긴다종강이 다가온다방학이 온다🗿 축구이번 월드컵에서 우리나라가 16강을 기록했다그렇구나🗿 길막아여러 명이서 나란히 서 걸어가면서 길 막는 거정말 참기 힘들다뒤에서 비켜주길 기다리는 사람 없는 거 모를 수가 없는데참을 수가 없다🗿 구내염또 구내염이 났다미치겠다밥 먹을 때마다 너무 아프다" }, { "title": "🌱 언제 끝나", "url": "/posts/DayStone-221205/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-12-05 07:24:00 +0900", "snippet": "🗿 언제 끝나‘진짜 딱 이번주까지만 작업하면 다 끝난다, 쉴 수 있다 이제’라고 몇 달째 생각하고 있는 것 같다.분명 마감이 있는 팀 프로젝트는 더 이상 새로 참여하고 있지 않은데,분명 매일매일 밤새면서 작업해나가고 있는데,일이 줄어들 생각을 안한다이거 버그 아니야??🗿 구글 계정 통합오늘 시작한 일은 아니지만,계속해서 구글 계정을 하나로 통합하고 있다.원래 옛날부터 쓰던 계정 하나,어느날 마음을 새로하기 위해 만들어 써온 계정 하나,모시깽이한 곳에 쓰던 계쩡 하나이렇게 세 개를 쓰고 있었는데,가면 갈 수록 뭐랄까정신이 없다고 해야하나마음이 불편하다고 해야하나냅다 하나로 합쳐서 쓰는 게 마음도 편하고 관리도 편하고 할 거 같아서합치고 있다물론.. 그 과정이 그리 쉽지만은 않지만그래도 언젠가는 해야할 작업이었다인생 숙제 하나 해치운다는 마음으로 틈틈이 정리하자🗿 그림이것도 오늘 시작한 일은 아니지만,그림을 다시 그리기 시작했다.너무 작업하기 힘들 때그냥 유튜브 보면서 쉬면 계속 작업 생각나서 미칠 것 같은데그림을 그리면 마냥 놀고있다는 느낌만 들지가 않아서마음이 편안해지는 것 같다이번에야말로 좀 꾸준히 그려서 성과도 나오면 좋을 거 같다" }, { "title": "🏝️ 2212 마지막", "url": "/posts/MonthStone-2212/", "categories": "🗿Stone, 🏝️MonthStone", "tags": "", "date": "2022-12-02 08:53:00 +0900", "snippet": "🗿 마지막올해의 마지막 달돌이다작년 이 맘때는 한창 팬게임 만든다고 몬스터 마시면서 밤새고 있던 기억이 난다정말 힘들지만 또 재미있고 목표가 뚜렷했던 날들이었다지금은..지금은 뭔가 여유 가질 시간이 없을 정도로 바쁘긴 한데아직 내가 뭘 하고 있는 지 전혀 모르겠다코테 공부한답시고 학교 스터디 가입하고 문제 풀고 하던건백준 스트릭 채우겠답시고 브론즈 4, 5 문제나 주구장창 풀다가 그 마저도 손 땟고팬 게임의 실패를 잊기 위해, 한 사람의 관심을 받기 위해 시작한 3D 맵 제작은올해 초에만 잠깐 반짝하긴 했지만, 내 끈기과 실력 모두 한계를 경험하면서 또 다시 실패를 경험하게 되었다절대적으로는 여전히 바쁘긴 하지만,한창 바쁠때에 비해 상대적인 여유가 생긴 최근 시작한 작은 프로젝트들은크고 작은 걸림돌에 넘어지면서 더 이상 발자국을 남기고 있지 못하고 있다그리고 당연하듯,아무것도 안해도 좋은 성적을 받을 수 있었던 편한 1학년 때와는 달리이제 2학년의 내 성적은 이제 바닥을 기어다니게 될 것만 같다내가 이룬 게 있을까?군대 간 친구들을 뒤로하고 커뮤니티에서 친목하면서 인터넷 친구 사귀기?밤새라 알바하면서 의미도 없는 용돈 벌이하기?하루하루 후회와 다짐을 반복하면서 멘탈 단련하기?난 도대체 언제까지 이러고만 있을까?2023년이라고 다를까?2034년이라고 다를까?나는 내 생각보다도 훨씬 더 허영과 욕심으로 가득찬 녀석인가?" }, { "title": "⛏️ SSMS 설치 시 계속해서 리부트를 요구하는 문제", "url": "/posts/SSMS-Endless-Reboot-Issue/", "categories": "⛏️Programming, 🕯️Programming-Memo", "tags": "", "date": "2022-11-21 16:35:00 +0900", "snippet": "💎 SSMS 설치 시 계속해서 리부트를 요구하는 문제‘microsoft odbc driver 17 for sql server a previous installation required a reboot’ 가아무리 컴퓨터를 껐다켜도 해결되지 않는다면,레지스트리 편집기에서,컴퓨터\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager 에 위치한PendingFileRenameOperations 값을 비워주고 다시 설치를 시도한다.참고 링크" }, { "title": "⛏️ 내가 만드는 백과사전/정보모음", "url": "/posts/My-Dictionary/", "categories": "⛏️Memo", "tags": "", "date": "2022-11-20 11:56:00 +0900", "snippet": " 브루트 포스 탐색 무지성 노가다 대입, 100% 정확성 그리디 fetch (=bring) CPU가 명령을 수행하기 위해 그 명령어를 레지스터에서 꺼내 오는 것 위 말고도 그냥 일반적으로 가져온다는 뜻으로 많이 쓰이기도 하는 듯 memory (메모리) 레지스터(CPU) - 캐시메모리 - 주기억장치 - (캐시메모리) - 보조기억장치 일반적으로 용량과 속도 반비례, 속도와 용량 대비 가격 비례 레지스터 데이터 읽기 = 머릿속에 있는 기억 떠올리기 주기억장치 데이터 읽기 = 책장에 꽂혀 있는 책에서 특정한 책을 찾아 내용을 읽는 행동 보조기억장치 데이터 읽기 = 지구를 한 바퀴 돌아서 특정한 내용 찾아오기 메소드 스텁 register (레지스터) 프로세서에 위치한 고속 메모리 극히 소량의 데이터나 처리 중인 중간 결과와도 같은 프로세서가 바로 사용할 수 있는 데이터를 담고 있는 영역 컴퓨터 구조에 따라 크기와 종류가 다양 MainBoard, MotherBoard, SystemBoard 다 똑같은 용어, 우리나라는 보통 메인보드라 칭하고, 해외에서는 마더보드라 칭하는 경우가 많음 -ware ~로 만들어진 Hardware (H/W) 딱딱한 것으로 만들어진 (물리, 외적으로) 물리적으로 만들어진 컴퓨터 부품, 혹은 부품으로 조립된 전자 기기 Firmware 내성을 가진것으로 만들어진? (내적으로) H/W에 각인된 고정된 Software, 전자 부품이 기본적으로 가지고 있는 Software ROM에 기록됨 (Read-only memory, 비휘발성) Software 부드러운 것으로 만들어진 (하드웨어와 반대의 개념으로서) 만질 수 없는 가상의 프로그램 Malware 악으로 만들어진 컴퓨터 바이러스, 해킹 관련하여 Wetware? 젖은 것으로 만들어진 (= 뇌?) Swizzling (= mix up) 휘몰아치는, 컴퓨터 용어로는 벡터의 구성 요로를 임의로 재정렬하고 결합하여 벡터를 구성하는 기능 (CG에서) Shader에서는 그 외에도 Pointer Swizzling 이라는 것도 있음 포인터로 링크된 자료 구조 단위를, ID나 이름 등으로 대체함으로써 프로그램을 다시 시작하더라도 성공적으로 파일 데이터를 로드, 역직렬화 시키는 방법 (마인크래프트의 휘몰아치는 칼날은 Sweeping) #pragma 사전적 의미로 만능 VS C++에서 컴파일러에게 그 뒤에 오는 내용을 따라 어떤 일을 하라는 전처리 명령어로 사용 컴파일러에게 직접 명령을 내리는 지시자 processor (프로세서) 처리기, 일반적으로 중앙처리장치 (CPU) = 명령어를 해석하는 컴퓨터의 한 부분 그래픽처리장치 (GPU) 도 컴퓨터의 일부이지만 단지 ‘프로세서’ 라는 용어만 사용하였을 때 그래픽 처리 장치를 뜻하는 경우는 아직 많지 않음 마이크로 프로세서 &amp;gt; CPU instruction 명령, (사전 = 지침) Interrupt (인터럽트) https://ko.wikipedia.org/wiki/%EC%9D%B8%ED%84%B0%EB%9F%BD%ED%8A%B8_%ED%95%B8%EB%93%A4%EB%9F%AC https://ko.wikipedia.org/wiki/%EB%AA%85%EB%A0%B9_%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0 CPU에서 프로그램을 실행하고 있을 때 입출력 하드웨어 등의 장치에 예외상황이 발생하여 처리가 필요할 경우에 CPU에게 알려 처리할 수 있도록 하는 것 != Polling (폴링) 폴링은 하나의 장치 혹은 프로그램이 충돌 회피 또는 동기화 처리 등을 목적으로 다른 장치 혹은 프로그램의 상태를 주기적으로 검사하여 일정한 조건을 만족할 때 소우신 등의 자료처리를 하는 방식 인터럽트는 대상을 주기적으로 감시하여 상황이 발생하면 해당처리 루틴을 실행해 처리하는 폴링과는 달리, 상대가 CPU에게 일을 처리해 달라고 요청하는 수단 CPU 명령어 사이클 (instruction cycle, 인스트럭션 사이클) 마이크로프로세서가 메모리로부터 프로그램 된 한 개의 기계어 명령어를 가져와 어떠한 동작을 요구하는지를 결정하고 명령어가 요구하는 동작을 수행하는 연속적인 동작 과정 = 즉, 명령어를 꺼내와 실행하기 위한 연속적인 동작 과정 사용되는 회로 PC : 다음에 실행할 명령어에 대한 메모리 주소를 추적 MAR : 다음에 실행할 명령어의 메모리에 있는 주소를 보관 MBR : 메모리로부터 페치(fetch)되어 cpu가 처리할 준비가 된 데이터나 메모리에 저장되어 대기 중인 데이터를 보관하는 양방향 레지스터 IR : 메모리로부터 fetch 되는 (현재 실행할) 명령어를 일시적으로 보관하는 영역 CU : 명령어 인출, 해독, 실행을 위한 제어신호를 타이밍에 맞춰 발생시킨다. ALU : 산술 및 논리 연산을 수행 명령어 기본 사이클 CPU에서 명령어를 읽어오는 단계 2.1. 명령어 인출 사이클 (instruction fectch 사이클) CPU에서 명령어를 실행하는 단계 참고 오버플로우 : 변수가 표현할 수 있는 최대 범위 너머로 언더플로우 : 변수가 표현할 수 있는 최소 범위 너머로 JSON : 데이터 저장 방식, Key &amp;lt;-&amp;gt; Value DB, DataBase 방정리를 왜 할까 : 잘 찾을려고! (잘 보관하려고가 아니라) 데이터도 메모장으로 저장하는 것보다 찾을 때 천배 낫다 제목 (문자열)로 찾는 것보다 분류로 찾는 게 빠르다 No Index : 전부 다 뒤진다 SQL : 정형화, 대기업, 실수를 절대로 하면 안될 때 NoSQL : 비정형화, 앞으로 뭔가 많이 바뀔 때 BC : Before Chirst, 기원 전 AD : Anno Domini nostri lesu Christi (라틴어), Anno Domini (라틴어 줄인), In The Year Of Our Load, Jesus Christ (영어), 기원 후 A.M. : Ante Meridiem, 오전 P.M. : Post Meridiem, 오후 인하우스 툴 튜플 에라토스테네스의 체 Leading 0 요세푸스 문제 Argument &amp;lt;&amp;gt; Parameter URI WebRequest gcc 공변성과 반공변성 in 제네릭 한정자 in 매개변수 한정자 커널 시암의 방법 System.Random Unity.Random 차이 format 다중 사용자 시스템, 단일 사용자 시스템 모뎀 data transfer 전송 매체 Transmission Medium device Ethernet Traffic Internet Communication ? Cell Phone OSI 멀티캐스트 FFT 고속 푸리에 변환 lower_bound, upper_bound cin.fail cin.eof 여러 줄 입력 끝 판단 scanf printf 도 malloc 을 사용한다 » 힙 할당이 생긴다 C 메모리 구조 C for문 안에서의 변수 선언 불가능 ? Cpp 컴파일러가 읽어서 가능? 메모리 누수, 댕글링 포인터 이 문제를 알아서 해결해주는 것이 GC 문자열 리터럴 풀 = 전역변수가 저장되는 곳 문자열 &amp;gt; 프로그램 내에서 어디든지 사용 가능 = 전역 변수 메모리 접근 &amp;gt; OS 왜 시작 위치만 저장하느냐&amp;gt; 문자열 자체가 끝에 \\0 을 가지고 있기 때문 버퍼 입력버퍼 버퍼링 주사 방식 scanf 의 scan 주사 HW 관리 커널 조게껍데기 셀 커널 셀 ㅡ 운영체제 사용자 프로그램 유저 입력 입력 명령 해석 셀 셀에서 실행 셀 명령러 해석기 Bar Cmd Exe 확장자 차이 단말기 = 터미널 맨 마지막, SW에 있어서 최종 소비자 SOP 서드파티 너무 이른 최적화 전처리기 지시어 Reference Counting STL Vector vs Array 순람표 룩업 테이블 C# default Unity curve.Evaluate 로렘 입숨 lorem ipsum; 머신 사이클 바인딩 타임 사실관계적시 b2b 엠비? 엠바고 뽀모도로 기법 aa ASCII ART 공감주의 문제 해결책에 집중할 때 비로서 엉뚱한 우울감에 빠지지 않은 동물이나 사람의 행동을 생물학적-진화론적으로 분석해보는 습관이 있다. 물론 그런 분야에 관해 전문적인 지식을 가지고 있거나, 제대로 공부해본 것은 아니지만, 나름의 논리대로 상식선에서 분석해보는 것이다. 예를 들어, 우리는 왜 어두운 곳을 두려워 할까? 우리는 왜 높은 곳을 두려워 할까? 같은 질문을 나름대로 분석해보자면 다음과 같다. 지금처럼 밤만 되면 환하게 세상을 비추는 가로등이나 언제 어디서든 빛을 낼 수 있는 손전등은 저 먼 옛날에는 존재하지 않았고, 때문에 어두운 밤이나, 깊은 동굴은 야생 동물에게 공격당할 위험성이 있었을 것이다. 때문에 어두움을 두려워하지 않은 인류는 살아남기 힘들었고, 반대로 어두움을 두려워한 인류는 상대적으로 살아남을 가능성이 높았다. 높은 곳을 두려워하는 이유도 앞의 이유와 비슷하다. 이런 식으로 내가 가지고 있는 상식 선에서 동물이나 사람의 행동, 본능을 분석하는 것이다. 하지만 어릴 때부터 풀리지 않는 의문이 하나 있다. 과연 사랑이란 무엇일까? 이 질문은 도저히 내 상식 선에서 대답할 수 없었다. 일반적으로, 사랑하게 되는 주된 이유는 외모다. 그런데 외모가 생존에게 주는 이점이 있다고 볼 수 있을까? -&amp;gt; 사회적 동물 걍 땅 캐는거? 뒷산에서 보석캐기? 디펜스랑 방치랑 합치면..? 님블궤스트? 소울나이트 피하기? 지하철 팬텀오브스칼렛? 어떻게 4.8점대지 광부 돌ㄹ캐고 광물로 장비만들어서 싸우는? 광부는 방치 장비는 뭔가 광부 모험가 마녀? 탱 딜 힐 마녀 포션이랑 연구 모험가 그냥 방치느낌? 잡템 찾아오는 광부 모험가 장비 ? 대장장이? 브라우저 확장으로 이모티콘 점수 Meridiem (라틴어) : midday, 정오 곱셈이 나눗셈보다 빠르다 곱셈은 한 번에 처리 나눗셈은 뺄셈을 계속해서 처리 참고 서버 컴퓨터는 대부분 리눅스 리눅스 -&amp;gt; 오픈소스 -&amp;gt; 여러 대 사용해도 비용 X -&amp;gt; 서버 컴퓨터는 대부분 리눅스 서버도 그냥 컴퓨터다 서버 컴퓨터마다 모니터, 키보드, 마우스 하나하나 껴서 업데이트 서버 터지면(= 꺼지면) 다시 키고 프로그램 열고 함 규모가 커질수록 구조를 다 알 수 없음 + 컴퓨터를 다 쓸 수 없음 -&amp;gt; 클라우드 서비스 서버 API 은행 창구 == API 클라이언트 개발자하고 미리 한 약속, 다 외울 수 없음 -&amp;gt; API 명세서 http://우리은행용산지점/입출금창구?신분증=주민등록번호 서버위치/API주소?가져가기로한데이터 API 하나만 따주세요 -&amp;gt; 새로운 기능/창구를 하나 만들어주세요 API 개발은 끝났는데 클라이언트는 아직 -&amp;gt; 창구는 만들었는데 요청하는 쪽이 아직 Open API : 누구나 요청할 수 있게 열린 API, i.e. 공공데이터 포털 블렌더, 모델링 3D 커서 원위치 : Shift + C 솔리드/와이어 토글 : Shift + Z, 그냥 Z 꾹 스냅 토클 : Shift + Tab Join : 재료템 먼저 선택, 무기 나중에 선택 재계산 : Alt + N Alt 마우스방향말고, ~ 누르면 쉬움 와이어프레임 만들고 솔리디 파이 하면 벽 틀? 메쉬 부드럽게 Favela/Slum 블렌더 리토폴로지 휴먼 덴시티 창틀 50 전체 창 600 1800 개별 창 50 50 근데 이쁘게 하고 싶어서 20 안열꺼면 깔끔해보이니까 복도 1500 1800 문 900 1800 / 2100 원래 5천 해도 3천 쓰고 막그러는데 천정고 3미타정도로 일본 낮은 뭐시깽이하려면 2700 2400 동기 비동기 병원들어갔어 접수처에서 순서기다리세요 부를게요~ 하는거랑 들어가자마자 아무것도 안하고 기다리는 것 차이 페이지에서 조금씩조금씩 나오는 거 Setter 쓰지 마라, 의미있는 메소드를 만들어라 이건 할 줄 알아야 한다 https://en.wikipedia.org/wiki/XOR_swap_algorithm 버블 정렬 퀵 정렬 어떻게 도는구나 정도 나머지 정렬 그냥 있었구나 오케이 radix sort 해쉬 맵 링크드 리스트 트리=바이너리 서치=순서대로 출력 이건 할 줄 알아야 .NET 프레임워크 Old vs .NET Core New 코어는 윈도우 리눅수 맥 모두 실행가능 거의 똑같음 Int 크기 옛날에는 2바이트 16비트 체ㅔㅈ여서 지그은 4바이트 32비트 64비트 더 많이 쓰는데? 혼용해서 언젠가 8바이트 ? 주소 크기 VS (SW) 가 32Bit 라 주소 크기가 4Byte = 32bit OS는 64bit 인데 Placement New 기법 정적 메모리 풀을 만들어 놓고 할당 받아 쓰는 방식 대규모 탄막이나 파티클이 등장할 경우 프레임 드랍을 막기 위해 C# List 크기 기본값을 설정해주지 않으면 다 채울 때 까지 재할당(+복사) 하지 않음 아니라면 2배씩 StringBuilder Queue Stack 도 마찬가지 기본 4개의 용량을 가지고 있음 초기 사이즈가 예측 불가능하거나 Add Remove가 빈번하면 Linked List 추천 List 요소 지우면 뒤에 있는 요소 한칸 땡겨서 모두 다시 복사 C# 접근 한정자/Access Modifier public protected private internal : 동일한 어셈블리 내에서만 접근 가능 var 중복 선언 가능   let 중복 선언 불가능 값 변경 가능 const 중복 선언 불가능 값 변경 불가능 var let const JavaScript에 대하여, 중복 선언이 가능하다는 var의 특징 때문에, let이 나온 이후로는 변수 선언 시 let과 const를 주로 사용 호이스팅, 스코프 관련해서도 다른 점이 있다고는데, 패스 var : Variable let : Let const : Constant 수학 기호 링크1 링크2 링크3 링크4 링크5 VRChat World에서 VideoPlayer로 데이터 불러오기 링크1 링크2 링크3 링크4 링크5 무지성 복사 VA-11 HALL-A 셀레스트의 보이지 않는 구현 리스크 오브 레인 2 - 소환 루프 Github Remote Disconnected 특정 구역에서의 랜덤 스폰 알고리즘 게임 시스템 디자인 시작하기 좋은 git commit 메시지를 위한 영어 사전 메모리구조에서의 자료구조 지역변수 전역변수 접근/속도차이 Bool 변수 이름 제대로 짓기 위한 최소한의 영어 문법 C# 메모리 관리 C# 프로퍼티는 Ref 로 못전달한다, 프로퍼티 구조 C 가변 길이 배열 C 가변 길이 배열 C 가변 길이 배열 - 백준(컴파일러) C 가별 길이 배열 - 컴파일러 C 헤더 파일이 없어도 실행이 되는 이유 C 동적할당 C 포인터 크기 포인터, 사용하는 이유 유니티 Vector3 Equals 유니티 Vector3는 스택에 생성된다, 값 형식이다, Struct 유니티 Vector3 Struct C# new Struct 유니티 메모리 관리의 이해 float 연산이 정확하지 않다면 컴퓨터 계산기는 어떻게 소수를 계산하는가 bool은 왜 1비트가 아니라 1바이트인가 bool은 왜 1비트가 아니라 1바이트인가 1바이트는 왜 8 비트인가 누적합 GetInstanceID 와 GetHashCode 유니티 프리팹 썸네일 안보임 유니티 프리팹 썸네일 안보임 유니티 강좌 여러가지 쿠키런 사운드, 미들웨어, FMOD 유니티, 프로젝트가 커질 때 코드 설계 컴공 자료 Untiy Inspector 에서 List Element 이름 바꾸기 Untiy Inspector 에서 List Element 이름 바꾸기 Untiy Inspector 에서 List Element 이름 바꾸기 Pope Kim - 전처리기 Pope Kim - 문자열 해쉬 C# Foreach C# vs CPP 위키독스 - 온라인 책 공유 플랫폼 OpenGraph URI-URL 마인크래프트 지형 생성 알고리즘 코딩 테스트 및 알고리즘 문제해결 공부 방법 알고리즘 공부 방법/순서 [알고리즘] 아호 코라식(Aho-Corasick) 알고리즘 [알고리즘] KMP(Knuth-Morris-Pratt) 알고리즘 [자료구조] Trie(트라이) 동적 계획법 메모이제이션 DP의 기본에 대해서… 변수명 짓기 C++ 익명함수 사용법 함수호출규약 vscode (visual studio code) tab to space 또는 space to tab 변환 C#을 다루는 기술 C# - int []와 object []의 차이로 이해하는 제네릭의 필요성 프로그래밍/C Sharp[C#] 비트연산 처리 모음 [C#]List 속성별로 정렬 Convertio 게임제작에 사용되는 영어단어 c# parse convert 차이 [C#] Process 클래스 사용 예제 Run git commands from a C# function Unity Tricks — How to hide a UI object that is behind a transparent UI? 던그리드 0 던그리드 1 던그리드 2 던그리드 3 던그리드 4 던그리드 5 넥슨 커리어 UNITY에서 코딩 시 VISUAL STUDIO 툴 최적화를 위한 팁 HITS 메이플 마켓 원리 C# OCR 패킷 메이플 패치파일 C# Linq Take, Skip Coding 시 변수 선언 위치는 어떻게 잡아주고 계시나요? 정적 멤버 직접 사용 (클래스명 생략) Change line renderer alpha unity 게임잡 유니티 최적화 20200219[C#] GetType메서드와 typeof연산자 우왁굳 트위치 이모티콘 포켓몬스터 블랙/화이트 BGM 레파토리 포켓몬스터 블랙/화이트 빌리지 브리지 포켓몬스터 블랙/화이트 빌리지 브리지 OPTIMIZATION TIPS FOR UNITY UI Coroutine과 Time.timeScale 관계 당신이 보는 게임 화면은 진짜가 아니다. 엔터더건전 3D 트윗 2D도트게임의 비밀 Conway’s Game of Life 메이플스토리 블로그 jekyll Liquid The Unity Shaders Bible JekyllRB Doc Jekyll 좌측 네비바 카테고리 만들기 Bensound Kitbash3D Mixamo Pixabay 3DWareHouse Waifu2x Easings - 커브 Dimensions - 휴먼덴시티 Hashcode ColorBlind ColorFilter GitIgnore Adobe Color 123APPS 텀블벅 특수문자 모음 Discohook 컬러 팔레뜨 Zapsplat Desmos 3DAPI PolyHaven 그래픽 블로그 AmbientCG NormalMap Online Textures Sketchfab 3DSky CGTrader Kenney SoundImage OpenGameArt RealFaviconGenerator CSSGradient Dova-s SoundEffect-Lab 99Sounds SoundBible FreeSound FreeSFX SoundJay 사운드 리소스 모음 Soniss Sonniss PlayOnLoop SimpleIcons IcoonMono - 아이콘 자극에 무뎌지는 감각 UI ” 수학 시각화 목적은 수단이다 기술 업계의 독성 말투 IGN 인터뷰, 게임을 만들 때 가장 어려운 것은… 모든 것이다 Craftdaily, UI가 이쁘다! 거리 풍경 롤 아트북 회전하는 아스키코드 도넛 VRChat 공연하시는 아티스트 모션테이블 바이트 비트 Beat 머테리얼 비교 머테리얼 인스턴싱 디더링 유니티 스크린 이펙트 쉐이더 베이커리 베이크 시 흰색 검은색 빨간색 초록색 파란색 얼룩 Auto-Atlasing . Texels per unit 40 ~ 80 글로벌 일루미네이션 . samples 보통 UV 오버랩 문제 &amp;gt; Texels per unit 값 올려주거나, UV 맵 자체 간격 스텔실 쉐이더 Mesh Baker Force Power-Of-Two Atlas 체크 &amp;gt; 검은 공간 많은 텍스쳐를 크기 줄여줌 HLSL (High Level Shading Language) 가장 유명하고 보편적으로 넓게 쓰임 GLSL (OpenGL Shading Language) OpenGL에서 사용하는 언어 CG (C for Graphics) 엔비디아가 마이크로소프트와 협력하여 만든 언어 프로그래밍 언어처럼 하나만 잘 배워두면 나머지는 쉽게 터득할 수 있다 유니티는 CG 언어를 사용, URP 부터는 HLSL 사용 (언리얼도 HLSL) 유니티는 추가적으로 언어를 제작 지원 Shader Lab 호환성은 가장 높지만, 그만큼 할 수 있는 게 제한적 Surface Shader 가장 쉽고 멀티 플랫폼에서 잘 대응되는 셰이더, 프로그래머가 아니더라도 배우기 쉬운 개념, 아티스트 레벨에서 배우는 -&amp;gt; Shader Lab 이라는 스크립트 안에 CG 코드가 들어가 있는 형식, 이걸 배워두면 Vertax &amp;amp; Fragment Shader 도 이해할 수 있고, 랜더 몽키로도 갈 수 있고, 노드로도 갈 수 있다 Vertax &amp;amp; Fragment Shader, Surface Shader의 상위 버전, CG를 더 디테일하게 다룸, Surface Shader가 오토 모드라면. Vertax &amp;amp; Fragment Shader는 수동이라는 느낌 CatLikeCoding Graph 그리기, Position에 따른 Color 수학적 Coordinate, Color : Mesh Colluder 끼리 충돌 안함, Convex 쓰면 댐 Surface Shader (눈) Scene에서 빛 모두 없애기 sssShader 오라 proko 영어에서 부정관사(a)를 쓸지 정관사(the)를 쓸지 아직도 헷갈린다는 컴공친구에게 부정관사는 클래스를 말할 때 쓰고 정관사는 인스턴스를 말할 때 쓰면 된다고 했더니 크게 이해했다 두 문자열을 결합하는 함수를 만들었는데 저 뒤에 췍이 ‘\\0’ 이겠죠? 왜 저렇게 나오는거람…? 고동 눈 십수년전.. 게임사가 배포한 정식 게임 클라이언트 없이 MMO서버에 붙는 봇(OOG:OutOfGame bot)들 잡을 때 썼던 방식 블렌더 에드온 다~ 부숴라 다~ 부숴 설단현상 0 Padding string.PadLeft string.PadRight(4, ‘0’) int.ToString(“D4”) Materialize Shadertoy Game Jam Theme Generator Rito15 Level Design 가짜 투명도, 디더링 쉐이더와 머테리얼 알베도, 이미션, 디퓨즈 유니티 메모리 관리 MAUI 애니메이션의 타이밍 플레이팹 마스터 https://utteranc.es/ https://app.travis-ci.com/account/repositories https://velog.io/@woo0_hooo/%EC%BB%B4%EA%B3%B5-%EC%B7%A8%EC%A4%80%EC%83%9D%EC%97%90%EA%B2%8C-%EC%9C%A0%EC%9A%A9%ED%95%9C-%EB%A7%81%ED%81%AC%EB%93%A4-%EC%A0%95%EB%A6%AC 유니티최적화기법 브라우저 확장 https://learn.microsoft.com/ko-kr/training/modules/interact-with-data-blazor-web-apps/4-access-data-from-blazor-components https://learn.microsoft.com/ko-kr/training/modules/persist-data-ef-core/3-migrations https://yaraba.tistory.com/502 https://learn.microsoft.com/ko-kr/ef/core/cli/powershell https://stackoverflow.com/questions/64294006/ef-core-the-entity-type-user-requires-a-primary-key-to-be-defined https://blazorhelpwebsite.com/ViewBlogPost/34 https://learn.microsoft.com/ko-kr/sql/relational-databases/databases/delete-a-database?view=sql-server-ver16 https://www.sqlservertutorial.net/ 자연어 버프 https://stackoverflow.com/questions/53059487/unity3d-parent-has-a-type-of-layout-group-error https://screenmusings.org/ https://help.twitch.tv/s/article/adding-a-game-and-box-art-to-the-directory?language=ko https://mentum.tistory.com/227 https://nielsdewitte.be/index.php?page=Pages/VFExtra.php https://docs.google.com/spreadsheets/d/17f0dQawb-s_Fd7DHgmVvJoEGDMH_yoSd8EYigrb0zmM/edit#gid=296134756 https://docs.google.com/document/d/1fAlf2MwEFTwePwzbP3try1H0aYa9kpVBHPBkyIq-caY/edit https://m.blog.naver.com/sorang226/222772936261 [김도윤] [오전 5:12] 안락사 [김도윤] [오전 5:14] 캐스퍼[김도윤] [오전 4:39] 천국은 이데아 [김도윤] [오전 4:54] 호문쿨ㄹ스 [김도윤] [오전 4:58] 쿠데타[김도윤] [오전 4:26] 나는 내가 좋아하는 것들 자체를 좋아하는 것이 아니다 내 머리 속 가장 이상적인 것들을 좋아하는 것이지[김도윤] [오전 7:57] Last night on earth [김도윤] [오전 7:57] 눈감으며 혹은 장님 지구멸망과정 [김도윤] [오전 7:58] 잠깼더니 어? 어째서 눈물이 [김도윤] [오전 7:58] 꿈 다 잊음 멜랑꼴리 Eyecatchers 미쿠미쿠 - https://www.inven.co.kr/webzine/news/?news=110890 라이트 모티브 - 극에서 어떤 인물이나 감정 등 특정 주제에 대해 전용 테마곡을 만들고 극의 흐름에 따라 바리에이션을 시키는 것 동요하고 있구나 폴나레프 아니야! 난 가요 하고있어! il2cpp Wuppo 꺼꿀이 관찰자 없는 우주의 의미, 존재 하는가? 퀘스트 유니온 - 마을바다 있는 잡 퀘 클리어 수에 따라 스탯 증가? auto static register 비행기 롤코 비행기 전파 유심? 감정에 대한 공감 감정과 공감의 우선순위 - 이기적 비행기 소리 안들림 보호 필름? 비행기 배터리? 폭발? 거사후 반질 소름? 관세, 면세 턴제 카드 스타? 디펜스? 그냥 싱글 RPG? 멀티 여부를 페이? 알배김? 디스크? participate plogging 염소 시뮬? 팬치 시뮬? !w6760901 플레이 스타일을 바꾸는? 스킬을 루나코인 같은 재화로? 강하다! 튼튼하다! 탱크행거! 세면대 거봐라 delay 연기 = 기간 없이 무지성 연기 인지 혁명 돌연변이 지능 폭발 존재하지 않는 것을 믿고 상상 주사 방식 키보드 스캔 ㅋ코드 부전나비 예전엔 코드 중간에 변수 선언을 하지 않았음 ex C, 프로그램에 메모리 할당을 해줘야하는데 부족할 수 있어서?? 지금 되는 건 CPP 컴파일러로 일기 대문에? 스테이지 바뀔 때 일러스트 2~3 장 -&amp;gt; 룬스톤 모터호텔 함께라면 골든타임 모래시계 피그마 부외자 구교사 버미육 모브 우선순위큐 벡터 vector는 ‘나르다’라는 뜻을 갖는 라틴어 vehere에서 온 것으로 ‘나르는 것’을 의미한다. 탄막패턴 https://github.com/NK-Studio/UnityShotPatterns https://twitter.com/FreyaHolmer/status/1611721163192811527?s=20&amp;amp;t=EBmnPU-IlwzD5ylVXmrPqQ https://twitter.com/cgcookie/status/1607702326315454464?s=20&amp;amp;t=EBmnPU-IlwzD5ylVXmrPqQ https://twitter.com/FreyaHolmer/status/799602767081848832?s=20&amp;amp;t=EBmnPU-IlwzD5ylVXmrPqQ https://twitter.com/icegeo/status/1157840278163640321?ref_src=twsrc%5Etfw” https://twitter.com/bencbartlett/status/1173619891766620162?ref_src=twsrc%5Etfw https://twitter.com/dripping_bik/status/1173613357024382977?ref_src=twsrc%5Etfw https://twitter.com/METALBUTTER/status/1175020978960658432?ref_src=twsrc%5Etfw https://ko.m.wikipedia.org/wiki/%ED%94%8C%EB%A0%88%EC%9D%B4_%EB%B0%94%EC%9D%B4_%EB%A9%94%EC%9D%BC_%EA%B2%8C%EC%9E%84 퀘스트의 핵심은 플레이어들이 금방 깰 수 있도록 길이가 적당하면서 보상도 받을 수 있는 임무를 제공하는 것입니다. ‘딱 하나만 더 해볼까’라는 느낌을 주고 싶었지요. - wow {위대한 게임의 탄생} https://twitter.com/JasperRLZ/status/1182510103943094272?ref_src=twsrc%5Etfw https://twitter.com/Icafe14/status/1198543546002726913?ref_src=twsrc%5Etfw https://twitter.com/YsbrydGames/status/1221858116465315840?ref_src=twsrc%5Etfw 조령 산불됴심 표석 Ten years ago, I said “One day” - Yesterday, I said “Day One” https://twitter.com/matorialize/status/1248648303408852992?ref_src=twsrc%5Etfw 웨이터 법칙 https://twitter.com/lepreagles/status/1263982448532062208?ref_src=twsrc%5Etfw https://boingboing.net/2020/05/22/scientists-saying-fuck-an.html https://youtu.be/bxNvOcyz4MI An anomalous cancellation is a kind of arithmetic procedural error that gives a numerically correct answer: 라이팅 릭 (Leck) 현상 - 모델링 https://twitter.com/InertialObservr/status/1286500403534639105?ref_src=twsrc%5Etfw 망토가 프랑스어(manteau) 고무(gomme)피망(piment) https://www.youtube.com/watch?v=H0d6tSqyN1Y https://rauno.me/craft/fractional-slider 만년필 시필코너엔 ‘永’(영)자가 예시로 자주 나온다. 획을 긋는 8가지 방법이 이 안에 두루 담겨있기 때문이다. 로마자 폰트 개발자들은 ‘The quick brown fox jumps over the lazy dog.’으로 작업을 점검한다. 알파벳 26자가 다 들어있다. 한글 폰트 작업엔 ‘다람쥐 헌 쳇바퀴에 타고파’가 사용된다. c++ 개발자에게 있어 포인터 delete 후 어떤 코드가 없더라도 = nullptr 대입하는게 국룰 이듯이…. https://twitter.com/sight_archive/status/1530087872878895104?ref_src=twsrc%5Etfw 엄청 좋아하는 친구랑 같이 가게 구경하던 중, 스푼을 살까 고민돼서 「검색해보니 아마존에서도 비슷한 가격이고 다음에 살까..」 라고 말했더니「인터넷에서 산다면 보통의 스푼이지만 지금 사면 나랑 산 스푼이 되는거야」라고 해서 충격이었고, 결국 사버려서 사용할때마다 그 아이를 떠올린다… 아들이 어릴적 소중히하던 인형을 여행지에서 잃어버려서 「그러니까 들고다니지 말랬지?」라고 화냈더니 「슬프니까 화내지말아줘」라고 말해 깜짝놀랐다.요전, 내가 겉옷을 잃어버렸을 때 「괜찮아? 슬프지 않아?」라고 말해줬던 아들.화내는건 자신을 위해서지, 상대를 위해서가 아님을 깨달았다. Best Practice 염세주의 파일이름제한 encounter cellular automata Flocking algorithm in 1D Hilbert ← Linear (raster) 암달의 법칙 Amortized 복잡도 https://medium.com/@satorusasozaki/amortized-time-in-the-time-complexity-of-an-algorithm-6dd9a5d38045#:~:text=Amortized%20time%20is%20the%20way,array%20and%20can%20be%20extended Random Access https://twitter.com/beetie135/status/1614203893004763136?ref_src=twsrc%5Etfw https://twitter.com/CK20_HWI/status/1594017839924776960?s=20&amp;amp;t=27ijxpKZeG9rbUT-zRW0hA http://yuchi.duckdns.org/xe/home 데이터베이스 관리시스템(DBMS : Data Base Management System) MySQL 핵심개발자들이 MySQL에 대한 오라클의 라이센스 정책이 자신들과 맞지 않는다는 이유로 오라클사를 탈퇴해서 만든것이 MariaDB MariaDB는 MySQL의 소스코드를 그대로 사용하여 개발했기 때문에 모든 기능이 동일 차이점은 라이센스 정책인데 MySQL은 소유권이 오라클에 있어서 기업에서 상업적으로 사용하는데 비용이 발생, MariaDB는 오라클사와 무관하기 때문에 무료 (엔터프라이즈 버전은 유료지만 무료의 범위가 넓음) httpd의 d : daemon : 악령 또는 그리스 신화에서 초자연적인 존재 : User가 직접 제어하지 않고, 백그라운드에서 돌며 작업을 하는 프로그램 = 상주 프로그램 (resident program) " }, { "title": "🌱 화이트 모드", "url": "/posts/DayStone-221120/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-11-20 11:41:00 +0900", "snippet": "🗿 화이트 모드몇 년 동안 다크 모드를 써왔는데,요즘들어 화이트 모드가 끌린다.그래서 배경화면, VS 2022, VS Code, 유니티, 디스코드, 브라우저 등등기존에 쓰고 있던 다크 모드 테마들을 죄다 화이트 모드로 바꿨다.맨날 검은 화면만 보던 눈이 좀 혼란스러워 하는 것 같은데, 익숙해지면 또 괜찮을 것 같다.🗿 Booth맞다그리고 어제 부스에 간단한 유니티 프리팹 하나를 올렸었다페이지 방금 확인해보니 하트가 4개나 찍혀있다 !자추 해서 5개로 만들어줬다가끔가다 그동안 만들어왔던 기능 공유하면 좋을 것 같다앞으로 안 쓸 애물단지들이니까, 누군가에게라도 쓰여야 의미가 있을 것🗿 스터디 메모head &amp;lt;–&amp;gt; rear" }, { "title": "🌱 carykh", "url": "/posts/DayStone-221119/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-11-19 14:23:00 +0900", "snippet": "🗿 carykh유튜브 보다가 볼 거 없나 하고 ‘나중에 볼 동영상’ 리스트에 들어가니 있던유전 시뮬레이터 영상보다보니 이게 내가 빠져들어서 7년전 영상부터 정주행을 하게 됐는데이 채널, 1달 전에 daily photos 영상이 있다하루에 한 장 자기 모습을 사진으로 찍는.. 그런 류의 영상근데 멋있다8년씩이나 자기 유튜브 채널이든 어디에 언급하지 않고8년씩이나 비밀을 지켜오면서 1달 전에 딱 공개를 한거다멋있다단순히 이 영상 때문만이 아니라채널에 올라온 영상들을 하나하나 보면자기가 만들고 싶은 걸 어릴 때 부터 이뤄오는 모습이 멋있다나도 할 수 있을까모방하는 수 밖에나도 해보겠다🗿 AI 그림새벽에 디코방에서 Novel AI 가지고 놀았다나는 내가 예전에 그렸던 그림가지고 AI 를 돌려봤다신기하다나의 참을 수 없는 욕구로 인해1만 4천원씩이나 주고 산 1000 포인트를 그 자리에서 모두 써버렸다할 때는 이게 참 퀄리티도 좋아보이고 신기하고 재밌고 흥분됐는데다 쓰고 보니 현타가 왔다여기에 더 빠졌다가는 흥청망청 포인트 사는 거에 돈 써버릴 것 같아서금방 그만두기로 했다그림도 이게 다시보니 아직 아니다지금 하는거에 만족해야겠다🗿 KICKBACK 오늘 이야기는 아니지만..이 노래.. 이 뮤비..9초부터 18초까지의 노래와 뮤비가..굉장히 뭐랄까..기묘한 감정이 든다..계속 보게 된다..도대체 뭐지헨나기분다🗿 벼룩파리그러고 보니 그렇게 눈 앞에 날라다녀서 화가나게 만들던 벼룩파리들이어느 순간 코빼기도 안보인다아주 좋아Winter Is Coming이다 이 자식들아🗿 안드로이드 버전이것도 오늘 일은 아니지만모바일 게임을 만들고 있어서한 번 내 핸드폰에 테스트 빌드를 돌려보려고 했는데아뿔싸 내가 만든 앱이 내 폰에서 호환을 안한다고 한다내가 생각하기에 원인은 안드로이드 API 버전 차이인 것 같다내가 만든 앱이 안드로이드 12 이상 버전을 쓰고 있는 걸로 기억하고 있는데,내 폰은 좀 옛날 폰이라 안드로이드 9 버전을 쓰고 있다전에 구글 콘솔에서 봤을 때최근에 만드는 앱들은 모두 안드로이드 12 이상을 지원해야 한다고 했던 것 같은데..아님 내가 뭔가 잘 못 건든건가좀 더 알아봐야겠다🗿 블로그 폰트를 나눔 고딕으로돋움을 쓰고 싶긴 한데, 기분 탓인지 몰라도 계속보다보니 눈이 이상하게 피로하다..나눔 고딕으로 다시 바꿔보니 괜찮은 것 같아서 채택 !🗿 블로그 곳곳에 이모티콘 넣기블로그 곳곳에 이모티콘을 넣어주니 보기 이쁜 것 같다아 근데 지금 작업해야 하는데..이상하게 마감만 다가오면 뭔가 정리가 하고 싶어진다나에겐 도피처가 정리 밖에 없는 걸까🗿 밤이 빠르다겨울이 온다는 걸 느낀다5시 6시 밖에 안됐는데 날이 컴컴하다예전에는 밤이, 새벽이 좋았는데요즘은 외롭기만 허다" }, { "title": "⛏️ URL의 프로토콜 식별자 (Protocol Identifier)", "url": "/posts/URL-Protocol-Identifier/", "categories": "⛏️Programming, 🕯️Programming-Memo", "tags": "", "date": "2022-11-18 10:42:00 +0900", "snippet": "💎 프로토콜 식별자 (Protocol Identifier)일반적인 Web URL을 보면:// 앞에 https 가 있는 것을 볼 수 있다.:// 앞은 프로토콜 식별자 (Protocol Identifier) 로 사용되는 공간으로,여기에 적힌 프로토콜로 통신을 하겠다는 의미이다.그래서 여기에 https 가 적혀있으면 https 프로토콜로 통신을 하겠다는 의미,다른 프로토콜이 적혀 있으면 그 프로토콜로 통신을 하겠다는 의미다💎 예시 - TopazChatVRChat 월드 영상 스트리밍 서비스인 TopazChat에서 사용하는영상 스트리밍 송신/수신 링크를 살펴보면,송신 링크 - rtmp://topaz.chat/live수신 링크 - rtspt://topaz.chat/live/[StreamKey]이런식으로 프로토콜 식별자에 rtmp와 rtspt가 적힌 걸 볼 수 있는데,이를 통해 TopazChat이rtmp - RealTime Messaging Protocol,rtspt - RealTime Streaming Protocol TCP,두 프로토콜을 이용해 영상 스트리밍 통신을 하고 있다는 것을 알 수 있다." }, { "title": "🌱 종강이 얼마 안남았다", "url": "/posts/DayStone-221118/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-11-18 10:34:00 +0900", "snippet": "🗿 하룻돌1달 뒤면 종강이다내년에는 이렇게 시간표 안짜야지…1달하고도 절반이 더 가면 올해가 끝난다내년에는 이렇게 안 살아야지…방학이 되면정말 열심히 만들어야지" }, { "title": "⛏️ PlayFab, Google Play 연동 중 PlayGamesPlatform 를 찾지못하는 경우", "url": "/posts/PlayGamesPlatform/", "categories": "⛏️Unity, 🕯️Unity-Normal", "tags": "", "date": "2022-11-18 10:32:00 +0900", "snippet": "💎 문제PlayFab과 Google Play 로그인 연동을 위한 코드 작성 중,PlayGamesPlatform.Instance.Authenticate(); 에서 에러 발생PlayGamesPlatform 을 찾지못함.Assembly ‘Assets/ExternalDependencyManager/Editor/1.2.167/Google.IOSResolver.dll’ will not be loaded due to errors:참고 링크💎 해결방법빌드 세팅이 Window 플랫폼으로 설정되어 있었음Android로 바꿔주니 에러 사라짐" }, { "title": "⛏️ PlayFab, Google Play 연동 에러", "url": "/posts/PlayFab-GooglePlay-Error/", "categories": "⛏️Unity, 🕯️Unity-Normal", "tags": "", "date": "2022-11-16 11:38:00 +0900", "snippet": "💎 문제PlayFab과 Google Play 로그인 연동을 위한 코드 작성 중,PlayGamesClientConfiguration 과,PlayGamesPlatform.Instance.Authenticate(); 에서 에러 발생참고 링크 1참고 링크 2💎 해결방법22/11/16 기준, 아직까지 해결되지 않은 것으로 확인0.11.1 버전이라면, 0.10.14 버전으로 다운그레이드하여 사용 (참고 링크 2, PlayFab 답변 참고)" }, { "title": "🌱 브라우저", "url": "/posts/DayStone-221116/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-11-16 09:31:00 +0900", "snippet": "🗿 하룻돌하루/날 달 해일 월 년마일스톤에서 이름을 따와,‘달돌’ 이라는 이름으로 매달 목표를 적고 있다.일기도 달돌처럼 뭔가 이름을 지어주고 싶어 고민한 결과,‘하룻돌’ 로 정했다.달돌은 목표 설정를 목적으로,일기는 기록을 목적으로 하기에, 처음에는 하룻돌이라는 이름이 안맞겠다고 생각했는데주기적으로 적어내는 글들이라 공통점이 만들고 싶어 그대로 ‘~돌 돌림자’ 를 채택했다.그래서 하룻돌이다.뭔가 저 깊은 산속에서 조약돌 하나하나 쌓는 느낌도 들고,헨젤과 그레텔 마냥 하루하루 뭔가 기록해간다는 느낌도 있어서 좋은 것 같다.🗿 브라우저원래 나는 브라우저로 파이어폭스를 쓰고 있었는데,오늘부터 다시 마이크로소프트 엣지(이하 엣지)를 사용하기로 했다.이유는 속도 차이가 눈에 보여서였다.오늘 컴퓨터로 작업하다가 우연찮게 엣지로 창이 열려서 잠시 쓰게 될 일이 있었는데,잠깐이었지만 확실히 가볍다는 느낌을 받았다.실제로 두 브라우저로 똑같은 사이트에 들어가서 이리저리 페이지를 옮겨다녀보니,미묘한 차이지만 눈에 보일 정도의, 신경쓰일 정도의 속도 차이가 있었다.🗿 날씨아침엔 엄청 안개꼈었는데낮엔 구름 한 점 보이지 않았다🗿 거미오늘 있었던 일은 아닌데,거미가 떨어져 죽어있었다전봇대 위에 거미 없는 빈 거미집이 있는 걸 봐서는떨어져 죽은 게 맞는 것 같다거미도 떨어져 죽나" }, { "title": "🌱 Desktop Laptop", "url": "/posts/DayStone-221114/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-11-14 12:52:00 +0900", "snippet": "🗿 Desktop LaptopDesk 위에 놓고 써서 DesktopLap 위에 놓고 써서 Laptop아하젠젠 인지하지 못하고 있었다" }, { "title": "⛏️ ROW 개발 기록", "url": "/posts/ROW-Dev-Log/", "categories": "⛏️Memo", "tags": "", "date": "2022-11-09 08:18:00 +0900", "snippet": "💎 ROW 개발 기록 개발 기록을 하기 시작한 시점을 기준으로, v1.0.0 부터 명칭한다.버전 업 기준은 링크를 참고한다. 23-02-15 그냥 내 좆대로 하기로 한다. 💎 v1.0.1 멀티 플레이 진행 시, 자신을 제외한 다른 플레이어의 회전값이 제대로 적용되지 않던 문제 수정💎 v1.0.2 Menu Scene 에서 Lobby Panel 과 관련하여 발생하던 오류 로그 수정 Lobby Panel 에서만 보여야하는 Team Panel 의 오브젝트 계층 구조 위치 수정 Team Panel 을 갱신하지 않고 있던 문제 수정 (OnPlayerJoined, OnPlayerLeft) Team Panel 에 PlayerRef.PlayerId 가 적용되도록 수정 (임시, 닉네임으로 바꿔야 함) 추후 적용시키고자하는 SteamWork 와 관련하여, 유니티 프로젝트에 Steam SDK 임포트 SteamWork 개발자 등록에 필요한 100$ 결제 (12만원..)💎 v1.0.7 Built In에서 URP로 렌더링 파이프라인 변경 FlatKit (Toon Shader) 에셋 적용 메인 메뉴 UI 개선 멀티 플레이 개선 네트워크 Lobby에 접속한 상태일때만 플레이 시도할 수 있도록 조건 추가 현재 네트워크 상태 디버깅 용 UI 세션 생성 UI (UI만) 모든 플레이어가 준비를 눌러야 시작 가능 (샘플 프로젝트에서 돚거) 인게임 채팅/로그 인게임 UI HP, EXP, Skill 등 ESC 눌렀을 때 뜨는 UI Setting 버튼과 Setting UI (UI만) Disconnect 버튼 StageManager 몬스터, 상자, 제단, 텔레포터 생성 싱크 임시 스테이지 모델 임시 캐릭터 모델, 애니메이션💎 v1.0.8 보스 이벤트 보스 몬스터 움직임이 Y축으로 떨리던 문제 해결 몬스터들은 모두 NavMesh로 움직이는데, 보스 몬스터 프리팹의 RigidBody Freeze Position 이 체크 해제되어 있어서 계속 아래로 떨어지던 거였음 보스 몬스터 UI (이름, 설명, 체력바) 다음 스테이지로의 이동💎 v1.0.9 메인 메뉴 설정창 UI 키바인딩 WIP💎 v1.0.10 스킬 핸들러 스킬 UI💎 v1.0.11 몬스터 HP 버그 수정 HP바 코루틴 캐싱이 null이면 새로 HP바를 띄워주고 있었는데, 전에 수정하면서 코드 한 줄이 빠진건지, 몬스터가 디스폰 될 때 HP바 코루틴 캐싱을 null로 안 만들어줘서 다시 스폰되면 지속 시간 갱신만 되고 있었음 💎 v1.0.12 키 바인딩 세이브 (PlayFab) 인풋 매니저 분리💎 v1.0.13 UI WIP 스피드웨건 결과창 💎 v1.0.14 로비에서 선택한 캐릭터가 인게임에서 적용 로비에서 쓰기위해 Character 스크립터블 오브젝트에, 로비에서 보여줄 캐릭터 모델 프리팹을 달아주었음. 인게임에서 적용하기 위해, 움직이는 캐릭터의 기능과 모델 프리팹을 분리, 나중에 프리팹을 생성해서 합치는 방식으로 변경 💎 v1.0.15 닉네임 싱크 PlayerSoul에 PlayFab 플레이어의 DisplayName을 싱크 시켜 로비 및 인게임 채팅에서 적용되도록 💎 v1.0.16 결과창 WIP 오브젝트 풀로 쓰이는 네트워크 오브젝트들을 NetwokManager 아래에 둬서 사라지지 않도록 수정 현재 살아있는 플레이어 수를 계산해서 게임오버 여부 판단 및 Result 캔버스 활성화 나눠져있던 Map 과 StageManger 합침💎 v1.0.17 사망 로그 (로그 WIP)💎 v1.0.18 RunRecord (게임 전적) 로컬 툴팁 팝업💎 v1.0.19 오디오 세팅 (UI)💎 v1.0.20 비디오 세팅, 화살표 선택 프리팹 (UI)💎 v1.0.21 (최신신) 두 번째 스테이지 진입 시 발생하는 오류들 수정 FreeLook 카메라가 켜지지 않던 오류 FreeLook 카메라가 회전하지 않던 오류 몬스터 스폰 시 몬스터ID딕셔너리에 추가가 되지 않는 오류 💎 앞으로의 마일스톤, 인지된 버그, 수정사항 Steam 연동? (인증 및 업적 관련, PlayFab) 몬스터 생성 알고리즘 (Risk Of Rain 2 의 감독 시스템 참고) 로딩 움직임 미끄러지는 것 없이 -&amp;gt; 새로 만들어야 할 것 같은? NetworkTransform 으로 바꾸고 직접 계산 하는 느낌으로 아이템 ID 싱크 디렉터 어드레서블에셋 업적 체커 Result Recorder 기획 / 모델링 / 이펙트 / 사운드-? 캐릭터() - 몬스터 - 아이템 - 지역 아이템 출현 / 아이템 정보, 아이템 인터렉트, 아이템 데이터 싱크, 아이템 소유 TAB UI? 롤 탭 / 상태창 스탯 몬스터 / 엘리트 보스 연출 제단들 상자들 씬 하나로 통합?? 설정 - 그래픽/컨트롤 설정, 해상도 초기화 데이터 저장 기준 Because 치터 네이버 가능하다면.. Or Steam 출시하지 않아도 된다면 업데이트? 어드레서블 오브젝트? 텔레포터? 꼭 찾아서 쓰는걸로? Bullet 1 을 Client 가 쏘면 RPC가 작동하지 않음 왜지 상자, 제단, 텔레포터 위치 싱크 현재 Network Transform 으로 땜빵되어 있음 " }, { "title": "🌱 리뷰 아카이브 같은 걸 만들어보고 싶다", "url": "/posts/DayStone-221107/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-11-07 12:56:00 +0900", "snippet": "🗿 Review Archive경험에 대한 아카이브? 도서관? 같은 걸 홈페이지에 만들어보고 싶다.살면서 해온 게임이나, 봐온 영화, 애니, 책 등을 최소 한 줄 정도는 되는 평과 함께 나열하는 것이다.별 다른 이유는 없다.내가 분명 하거나 봐왔던 것임에도 불구하고 제대로 기억을 못하는 것들이 많고(…),뭔가 컬렉션 같이 정리하고 모아두는 게 기분 좋기 때문이다.어떻게 만들어야 할 지 감이 잘 안잡히긴 한다.모양은 넷플릭스, 왓챠 같은 인터페이스를 가지되, 요소를 누르면 간단한 평이나 메모를 볼 수 있는 그런 느낌일 것 같다.구현은.. 어떻게든 되겠지.." }, { "title": "🏝️ 2211 달돌", "url": "/posts/MonthStone-2211/", "categories": "🗿Stone, 🏝️MonthStone", "tags": "", "date": "2022-11-01 10:36:00 +0900", "snippet": "🗿뭐 했다고 벌써 11월이다.언제나 그렇지만, 역시나, 결국, 10월달의 목표는 다 이루지 못했다.최근 3일간 모든 밤낮을 일과 프로젝트 작업, 학교 수업, 시험, 과제, 조별과제 모임으로 보냈다.잠을 2시간 이상 잔 적이 없다. 매일 졸고 있다.최근 3일이 올해 들어 가장 재미없고, 가장 힘든 시간인 것 같다.진짜.. 정신적으로나 육체적으로나, 말 그대로 갈리고 있다고 표현해도 무방할 것 같다.힘들다.일을 하면서 주어진, 나에게는 너무나도 거대한 책임과 임무가 힘들다.아무리 머리쓰고 노력해도 나는 이 임무를 해결하지 못 할 것 같다는 불안감,같이 일하는 동료분들에 대한 미안함,촬영을 할 때 마다 느껴지는 이 임무에 대한 무게감, 여러 마감 시간을 향해 가속하고 있는 시간,나에겐 오히려 독이 되고만 있는 주변의 응원,‘이렇게 일하고도 돈을 받냐?’ 라고 생각될 수 밖에 없는 주변 시선에 대한 걱정,그냥 자취하면서 생긴 외로움,본의 아니게 튀어나오는 나의 가시달린 말투에 대한 후회,다음엔 문제 없게 하겠다고 큰 소리 쳐놨던 나의 입을 지금이라도 막고 싶은 마음,머리 속이 매초 뒤엎어지고 있다.진짜 하기 싫다. 아무것도 할 수 없을 것 같다. 정말 죽을 것만 같은 기분이다.너무 속상하고 힘들기만 하다. 다른 감정은 없다.언제부터였을까나는 정말 열심히 해왔다고 생각하는데다 부질 없게만 느껴진다열심히 해봐도, 정말 열심히 해봐도내게 내 자신에게서 찾을 수 있는 건 아무것도 없었고,나는 11개월 전의 나로부터 조금도 성장하지 못했다11개월을 버렸다. 시간을 돌리고 싶다.🗿학교 다니면서 일을 한다는 게돌아보면 나에게는 너무 무리였던 것 같다.하나만 해도 집중을 못하는 성격인데,두 개를 동시에 하겠다니, 내 급에 맞지 않는 선택이었다.잠 줄이고 일하다가 학교에서는 퍼질러 자기나 하고,정작 일에서 중요한 날에는 학교 일정 때문에 제대로 시간도 못쓰고,학교 때문에 못한다고 말하고 있자는게 눈치나 보이고남은 재학 기간 동안에는 그냥 소소하게 프로젝트 하면서 공부에 집중 해야겠다.내가 뭐 특출한 것도 아니고.. 공부부터 열심히 해야겠다.🗿11개월 동안 큰 미래가 없는 일을 해온 것 같다.처음엔 내 나름대로 의미가 있긴 했지만..지금와서 이걸 더 해야 할 이유가 있나? 라는 질문엔 할 말이 없다.내가 뭐 여기에 특출난 것도 아니고..게임이나 더 만들고 싶다." }, { "title": "🏝️ 2210 달돌", "url": "/posts/MonthStone-2210/", "categories": "🗿Stone, 🏝️MonthStone", "tags": "", "date": "2022-10-06 12:09:00 +0900", "snippet": "🗿 상콘 옥탑방 크라임 예선맵 마무리 피자맵 마무리 짜잘맵 마무리 왓챠 13일 취소 혼자 공부하는 머신러닝-딥러닝 세 챕터 이것이 C#이다 완독 이것이 C#이다 정리 똥글 생성기 (취소) 백준 포스트 생성기 (취소) 백준 골드 5 백준 총 해결 문제 200 백준 단계별로 풀어보기 20단계까지 웹 프로그래밍 정리 네트워크 프로그래밍 정리 ToStudy, 북마크, 유튜브 좋아요 목록 최대한 공부하고 정리 체인지 5시간 (온라인 학습법 특강 만족도 조사)" }, { "title": "🌱 배우자", "url": "/posts/DayStone-221006/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-10-06 12:00:00 +0900", "snippet": "🗿 Learn All Time나는 부끄럽지 않은 사람이 되고 싶다.최소한 남에게 무시받지 않고 싶다.그렇기 위해서 배워야한다!매일매일 배워야한다.배울 건 너무나도 많으니, 걱정안해도 된다.궁금한 건 그냥 넘어가면 안된다.그냥 그런가보다 하는 것도 넘어가면 안된다.하고 싶은 게 있으면, 궁금한 게 있으면 끝까지 배워야 한다.지킬 수 있으면 좋겠다.아 그리고 기록해야 한다!난 뭐든 금방 까먹으니까 잊지 않기 위해서 기록해야 한다.기록하면 좀 더 오래 기억할 수 있기도 하고,잊었을 때 다시 보면 금방 기억날 것이다." }, { "title": "⛏️ 글꼴 이름의 &#39;체&#39;", "url": "/posts/Proportion-Monospaced-Font/", "categories": "⛏️Memo", "tags": "", "date": "2022-10-05 11:17:00 +0900", "snippet": "💎폰트 체 붙은 거는 모든 글자 한 칸 크기 같음고정폭 글꼴, 가변폭 글꼴참고1참고2" }, { "title": "⛏️ 학교 수업 타자", "url": "/posts/University-Typing/", "categories": "⛏️Memo", "tags": "", "date": "2022-10-04 10:03:00 +0900", "snippet": "💎 컴퓨터 네트워크 수업 타자목적지 주소를 보고서 전송해줘야하는데라우터는 패킷을 받으면목적지로 보내줘야 하는데연결된 호스트 ㅇ개수가 예를 들어 100개 아ㅣㅅ어100개 중에어떤게 들어오더람ㄴ 네트워크는 전송됨만약에 목적지 주ㅗ별러 라우팅 테이블을 채웟다너무 커지겟죠라우터가 주소를 검색할 때 검색 시간이 늘어남차지하는 메모리 공간이 커짐같은 주소는 이 인터페이스로 보내주면 되는 것라우팅 테이블에는 네트워크 주소가 들어가는 것~는 할당되지 않는 주소다특수한 주소모든 값이 0인 주소 -&amp;gt; This HostDHCP 서버에 주소를 할당 받을 때패킷에는 주솨 아무튼 잇어야하는데그 때 사용되는 주소가 0.0.0.0실제로는 0.0.0.0 주소로 할당할 수 없음하지만 DHCP에 요청할 때 패킷에 함께 보내는 주소가 0.0.0.0Lan상으로 연결할 때 ㅆ는 주소256.256.256.256브로드캐스팅 하는 주소FF.FF.FF.FF특정 네트워크로 브로드캐스팅하 ㄹ때Network.1111111111111111111111127로 시작하는 주소 -&amp;gt; 클래스로 따지면 클래스 1loopback 용도127.0.0.1 이 이거네사설 IP주소 : 공유기 주소각 클래스별로 할당되어 잇음10.0.0.0 ~ 10.255.255.255 A172.16.0.0 ~ 172.31.255.255 B192.168.0.0 ~ 192.168.255.255 C대부분 여기에 할당되어 잇음IP 주소에 관한 ㅐㄴ용——————-(85 ~ 87P 10진수 형식으로 변환따로 설명하지 않을 테니 한 번 읽어보세ㅛㅇ)인터넷 프로토콜 ——————IP 헤더 패킷 포멧Payload == 데이터 (데이터가 들어가는곳)인터네 프로토콜은 3계층 중 2계층의 프로ㅗ콜아래 계층의 데이터를 상위계층의 패킷으로 보낼 수 없음반대로 상위 데이터를 하위 계층의 패킷으로 보낼 수 있음—- 데이터 패키지응용과 응용은 연결되어 있지 않음=&amp;gt; 아래 계층으로 메세지를 보냄=&amp;gt; 다시 아래계층에서 위 계층으로 올라감제어 정보를? 붙여야함 == 소스(목적지)포트 번호를 앞에 붙여서 메세지 보냄이런 것들을 헤더헤더를 덭붙임아래 계층으로 내리면 또 아래 계층의 헤더가 붙음네트워크 계층도 직접 못보내므로 아래로 내림소스주소 맥 주소 이런것들이 붙음물리 계층까지 내려감이게 전자계층으로 바꿔서 전송매체를 토앻 전달됨이 과정을 캡슐화 Encapshule라이터에서 한 ㄴ번 올라감 Decapshle다시 내려가고, 목적지에ㅓ 올라감————–네트워크 계층에서는 Payload에 TCP나 UCP 패킷을 보냄네트워크 계층의 헤더는 20바이트? 40까지? (옵션)나뉘어진 각각의 구역을 Field라고 함(Header Format 그림에서)숫자는 비트 수VER versionHLEN Header Length필드 1 : IP 프로토콜의 버전 (일반적으로 4, 다음 버전이 6)필드 2 : 헤더의 길이, 기본은 20바이트, 추가적으로 40바이트 붙을 수 있기 때문에 (가변적이기 때문에)기본이 5Word ? 비트 ?필드 3 : 현재는 사용되지 않는 것지연시간이 적은 경로로 전달해달라필드 4 : 헤더의 길이 example 20 + 데이터의 길이 example 100 바이트 단위 = example 120필드 5 : 데이터 크기가 용량보다 크면 잘라서 (단편화)보내는데, 1500바이트, 필드들,Time-to-live :인터넷 프로토콜Time to Live 255 – 값이 0이면 폐기IP 헤ㅓ 필드 전송을 보장할 수 없음헤더 체크섬이더넷 프로토콜MTU - Maximum trabsfer unitIP 데이터 다녚ㄴ화단편화는 소스 호스트와 라우터에서 실행조합은 목적지 호스트에서수행단편화가 DDos 공격에 활동됨IP 데이터그램 옵션 별로사용안됨이중에 딱 하나 소스호출————————-광역네트워크WAN무선 네트워크WIFI(상대적 중거리 몇 백 블루투스 (상대적 근거리 10모바일 IP 프로토콜을 보완하는 프로토콜이동하면서 연결 통신802.11 = WIFI802.11csmaCDCSMA/CDCSMA/CACollision Avoiding유선에서는 볼트 차이로 충돌을 감지 (원래 5볼트 쓰는 데 충돌 발생하면 10 봍르, 10볼트가 들어오면 아 퉁돌이 발생했구낙)근데 무선은 그걸 못함무선이 충돌회피 하는법A | B | CA -{ RTS }-&amp;gt; BRequeset to Send이때, 무선은 전파가 퍼지는거니까 다른 곳에서도 이를 들을 수 있음무튼 B에 전송하고 싶어, 그래서 목적지르 B로 하고 전송B가 데이터를 받을 준ㅂ비가 되어 있다면 A &amp;lt;-{CTS}- BClear To Send목적지는 A마찬가지로 전파라 퍼져나가서 다른 곳에서도 들을 수 ㅣㅇㅆ음이 때, C 가 사실 B 한테 보내려는 데이터가 잇을 때C가 여기서 B에게 뭔가 보내버리면 충돌이 생김그래서 C가 전송을 중단??C단말이 A단말이 B에게 데이터를 보내는 사실을 모르더라도, B가 주변 단말에 아 나 데이터 받을 거야라고 말하기 때문에 충돌을 피ㅏㅎㄽ ㅜ있음A는 C에 대해서 숨겨진 단말, 반대도 마찬가지이게 CSCA—BSSBasic Service Set독립 기본 서비스 셋= IBSSIndependent (그림에서 물결표는 무선 연결)= Ad-hoc Network(ad-hoc 임시 방편) 엑세스 포인트 뒷단에는 유선이 연결되어 있음= 인프라 스트럭쳐단말 끼리만 구성된 경우,인프라 스트럭쳐와 연결되어 사용되는 경우이렇게 두 가지가 있따엑세스 포인트 AKA 공유기유선렌의 허브 또는 스위치 기능 (중앙제어장치) 역할을 수행스위치에 연결되어 있는 단말기와 통신할 때, 단말과 단말이 직접 통신을 하는게 아니라 스위치를 거쳐 통신하는 것 처럼무선에서도 통신을 하기 위해서는 엑세스 포인트를 거쳐서 통신이 이루어지나때문에 인터넷/무선 통신을 위해서는 액세스 포인트에 접근을 해야 한다___지속/ID 필드 : 얼마동안 통신을할지C 단말은 이걸 보고 B 단말이 다른 단말이랑 얼마동안 통신을 할 지 알ㄹ 수 있음모바일 IP해당 기기 (모바일 기기 이동하는 기기)는 홈 네트워크의 영구 주소를 유지, 홈 네트워크에 위치한 홈 에이전트라고 하는 특수 라우터는 기기의 현재 위치를 영구 주소에 연결하는 테이블을 유지 관리패킷이 오면, 헤더를 더 붙여서 기기에게 보낸다똑같은 계층의 헤더를 또 붙이는 것을 = 터널링그래서 홈 에이전트가 터널의 입구, 포린 에이전트가 터널의 수구가 되겠죠 …?VPN에서도 터널링을 사용한다기기에 지정된 데이터그램이 홈 네트워크엥 도착하면, 데이터그램은 외부 네트워크로 지정된 패킷으로 캡슐화되어 기기에 전달됩니다여기ㅅ 캡슐화 =라우터 Switching Fabric = 하드웨어라우팅 테이블목적지 (Entry = IP주소)홉 Hop = 라우터직업 연결은 연결되어 있다는 것, 아니라면 Router의 주소8.1라우팅라우터 프로토콜을 통해 라우팅 테이블 만드는포트포워딩라우팅 테이블을 참조하여 패킷을 전달하는 과정큰 의미에서 라우팅은 포워딩을 포함하지만,개별적으로는 다른 개념IP 포워딩프리픽? 서브넷 마스크를 이용해서 IP 추출?호스트 주소가 아니라 네트워크 주소를Forwarding table = Routing tableDA에서 네트워크 주소를 추출, 라우팅 테이블에 일치하는 게 잇으면 거기에 댇응되는 출력 인터페이스로DA는 바뀌지 않음라투어에서의 포워딩ㄷ 과정동적으로 바뀐다때문에 도착하는 순서가 달라질 수 있다하지만 네트워크/ 전송 계층에서는 TCP 프로토콜을 통해 받으므로 신경쓰지 않아도 됨 -동적 라우팅 알고리즘라우팅 프로토콜은 : 라우팅 테이블을 만드는 프로토콜으용 계층의 프로토콜이라고 봐도 무방네트워크 구성 : 라우터 수, 라우터 링크 비용 정보 (수 거리 대역폭)a 는 x 에게 Day 거리를 알려줘야함x는 Dxa 는 앎RIT 에서는 거쳐가는 홉 개수를 기반으로 거리 벡터를 ㅜ갛ㅁ중간고사 범위는 거리 벡터 라우팅 까지UDP 비연결형 간단한대신 손실/중복을 보장할 수 없음TCP 연결형, 구현이 복잡한대신 전달,순서 등을 보장받을 수 잇음서브넷 마스크가 255 255 255 224수용 가능한 호스트의 개수 32 - 2 = 30개브로드캐스트용 주소110|00000 |11111192 + 31 = 223First 192.100.50.192End 192.100.50.223147.27.26.0/23 을 4개의 서브넷으로 나눠라23 비트의 네트워크 ID 중 2비트를 쓴다 147.27.0001011 0.0 147.27.0001011 0.1 147.27.0001011 1.0 147.27.0001011 1.1 147.27.22.0147.27.22.128147.27.23.0147.27.23.128128 64 32 16 8 4 2 10 0 0 1 1 0 1 0 TCP 검사합 필수.흐름제어는 오류랑 상관없다확인응답, 재전송타이머, 검사합 ACK 번호가 200이라면 순서번호를 알 수 없음인터넷 전화와 같은 인터넷 으용에 접학한 전송계층 프로토콜과 그 이유UDPTCP는 흐름제어 오류제어가 오히려 악영향실시간으로 전화하는데 재전송한다던지, UDP는 흐름제어를 하지 않기 때문에TCP 연결성정과 해ㅈ에사용되는 세그먼트 SYN FINUDP 설명 틀린것UDP ㅎ더의 길이는 8바이트로 고정되어 있다UDP는 메시지 지향 프로토콜이다 = 응용계층에서 보내면 그대로 보냄 = TCP는 ?UDP는 오류제어 기능을 수행한다 XXUDP는 비연결현 프로토콜이다TCP 연결 설정과정ㅇ서 클라이언트와 서버가 교환하는 주요 정보(연결설정의 목적)초기 순서 번호를 합의/동기화하는 과정TCP 틀린것연결설정시 3방향 ㅐ핸드 셰이크슬라이딩 윈도우 방향의 흐름제어TC헤더의 길이는 고정스트림 지향 프로토콜포트 번호옳은것서버에 할당된 포트번호는 잘 알려진 포트번호이다 = 0 1330 사이 웰노운 = 인터넷 표준, 때문ㅇ XX응용 프롯스를 식별하기 위해 사용된다 O패킷이 라우털ㄹ 이도할 때마다 변경된다 X 고정되어야 한다네트워크 계층에서 사용하는 주소이다 X 전송ㄱ층방화벽 틀린것외부 침입자가 내부 네트워크에 접근하는 것을 막을 수 있따내부 사용자가 외부 네트워크 서비스에 접근하는 것을 막을 수 있따일반적으로 외부 네트워크와 내부 네트워크 사이에 배치한다 -&amp;gt; 윈도우 방화벽은 개별 PC 방화벽, 일반적으로는 외부 내부 사이주로 물리주소를 필터링하여 기능을 수행한다 XX 주로 포트번호와 IP주소응용계층 틀린것인터넷 사용자들에게 네트워크 서비스를 제공한다IETF에서는 인터넷 프로토콜들의 표준을 ㅈ정비표준 응용ㄱ층 프로토콜은 TCP/IP 프로토콜을 이용할 수 없다소켓 API를 이용하여 네트워크 서비스를 이용할 수 있다응용 ㄱ층 프로토콜이 아닌것ARP-&amp;gt;네트워크 DNS FTP HTTP 피기배킹?데이터 전송시에 확인응답을 함께 실어 보내는 응답 방식왜 쓰냐응답만 따로 보낼 수 있지만따로 보낼 때 마다 20바이트, 등등 오버헤드가 붙으니까 비 효율적전송할 데이터가 있으면 함께 보낸다= 데이터 전송 효율을 높이기 위해도메인 내에서는 rip 밖에서는 bgp링크상태 라우팅 ospf 실제로 쓴느 방법L4 라우터 포트 번호를 보고 전송할지 말지 판단크게 링크 상태 라우팅과 먼 라우팅 2가지가 있다라우팅을 위한 프로세서가 있다도메인 내에서 사용되는 프로토콜거리 ㅂㄱ터 기반한 인터넷에서 쓰는 건 RIP링크 뭐시깽 기반한 ISPF밖에서 사용되는건 극 잇다자율 시스템 관리자가 해당 라우터의 프로토콜을 결정한다BGP 시스템 사우팅 같이 사용도니는 프로토콜정적 라우팅은 관리자가 정적로 라우팅 테이블을 만든다 -&amp;gt; 소규몽서만 가능한다그래서 동적 라우팅을 쓴다라우팅의 프로토콜이 하는 일 , 라우팅 테이블을 만드느 일포워팅 라우팅 프로토콜이 만는 ㅌ이블을 가지고 라우터가 받는 패킷을 적절한 출력포트로 내보내는포워딩 VS 라우팅 다르다IPv6 새로운 기능특별한 처리를 요구하는 경우 사용 FLow Lable패킷이 네트워크 상황에 따라서 다른 경로탈 수도Flow Lable을 이용하면 같은 경로를?라우트 테이블이 아니라 플로우 테이블을 가지고 전송을 한다이러면 라우트 테이블을 쓸 때 보다 빠름라우트 테이블은 네트워크 주소 뽑고 탐색하고 일치하면 해당되는 곳으로 포워딩플로우 테이블은 정해져있음, (들어올 때 플로우 뭐시기 값 같이 보내는데) 이것 때문에 더 빠름그래서 실시간 오디오나 비디오 전송을 위한 자원 예약에 사용//확장 헤더000206자세한 것들은 굳이 알 필요 없는데이런 확장 헤더들이 있다Hop-By-Hop (이건 라우터죠?) 라우터가 처리해야할 옵션Destination 중간에 있는 라우터들은 신경 쓸 필요 없음, 목적지만Srouc erouting 어떤 어떤 라우터를 거쳐서 전송을 해라, 지정해서 보낼 때FranmentationAuth`ESP//IPv6 주소 지정워낙 길이가 길어서 표기법도 다름IPv4 는 10진수IPv4 에서는 16진수 (10진수로 하면 점이 16개야)2바이트 단위로 짤라서 콜론 : 으로 구분AAAA:AAAA:AAAA:AAAA근데 이래도 너무 길어그래서 영역 앞에 있는 0은 생략 가능예를 들어 0074 -&amp;gt; 74, 000F -&amp;gt; FAAAA:0:0:0:0:BBFF:0:FFFFAAAA::BBFF:0:FFFF연속되는 0으로만 구성된다면 더블 콜론으로 대체 가능 (0압축)이 축약은 주소당 한 번만 가능CIDRAAAA:AAAA:AAAA … :AAAA/60 (60바이트다)Ip4 에서는 클래스를 썻지요클래스별로 해서 유니 캐스트, 머맅캐스트 나눠 썼는데Ip6 도 유니캐스트용 주소와 멀티캐스트용 주소가 있음근데 새로 애니캐스트라는 것이 생김애니캐스트는 1:A이긴한데멀티와의 차이점은멀티는 소스가 하나의 패킷을 보내면 그룹의 모든 호스트가 수신자가 되어 받는데애니캐스트는 소스가 하나의 패킷을 보내면 그룹의 모든 호스트 중 하나만 수신 (도달가능한 주소만)애니캐스트 주소를 갖는 패킷은 그룹의 가장 도달 가능한 한 구성원에게만 저놋ㅇDHCP (동적으로 IP 할당 서버)네트워크에 여러 개 존재할 수 있음그럴 경우 디스커버리 메시지ㄴ를 클라가 보내ㅡㄴ데이때 IPv6 는 물론 DHCP 쓸 필요가 없지만보낸다고 쳤을 때가장먼저 수신하는, DHCP 써버 에게만 보낸다ipv6는 DHCP 도움을 받지않고 자동으로 IP를 구성할 수 있음?? 주소 유영 2진접두사 IPv6 표기법 설명 불특정 모두 0 ::/128   IP주소를 할당받지 못하면 불특정 (모두 0, 마치 DHCP 때 처럼)루프백주소 내가 보내서 내가 다시 받는 , 테스트 할 때도 쓰는302p//책에 없는 내용서브넷팅Ipv4의 경우에는 계층 구조를 가지고 있는 데 (주소가)네트워크 아이디 파트랑 호스트 아이디 파트랑6도 마찬가지근데 3파트Global routing prefix (ipv4의 네트워크 아이디), 48Subnet identifier (ipv4의 호스트 아이디), 16Interface identifier (ipv4의 네트워크 아이디) 64(ipv4의 네트워크 아이디)를 두 파트로 나눴다어떤 차이?인터페이스아이덴티파이어서브넷 내의 개별 호스트를 식별서브넷아이덴티파이어는 Site 내의 개별 서브넷 (RAN)어떤 조직/기관 내에 여러 개의 서브넷이 존재할 수 있으니까그런 서브넷을 구붆기 위해 사용하는글로벌은 Site어떤 조직/기관 들 중에서 특정 조직/기관을 구분시키기 위해 사용하는링크 로컬 (아까 말했던 주소)사설 주소라고 보면된다는RAN에서 사용할 수 있는ㄴ 추세? 주소에요?이 주소를 어떻게 쓰냐사설로만 쓴느 게 아니라 공인 IP를 만들때 링크 로컬 주소를 이용한다고정으로 IP를 할ㄹ당하지 ㅇ낳고혹은 DHCP 를 가지고 할당하지않고자동으로 IP를 구성할 때 사용어떻게?보자이더넷 같은 걸 쓴다맥 주소를 쓴다48비트주소를 가지고 네트워크 식별자를 만든다근데 그대로 매핑이 안되겠죠48비트고 이건 64비트니까가운데에 있는 16비트는 일로 치우고맥주소의 하위 24비트는 인아이덴에 할당상위24바이트는 아이엗ㄴ 상위에 할당다른 점은 m의 첫번째 바이트의 6번비트 이게 0인데이걸 1로 바꿔준다이더넷 맥 주소 (랜카드) 는 고유한거죠?그래서 이걸 가지고 고유한 네트워크 호스트 식별자를 ㅁ나들 수 있따근데 이제 이렇게 생성했는데혹시라도 같은 인터페식별자를 사용할 수도 있겠죠고유하긴 하지만 바꾸는 과정에서 누군가가 같은 걸 쓸 수도 있어그럴 경우 충돌이 발생하기 때문에그렇기 때문에 새로 주소를 만뜰 때 확인해줄 필요가 있음그 과정이네이버 디스커버리solicitation구걸하다 요청하다사용하ㅗㄱ 있는 장치가 있는 지 확인(요청)그러면 그거에 대한 adver 뭐시깽으로 응답이 옴없으면 쓰고 있으면 다른걸로그래서 이용을 하는데문제는 이ㅔ글로벌하고 하고 서브넷주소도 알아야해주소를 완성해야하니까이걸 누가 가지고 있을까요누구한테 물어봐야 할까요라우터 (라우트 파일) 에게 물어본다그래서 라우터 한테 물어본다router solicitation응답으로 router advertisement그래서 인터rmfotj dlsxjvpdltm tlrqufwkdhk tjqmspt, rmffhqjf 합쳐서 글로벌 유니캐스트 주소를 만든다307pDAD 내가 만든 주소를 다른 장치가 사용하고 있는 지 확인하는 과정중복 주소 검출ipv4에도 있엇짐나ipv6트래픽 클래스예를 들면어떤 ip 데이터 그램이 들어오면버퍼에 쌓여서 순서대로 처리우선순위를 두면 나중에 들어와도 먼저 처리그런시긍로 우선순위를 둘 수 있다 트래피 클래스를 써서그래서 어느 정도트래픽 클래스를 써서 순서를 어는정도 보장할 숭 ㅣ싿?비용이 낮은 경로로 보내고 싶다빠르게 보내고 싶다우선순위를 높게 해서 보내고 싶다이런걸 트래픽 클래스를 써서 보낼 수 있다는거죠ip6가 나온지 좀 됏는데아직 ip4를 주로 쓰고 잇다기존에 많이 쓰고 잇어서 한번에 바꿀수가 없다는거죠일시에 인터넷의 모든 장비의 프로토콜을 바꿀 수는 없다그래서 순차적으로 바꿔나야할텐데그래서 ㅑㅔ4 네트워크랑 6 혼용되고 있는 상태우리 PC도 같이 지원하고 있다운영체제 OS 자체에서문제는 네트워크라우터에서 지원을 하느냐ip4 ip6 혼재되고 잇는 상태엣ㅓ는ip4 ip6 간의 주소 문제가 발생그래서소스 컴은 ip6목적지는 ip4 쓴다고 가정ip4 쓰는 컴은 ip6을 인식하지 못할 거 아니에요그런 경우에어떻게 주소를 매핑시켜 줄 것인가그거에 대한 내용이 IPv4-mapped IPv6 주소80비트 016비트 132비트 ipv4주소ip4가만약에 169.219.13.133이라면다음 IPv6 주소로 매핑 0000:0000:0000:0000:0000:FFFF:A9DB:0D85축약 표기시 ::FFFF:A9DB:0D85이 주소를 이용한다물론 이게 끝은 아님주소를 바꾼 다음에헤더를 좀 바꿔준다반대의 경우에도“머라는거야”무튼 헤더 파일도 같이 바꿔줘야한다이런 경우도 있음소스하고 목적지 다 6인데중간에 라우터가 4 네트워크 (인터넷)이런 경우어떻게하면 되겟어요“몰루”터널링을 이용하면 되겠죠터널링모바일 IP 이야기 할 때 이야기 했었죠IPv6 터널의 개념은 IPv4 내에 IPv6를 캡슐화하는 것ip6 터널 서버가 ip4라우터 (네트워크)에 들여보낼 때IPv6 패킷에 IPv4 헤더를 덧붙여보낸다주소는 보내는 터널 서버목적지는 목적지 쪽 터널 서버터널 입구, 터널 출구출구 터널 서버는 ip4 헤더를 때어내고ip6 전송6in4 (6가 4안에 페이로드로 들어있다)고정된 터널 종단점간에 ipv6 트래픽을 전달6to4이거는 인제어 IPv4-mapped IPv6 주소랑 비슷하게릴레이 주소가 잇어요소스 6 목적지 4 네트워크 (인터넷)내보낼 때 는 ip6로 내보내는데4로 보낼때는 4 주소를 추출해야겟지앞의 경우에는 ip6 터널 입구 출구가 있었느데여기는 출구가 없죠그럴경우에는 6to4릴레이서버에서ip6주소를 ip4 주소로 바꿔준다헤더도 아에 바꿔줘서그게 6to4 릴레이 서버이거는 인제이게 ip4버전 터널인데무튼터널 입구 출구인데그 간에 어떤 협상을 필요로 하는 경우가 이쓴데그 때 쓰는 프로토콜이 TSP 프로토콜 이다그런게 있어요13장요약ipv6 소개햇죠주소의 길이 128비트 쥰내길다 거의무한적으로 쓸 수 있다오히려 너무 길어서 문제가 되죠헤더가 단순화되어 있다40바이트 길이는 길지만다른 기능들은 next header 로 빼서이러면 장점이 뭐에요라우터가 읽을 정보가 적다보안 밒 서비스 추가되어 있다전달하기 위해서는 6in4 6to4 이런것들을 통해서 전달할 수이 ㅅ따6to4 는 터널링이라고보기는 어렵고 (핵심용어 슬라이드)애니캐스트 모두에게 보내긴 하지만, 받는 애만 받는다흐름 레벨 (flow lable)처리량의 특별한 처리 혹은 특별한 수준 (예를 들어 실시간 같으)을 명시하는 IPv6 데이터그램에 대하 지정정보 페이로드DAD가 ARP 라고 볼수 도 있다물론 ip6에는 ARP 가 없다MTU가 뭐였죠??? MTUMTU보다 크면 조각내서 보낸다고 했죠ㅈ각 (영어)가 4 6 다른점이 뭐랫어요4는 자를 수 잇는 주체가 소수스 호스트 혹은 라우터6에서는 소스 호스트만 할 수 있따만약 잘라서 보냇는데 너무 커라우터가 전달 못해그러면 전체 경로를 봤을 때 최소 MTU를 찾아서 거기에 맞춰서 짤라 보낸요그게 경로 MTU소스 MTU가 1000이다 근데 경로 상 최소 MTU가 100이다그러면 100에맞춰 잘라줘야 한다는 거죠그게 경로 MTU//14장클래식 도구네트워크가 동작을 안해요그러면 어떤 유틸리티 도구를 써서 해결할ㅈ지도구 소개별 설명할 내용은 없다 14장은텔넷은 암호화 없다사용하지 마라대신 보안 쉘 (암호화된) 을 써라여러분들 푸티그런 것들이 쉘을 이용한것보통이제 문제가 생겼을 때 어떤 문제가 생격ㅆ는데 4가지로 분류 가능일반적으로 4가지 프로토콜 자애 또는 ㅏ잘못된 구성IP할당을 받아야하는데 못받았다거나많이 쓰는 유틸리티가 핑핑 가지고 도메인이름이나 서버주소를 가지고 핑을 보내ㅕㅁㄴ정상적인 반응은 음답이 올 것케이블 제대로 연결되어있고~도메인 네밍 서비스가 제대로 작동한다거고상대방 서버 제대로 동작네트ㅝ크가 혼잡한 상태도 아니고ICMP 프로토콜 가지고 ping상태진단echoreqechoreply 정상적인 경우 reply 로 응답오류보고ipconfig 라던지ifconfig?arp ㄹ고 하는 것은캐시를 확인할때 이용ping엥 응답을 안하네예전에는 응답을 제대로 햇는데서버를 공격하기 이전에 정상적으로 작동하는지 확인하려고 해커가 ping을 보내는데그것때무에 응답을 안하는거에요“그런가”무튼 ing만 가지고는 다 확인할 수가 없다는 거죠자기 자신에게도 보낼수가 잇어요루프백 주소라고 햇죠 127.0.0.1여기에 pingping 127.0.0.1자기자신에 대해서 요청 보내고 응답 보내게게이트웨이 주소(라우터 주소)라우터에게도 ping을 보낼 ㅅ ㅟㅆ는거죠ping 라우터주소그래서 어느정도는네트워크가 정상적으로 작동하고 있는지 확인가능구성정보 유틸리티 ipconfig (윈도우)유닉스나 리숙스 시스템은 ifconfig (인터페이스 콘피그)arp는 arp가 젣ㅐ돌 동작하지 안흔다면 이것도 문제ip주소에 대으된는 mac주소를 받아와야하ㅡㄴ넫없으면 프레임을 ㅁ나들어 보낼 수 없겟죠arp -aarp 캐시에 있는 내용들을 다 볼 수 잇다보안과목을 들엇으면배월을 수도 잇는데arp의 경우에는공격자들이이제같은 네트워크의 ㄱ오격ㄱ자가특정 서버로 가는ㄴ프레임들을 자기가 받기위해서 arp테이블을 위조are requset를 받으면arp reply도 보내게 되어 있느데req없이 replt 전송replt 받으면 강제로 arp 테이블을 갱신한단 말이에요맥 주소를 자기걸로 바꾼단 말이죠그러면 패킷을 자기가 받을 수 잇겟죠그래서 이걸 고정시킬 수강 잇어요arp -s해가지고ip주소를 가지고 mac 주소를 강제로 고정시켜두는것어느정도 공격을 막을 수 있다그것이 arp 유틸리티다 회선문제회선이 끊겻다거나pingㅇ이 동작을 안하면 직접 확인할 수 밖에네트워크 관리자에게 문의을 해봐야겟죠 케이블 문제 같은건허브나 스이치나 랜 카드 가 정상적으로 동작하려면램프 (초록색)이 켜져잇어야하는데안켜잇거나 빨간새ㄱ이면 문제가 이슨거겟ㅅ죠이렇게 직접 확인ㄴ해봐야하는ㄱ어에요 잘못된 이름 확인도메인 이름을 썻ㅆ느데, 잘못된 이름없는 이름에 접근한다던지DNS 서버에 문제가 생기면이건 유저가 해결할 수잇는 문제는 아니넥숒ㄱ관리자가 해결해야그럼 문제가 잇는지는 어덯게 아냐ping을 보내보는ㄴ거져ㅛping 이 동작하지않으면 관리자에게 문의해서 조치를 취해야겟죠 과도한 트래픽네트어크가 혼잡한 경우접속이 느린ㄱㅇ우tracert (traceroute 리눅스 유닉스)패킷이 어떤 라우터를 거쳐서 전달되는지 경로를ㅇ ㅏㄹ 수 있다tracert 주소주소까지 가는데 어떤 라우터를 거져서 가는지요청시간이 만료되엇다고 하는건이런 응답은 알우터가 주는건데라우터가 방화벽 ㄸ문에 안주면 만료가 되ㅇ다고 뜨는건고라우터들이 어떤 메세지를 보내오는거냐여러분 ttl 알죠ttl이 라우터를 거칠때마다 하나식감소하는 값이죠그러다 0이되면 더 이상 라우팅 하지 않고소스호스트로 오류보고, 에러 메세지를 ㅗ내는데이것도 이게 icmp을 가지고 구현을 한거에요ttl값을 1로 해가지고 보낸거네요응답이오면 하나 증가시켜서 보내고0이되면 다시 응답이 오고기록하고ttl++이러다보면 쵲ㅇ 목적지 까지 가겟죠이러면 어떤 라우터를 거쳐 가는 지 확일할 수 잇겟죠여기서 근데 주의데이터그램이 항상 같은 경로로 가는건아니죠글로가는 패킷이 무조건 이 경로로 간다고 보장할수는 없다무튼 경로를 추적할 때 이용할 수 있는 프로그램이 이다그담에 이제route라우팅 테이블 확인이건 라우터만 가지고 잇느게 아니라라우팅 호스트들도 가지고 잇어요목적지 주소를 보고서인터넷에 잇으면 라우터를 거치고 가는거고네트워크 내에 있으면 ~~ㄴ그래서 가지고 잇어야한는거에요쳐보면경로를 추가할 수도 잇고삭제할 수도 잇고ㅅㄱ제할 수도 잇고route print0.0.0.0 으로 되어 ㅇ시는거는디폴트루트무튼네트워크에잇는건 인터페이스에아닌것들은 게이트웨이를 토앻서 내보낸다netstat현재 이 컴퓨ㅓ가 어떤 연결을 가지고 이는지tcp 연결상태 뭐 이런것들ip tcp udp 및 icmp 프로토콜과 관련된 통계 및 네트ㅝ크 연결상태를 표시쳐보면tcp 는 상태를 가지고 있죠 설명하지는 않앗지만무튼 ㅇ녀결상태를 볼 수 잇다netstat -s통계를 보려면명령어 다름에 ? 치면도움말을 보여주는 거야//텔넷이거는이제머ㅜ 연결구성확인 진단이 아니라연결을 위한 응용계층 프로토콜텔넷은 예쩐에 많이 씀터미널 네트워크의 약자원격 로그인원격에 이슨 서버에 접속해서클라이언트는 터널로 써서 접속하는 걸 구현해노흥ㄴ 프로토콜프로그램도 이름이 또같애윈도우에도 잇고 리눅스 유닉스엗 ㅗ 똑같은 이름으로 잇다가상 터미널 서비스라는 것은 무엇이냐일단 PC갑ㅌ은 경우 며령을 입력함면입력한것들이 컴퓨터에서 실행되도 결과도 모니터에서 나오는데텔넷을 이용해서 보낼경우실행하는 하는 게 서버에서 실행되는 ㄱ서서버에서 실행이 되는 거고실행결과를 보내서클라이언트가 받아서 보기만 하는것컴퓨터가 터미널로서의 역할을 하는것명령을 보내기만 하고서버가 명령을 받아서 실행하고결과를 받아서 출력만 하는것telnet 이름/주소기본저그올 서버에 접속할 때 id.pw 같은 걸로 인증를 받아야해요근데 보안에 취약하기 땜누네보통 막아놧어요 텔넷을쳐보면암호화되지 안흥ㄴ 상태로 서버에 보내기 때문에해킹이 같은 네트워크에 잇음녀 보고 다확일할 수가 잇어요권한이 ㅇ벗는 해커가 id pw 을 가지고서버에 접속을 해서 어ㄸ너 뭔 조작을 할 수 있겟죠그래서 텔넷을 사용을 권장하지 않음대신 ssh 을 대체하여 사용하도록 하고 있다secure shell 이것도 같은 이름으 프로그램이 있어요ssh 을 가지고 구현한 여러 으용ㅇ프로그램들이 이고 putty 이런것도 이어요원격 연결같은 결우에는 텔넷말고도 많안에ㅛr 로 시작 (유닉스 리구스 맥 같은ㅇ 경우에은 이런것들 사용하기도 해요, 윈도우는 없음)r 유틸리티ssh : rlogin rsh 및 텔넷을 대체하는 원격 쉘 프로그ㅐㅁ )이것도 보안이 떨어지느 거들이라 대체해서)scp : rcp 대체sftp : ftp 대ㅔs 붙어이슨것들이 대부분 ssh을 써서 보안성에 뭐시꺵한//네트워크 관리따로 설명안할거에요단순 망 관리 프로토콜 SSMP원격 모니터링 RMON 프로토콜 이용간단하게 보며SNMP네트워크 모니터 : 관리자에이전트 매니저?에이전트 : 관리대상에이전트가 서버 역할을 하흔것요청을 받고 응답을 하는 역할이인까네트워크가 클라 역할을 하는 ㄱ서상태를 알고 싶다상태정보를 요청하면보내오고상태정보를 수정하면성공여부를 보내오고이런식으로 동ㅈ가장치들을 관리하려면 식별할 수잇는 식별자가 필요한데이름공간을 가지고잇음이를 관리 목적으로 사용하기 때문에관리 정보 베이스 MIB, Management Information Base라고 함//15장클래식 서비스으용계층 프로토콜인터넷 초창기부터 ㅍ표준화되서 사용되어 오고 이슨ㄴ 프로토콜= 클래식 서비스HTTP, 이메일은 할 말이 많아서 따로여기서 다루는 건FTP, 단순 파일 전송 프로토콜파일 및 프린트 서비스경량 디렉ㅌ리 접근 프로토콜, (전화번호부보면 이름 전화번호 등 ㅣㅇ 잇는 것처럼 구성요소에 대한 정보를 관리할 목저긍로 사용하면 프로토콜)원격 제어 ()FTP파일전달전송계층 프로토콜로 TCP사용특이하게 2개의연결을 사용한다어떤 차이가 있느냐연결하나는 제어 연결용컨트로 연결용 포트또 다른 하나는 데이터 전송데이터 연결용 포트일단 접속을 한단마리에요?이때ㅡㄴ 제어 연결용 포트를 통해서ls 디렉토리를 보기위한 읻ㅇ하기위한 cd 이런것들이 제어 명령cd 는 이제 디렉토리를 바꾸는거죠바꾸면 성공여부 같은걸 보내는 데 그걸 이제 제어 연결용포트로ls 명령ls 에서 찾아온 디렉토리 파일 목록은 데이타데이타 전송 포트를 통해 전송제어는 로그인하고 로그아웃할때 까지 유지데이터는 보낼때 연결 설정하고(열고) 다 보내면 (닫고)끊고20번 21번 이 포트번호는 서버에서 쓰는 포트번호근데 클라이언트에게도 포트번호 필요 쓰려면그래서 그 포트 번호는 클라이언트가 서버에게 포트 번호를 아렬줘야 함port 하는 명령어가 잇어요이걸 이용해서 제어연결 설정이 되면어떤 포트번호를 통해 연결을 시도해라라고 전달해줘야해요데이터는 보낼때 마다 보내주고 끊고일반적으로 바이너리, ASCII 파일 사용텍스트면 ASCII응용프로그램 이미지 같은건 바이너리//TFTP단순 파일 전송 프로토콜 UDP 사용로그인할 필요 없이 간단히 사용할 수 있는임베디드 시스테메 주로 쓰이는//파일 및 프린트 서비스원격 파일에 젖ㅂ글ㄹ할 때 쓰는 서비스들NFS 네트워크 파일 시스템:유닉스리누긋 컴에서 사용되는 프로토콜예쩐에는 UDP 썻는데 지금은 TCP원격 파일과 디렉터리르 사용하려면 마우팅이라는 프로세스걸쳐야공용이넡넷 파일시스템/서버메시지블록(CIFS/SMB): 윈도의 클라이어늩에 원격파일접근을제공하ㅡㄴ데사용하는프ㅗㄹ토콜기능은 똑같애요CIFS는 SMB를 표준화한 버전이라고 보면돼요//LDAP 경량 디렉터리 접근프로토콜무선 LAn에 대한 설명으로 틀린것 ~ 표준 기본 구성 단위를 Piconet이라고 한다 = 블루트수의 기본구성단위, 답은 DSS Access Point는 이더넷 스위치에 대응 통신 시나리오에 따라 4개의 주소IP를 보완하여 단말이 이동 중에서 지속저으올 통신을 가능학 ㅔ하는 프로토콜모바일 IP자원 레코드의 유영에 대한 설명SOA 존에 대한 책임 이름 서버 지정MX 메일 서버 지정A IPv4 주소 지정CNAME 도메인에 대한 company 이름 지정 X, 진짜 이름호스트 구성 정보가 아닌것은?DHCP 서버주소 =DNS 서버 주소IP 주소게이트웨이 주소틀린것은?제로 구성은 DHCP를 기반으로 한 동적구성 없이(O) 인터넷에 컴퓨터를 연결할 수 있게 한다(X) = 로컬만 가능네트워크 연결 장치에는 브릿지, 허브, 스위치 등이 있다DNS 이름 해석 방법에는 반복적인, 재귀적인 방법DNSSEC은 DNS 데이터를 검증하기 위한 시스템을 제공방화벽에 대한 설명 틀린것 외부침입자가 내부 ㅔㄴ트워크 접근 막으 수 잇다 내부 “ 외부 “ 일반적으로 외부 네트워크와 내부네트워크 사이에 배치 주로 물리주소를 필터링하여 기능을 수행한다 = 일반적으로 물리주소가 아니라 포트 번호 X?는 내부 통신에는 사설주소를 사용하고 외부 통신에는 범용 의 인터넷 주소를 사용하 ㄹ수 있게 = NATIPv6에 대한 설명 중 트린것주소길이 128비트flow label은 흐름 제어 용도로 사용한다 = 자원 예약을 용도로‘다음 헤더’ 필ㄹ드는 ipv4의 ‘프로토콜’ 필드에 대으ㅡㅇipv6는 icmp 프로토콜 기능을 포함 = 이것도 틀림다음 유틸리티중 ICMP 를 이용하여 구현한 것은ARPNetsTATTELNETTraceroute =최상위 도메인의 예 5가지com kr net org edu 등로컬및원격 파일들을 동일ㄹ한 인터페이스 내에서 편리하게 접근할 수 있게하는 서비스 가 아닌것 CIFS NFS LDAP = SMB다음 중 원격 시스템에 로그인할 때 사용할 수 있는 유틸리ㅏ 아닌 것은? rlogin route = telnet sshFTP 클라이언트가 FTP 서버에 접속한 후 디렉터리 변경 명령 CWD 을 실행한 후 파일 목록을 서버에 요청 LIST하여 받았다 이후 파일 목록 중한 개의 파일을 ㅓㄴ택하여 다운로드 한 후 어버와의 접속을 종료하였다. 이 과정에서 몇 개의 TCP 연결 설정이 이루어지는가3다음 그림과 같이 구성되어 있는 네트워크에서 노드 A에서 노드 D로의 프레임을 스위치가 수신했는데 스위칭 테이블에 노드 D에 대한 정보가 없는 경우 수신한 프레임을 어떻게 처리하는가브로드캐스트다음 중 목적지 IP주소로 브로드캐스트용 IP주소가 사용되는 것은 무엇인가 ARP Request DHCP Request = ICMP Request DNS RequestCSMA/CA 메커니즘에 대한 설명으로 가장 적절한 것은 유선 LAN에서 사용할 수 있는 매체접근제어 프로토콜이다 = 무선 IEEE802.3 표준으로 규정도어잇다 = 4? BSS를 구성하기 위해 사용되는 프로토코링다 = 매체접근제어라 앙니다 RTS와 CTS를 이용하영 충돌을 회피하는 프로토콜이다 = OIPv6의 주소 자동 구성 절차를 기술 인터페이스 식별자를 만든다 이걸 이용해서 링크로컬 IP주소 생성 주소가 이미 다른 네트워크가 사용하고 있을 수 있으므로 확인해야함 = Dupllicate Address Detection 사용중이지 않다면 서브넷 식별자와 라우트 프렉티스를 받아야함, Router Sollicitation/Router Advertisement Global IP 주소 생성우리 힉과의 컴푸터에서 www.amazon.cpm의 주소를 학교의 DNS 서버로 질의하엿다. 학교의 DNS 서버가 해당 주소를 캐시로 가지고 있지 않은 경우 반족적인 이름 해석으로 주소를 얻어오는 과정에 대해 기술Local DNS Server 가 안가지고 있으면Com Server에게 질의를 전달Com Server가 알면 (Amazon.com 주소를 회신)반복재귀는 Local DNS Server -&amp;gt; Com Server -&amp;gt; Amazon.com Server16장인터넷 자세히 살펴보기인터넷의 구조오늘 날의 인터넷은 공용 및 사설 네트워크의 다계층 시스템이다ISPISP 연결 Backbones~URI와 URL 인터넷은 웹 문서 등의 리소스를 요청하는 클라ㅣ언트 시스템들과 리소스를 제공한ㄴ 서버 시스템들의 거대한 집합체 인터넷 상의 리소스에 대한 접근 방법 및 그 위치를 규정하기 위한 표준이 필요함 -&amp;gt; Uniform Resoutce Location (URL) URL은 URI (“ “ Identifier)의 한 형식 URL 형식 scheme : // ~~~~~~ 스키마는 자원 접근 시 사용할 프로토콜 - file ftp http https idap mailto telnet nfs 등 URL 사용 예일반적인 형식으로 URL의 권한 부분은 다음과 같은//user:password@host:port_number일부 예는 다음과 같은//www.whitehouse.gov//tommy~~URL 구성 요소들처리 구성 요소는 사람이 입력하거ㅏ 해석하는 일이 드물지만, 종종 스크립트 및 웹 어플리케이션~~URNUniform Resource Name자원의 위치에 대한 정보를 제공하지 않고 단순히 시겹하기 위한 용도로 사용URN의 구조 urn:: 예 urn:isbn:123456789 urn:ietf:rfc:264817장 HTTP HTML 및 월드 와이드 맵월드 와이드 웹은 무엇인가Web의 개념은 유럽원자핵연구소 CERN에 근무하던 Tim Berners-Lee가 유럽 내 다른 장소에 있는 연구자들이 서로의 연구 자료에 접근할 수 있도록 하기 위해 1989년 처음 제안WWW에 사용된 프로토콜은 하이퍼 텍스트 전송 프로토콜 HTTP서버에서 클라이언트로 전달된 데이터는 텍스트, 이미지, 주소 및 서식 코드의 덩어리로, 하이퍼텍스트 마크업 언어 (HTML)를 통해 통합된 문서로 렌더링 하이퍼 텍스트 Hyper Text: 텍스트의 문서, 이미지 및 다른 요로소의 링크를 표현하는 문서 마크업 언어 Markup : 태그등을 이용하여 문서나 데이터의 구조를 명기하는 언어HTTP전송계층 프로토콜로 TCP요청 Request 응답 Response 메시지로 구성HTTP는 WellKnown port 80을 사용브라우저 대부분 현재 HTTP/2 지원하지만 인터넷은 여전히 HTTP/1.1 버전이 많음HTTP 구성~HTTP 요청 메소드들~HTTP 응답 메시지의 상태 라인~상태 코드들HTTP 헤더 필드의 예~스크립팅컴파일 과정 없이 실행될 수 있는 명령어의 집합웹 페이지는 사용자 입력및 백엔드 데이터에대한 응답으로 생성되는 객체 스크립트 및 기계 생성 코드의 모음HTML을 사용하면 페이지가 전송될때 데이터 또는 추가 ~서버 사이드 스크립팅~클라이언트 사이드 스크립팅~웹브라우저시맨틱 웹요약HTTP동적 문서/웹 페이지 를 사용하면서 서버 쪽에 여러 기술들이 도입되어 사용최근 HTML 개선해서 HTML5 이용하고 있음18장 생략19장 암호화 , 이중에서 19.2 추적사용자의 행동을 추적함으로써 인터넷 회사는 ㅏ용자 혹은 적어도 사용자의 브라우저를 식벽~브라우저가 웹 사이트와 지속적으로 관계를 유지하는 가장 중요한 방법은 부라우저 쿠키 또는 HTTP 쿠키를 통해 토ㅇ신하는 것쿠키는 클라이언트를 식별하고 설명하는 데 사용하는 웹 서버가 클라이언트 컴퓨터에 저장한 정보의 일부쿠키는 웹 서버와 브라우저 간 일반적인 통신의 일부로, HTTP를 통해 간단한 문자열 형태로 전송전통적으로 쿠키는 클라이언트 컴퓨터에 작은 텍스트 파일을 저장파폭과 크롬 같은 최신 브라우저는 더 효율적으로 접근하기위한 SQLite에 쿠키를 저장쿠키는 여러 형대가 있지만, 가장 기본적인 유형은 다음과 같음 세션 쿠키 메모리에 존재하고 세션 기간 동안만 남아 있음, 방문자가 사이트의 여러 다른 페이지를 클릭하는 동안 서버가 지속해서 다루고자 하는 설정을 정의 영구 쿠키 세션 동안 살아있고 지정된 말료 날짜까지 남아 있는 추적 쿠키라고도 하며 세션 쿠키와 함께 사용되는 모든 설정을 포함하지만 브라우저와 사이트 과저 상호장ㄱ용을 영구적으로 기록하기 위해 현재 세션보다 오래 기간 저장 서드 파티 쿠키~쿠키 관리 및 제어, 브라우저~추적 스크립트 (JS로 만드는)~추적 픽셀~추적 토큰~추적 금지~20장이메일인터넷 초차기나온 프로토콜주로 주고 바든 내용이 텍스트 (아스키코드)텍스ㅡ 기반의 데이터를 주고 받으 ㄹ수 있게 만들어진 ㅡㅍ로토콜이후 다양한 형식의 데이터 (멀티미디어데이터)를 주고 받게 되면서, 길이를 확장하게 됨이러한 첨부 파일은 일반적으로 다목적 인터넷 우편 확장 MIME, Multipurpose Internet Mail Extension이메일 형식~MIME일반적인 시나리오 (옛날)이메일 구성요소SMTPBase64 Encoding메일 검색웹 메일스팸요약두 종류의 프로토콜 사용한다SMTP, , | POP3, ICMP?,SMTP 기본적으로 텍스트만 전송 가능MIME을 추가적으로 붙여서 사용하고 잇다MINE은 메일뿐만아니라 다른 응용계층 프로토콜에서도 사용되고 잇다22장 클라우드 서비스세 종류SAASISPAS🗿 시스템 프로그래밍 타자gcc -o temp.c 실행 가능 목적 파일 (실행파일, object, 링크까지 끝난)gcc -c temp.c 재배치 가능 목적 파일 (목적파일, 링크는 없는 그냥 목적 파일)Concurrent Process 병렬 프로세스어셈블리 특성 : 연산레지스터나 메모리 데이터로 산술함수 수행ALU에서 연산을 하려면 데이터 필요레지스터에 있으면 레지스터에서메모리 데이터에 있으면 메모리 데이터에서 데이터를 읽어 산술함수 수행메모리와 레지스터 사이에 데이터 전송 (버스를 통해) Memory to CPU, 메모리에서 레지스터로 데이터 전송 (Load) CPU to Memory, 레지스터 데이터를 메모리에 저장 (Store)전송 제어 (Transfer control) 프로시저까지 또는 프로시저에서 무조건 점프, 무조건 분기 like goto (to/from procedures) 조건 분기 if else (conditional branch)요즘 프로그래밍 언어스트럭쳐드 프로그래밍goto가 없음근데 어셈블리는 있다목적 코드 생성Linux, gcc -Og -c sum.c-c 옵션as에 의한 어셈블까지만 수행링크는 미수행sum.o 파일 산출14바이트 안에 sum의 목적코드 내장 (해보니까 14바이트라는 뜻)-Og최적화 명령어목적코드슬라이드 참고 - Code for sumstore, 이전에 봤던 어셈블리 코드를 머신코드로 바꾼 것시작 어드레스부터 1++ 바이트만큼 떨어진 위치에 각각 코드가 위치한다어셈블러 (Assembler).s를 .o로 번역명령어 각각을 이진 인코딩거의 완벽한 실행 코드다른 파일들과의 코드 연결 (linkages)은 빠짐링커 (Linker)파일들 사이의 참조를 해결정적 런타임 라이브러리와 조합 (i.e. code for malloc, printf)일부 라이브러리들은 동적으로 연결 (Dynamically Linked), 프로그램 실행 시 링킹 발생sso인증 관련한바디 페이로드 차이??메시지 타입을 정의할 ㄸ ㅐ바이트 혹은 비트 단위로 필드를 다눠서 할 수도 잇고HTTP는 요처아이낳고 헤더부분하고 가 다르게 들어가잖아요?문자열 스페이스두고 URL 들어가고 버전 메소드 URL ㅣㅇ런식으로무튼 2가지 방법이 있다비트/바이트 방법텍스트 방법 (http)대부분은 http처럼 텍스트 기반으로 만들고 있따경랑 디렉터리 접근 프로토롤LDAP전화번호부 책LDAP은 전화번호부라고 보면된다네트워크에 자원이 많이 있을텐데 이를 효율적으로 관리하기 위한표준으로도 나옴전기 통신 (전화와 관련된) 글너 표준을 만든 단체 ITU에서 만든 표준잉 X.500X.500 을 기바느올 만들어진프포토콜인 LDAPFIND PRINT 여러가지 하드웨어 리소스들이 있을 텐데 어떻게 관리할것인지개별적인 자원 식별자 들 (이름 부여)하고 그담에 그런 개별 자원에 접근할 때 어떤 권한을 가지고 접그낳ㄹ ㅜㅅ있는지그런 자우너을 관리하는 관리자가 있다면 그러ㅁㄴ 관리자 ~ 까지 할 수 ㅣㅇ씩 헺는MS에서도 OpenLDAP 마늠윈도우에도 잇으ㅁ무튼 파일 식별하려면 이름이 잇어야하잖아요DNS처ㄻ 계층적으로 이름 공간을 구성해서 사용엔트리가 개별 자원 = 고유 식별 이름노드 별로 노드에 할당된ㄴ드를 연결해서고유한 이름을 만들게 되는데보게 되ㅣ면dc = 도메인 컴포넌트ou = 조직 단위dn =LDAP URL 다음시간에 설명할텐데일반적으로 사용할 일은 없다구체적인 내용은 기억하지 않아도되지만LDAP이 마치 자원을 전화번호부처럼 써서 효율적으로 쓰기위한 프로토콜이다라고 생각원격 제어팀 뷰어 같은원격이 떨어져있는 사람의 컴을 제어하기 위한원격 제어 그냥 이런 기능이 있따 정도로 기억*dest = t;movq %rax, (%rbs)0x40059e: 48 89 03C Codedest가 지정한 곳에 값 t를 저장Assembly Code 8 바이트 값을 메모리로 이동 x86-64 용어로 Quad wordsOperandst: 레지스터 %raxdest: 레지스터 %rbx*dest: 메모리 M[%rbx] r = registerObject Code 3 바이트 명령주소 0x40059e에 저장됨(범용 레지스터)64bit 16개32bit 8개실행 가능 파일 생성실행파일 생성하려면 링커 필요One object file must contain mainCombines with static run-time livraries (e.g., printf)Some libraries are dynamically linked (i.e. at execution)Obtain with command C codegcc -Og -o prog main.c sum.c목적코드의 역 어셈블DisassembledDisassemblerobjdump -d sum.o목적코드 조사에 유용한 도구일련의 명령들 비트 패턴을 분석어셈블리 코드와 유사한 해석 산출a.out(complete executable) 이나 .o파일을 실행할 수 있음역어셈블의 다른 방법Within gdb Debuggergdb sumstoredisassemble sumstoreDisassemble procedurex/14xb sumstoreExamine the 14 bytes starting at sumstore역어셈블 할 수 있는 것은?실행코드로 번역될 수 있는 것역어셈블리는 바이트를 조사하고 어셈블리 소스를 재구성드라이브보면 Programs File, Programs File (x86) 두 개64bit 운영체제에서 32bit도 돌아감 호환성C 대부분 32bit 컴파일러32bit 에서는 %r– 가 아니라 %e–Reverse engineeering forbidden by MS End User License Agrement데이터 형식“word” :인텔에서 16비트 데이터 형식 (“word” 의 기원)32bit : double word64bit : quad wordsGAS (GNU 어셈블러)에서 “/”을 붙이는 데 문제 없음FP도 “/”을 붙임왜냐하면, FP(부동소수점)는 정수와 다른 연산과 레지스터를 가짐 *dest = t;movq %rax, (%rbs)0x40059e: 48 89 03C Codedest가 지정한 곳에 값 t를 저장Assembly Code 8 바이트 값을 메모리로 이동 x86-64 용어로 Quad wordsOperandst: 레지스터 %raxdest: 레지스터 %rbx*dest: 메모리 M[%rbx] r = registerObject Code 3 바이트 명령주소 0x40059e에 저장됨(범용 레지스터)64bit 16개32bit 8개실행 가능 파일 생성실행파일 생성하려면 링커 필요One object file must contain mainCombines with static run-time livraries (e.g., printf)Some libraries are dynamically linked (i.e. at execution)Obtain with command C codegcc -Og -o prog main.c sum.c목적코드의 역 어셈블DisassembledDisassemblerobjdump -d sum.o목적코드 조사에 유용한 도구일련의 명령들 비트 패턴을 분석어셈블리 코드와 유사한 해석 산출a.out(complete executable) 이나 .o파일을 실행할 수 있음역어셈블의 다른 방법Within gdb Debuggergdb sumstoredisassemble sumstoreDisassemble procedurex/14xb sumstoreExamine the 14 bytes starting at sumstore역어셈블 할 수 있는 것은?실행코드로 번역될 수 있는 것역어셈블리는 바이트를 조사하고 어셈블리 소스를 재구성드라이브보면 Programs File, Programs File (x86) 두 개64bit 운영체제에서 32bit도 돌아감 호환성C 대부분 32bit 컴파일러32bit 에서는 %r– 가 아니라 %e–Reverse engineeering forbidden by MS End User License Agrement데이터 형식“word” :인텔에서 16비트 데이터 형식 (“word” 의 기원)32bit : double word64bit : quad wordsGAS (GNU 어셈블러)에서 “/”을 붙이는 데 문제 없음FP도 “/”을 붙임왜냐하면, FP(부동소수점)는 정수와 다른 연산과 레지스터를 가짐간단한 메모리 주소 모드 참고 Reg[R] : 레지스터 R 안의 값 Mem[M] : 메모리 M 안의 값값 표준모드 (R) Mem[Reg[R]] 레지스터 R은 메모리의 주소를 나타냄 C의 포인터 역참조 (Dereferencing) movq (%rcx), %rax 변위모드 D(R) Mem[Reg[R]+D] 레지스터 R은 메모리 구역의 시작 주소를 나타냄 상수 변위 D는 오프셋을 나타냄 movq 8(%rbp), %rdx 오퍼랜드 형태🗿 정보 보안 타자qhdkswjsfir보안전략?키는 사실 숫자다대부분은 숫자다결국은 상대방에게 키를 (숫자를) 어떻게 주느냐상대방의 얼굴도 모른다 그저 연결되어 있다그 방법 공개키 (암호화/복호화) 를 통해 임의의 대칭키 (세션키)를 주고 받는다 이후 통신에는 대칭키 (세션키) 를 이용해 통신을 한다세션? 통신에서는 사용자와 컴퓨터 또는 두 대의 컴퓨터 간의 활성화된 접속을 의미 프로그램 사물과 관련해서 한 응용프로그램의 가동을 시작해서 종료할 때까지 시간을 가리킨다세션 : 세션키 + 사용자 정보가 서버에 저장/ 클라이언트에는 세션키만 저장한다 저장 : 세션 생성 후 서버의 메모리에 저장한다 만료시점 : 세션은 클라이언트 측에서 로그아웃 하거나 반응이 없을 경우에만 무효화되므로 정확한쿠키 :세션 , 쿠키는 본인이 나름 대로 정리를 해주십쇼패스워드 보안의 4가지 인증 방법IRIS 홍체?type1 Something You Know 지시type2 Something You Have 소유type3 Sonething You Are 존재세상이 좋은 패스워드는 없다잘못된 표현이다~대표적인 보안 도구 - 방화벽https://going-to-end.tistory.com/entry/%EC%95%94%ED%98%B8-%EB%B6%84%EC%84%9D-%EC%95%94%ED%98%B8%EB%AC%B8-%EB%8B%A8%EB%8F%85-%EA%B3%B5%EA%B2%A9-%EA%B8%B0%EC%A7%80-%ED%8F%89%EB%AC%B8-%EA%B3%B5%EA%B2%A9-%EC%84%A0%ED%83%9D-%ED%8F%89%EB%AC%B8-%EA%B3%B5%EA%B2%A9-%EC%84%A0%ED%83%9D-%EC%95%94%ED%98%B8%EB%AC%B8-%EA%B3%B5%EA%B2%A9끝까지간다암호 분석 (암호문 단독 공격, 기지 평문 공격, 선택 평문 공격, 선택 암호문 공격)이전 글에서 암호학에 대한 개념에 대해 간단히 알아봤습니다. 이번 시간에는 암호문이 어떻게 해독되는지를 알아보려 합니다. 암호화 과정에서 평문, 암호키, 암호문 이 3가지가 유출되었을 때 발생할 수 있는..암호 분석 (암호문 단독 공격, 기지 평문 공격, 선택 평문 공격, 선택 암호문 공격)왜 공격자에게 정보시스템이 해킹 당할까?ㄴ 호기심을 유발해서, 가치 있는 것이 있어서완벽한(?) 정보 시스템은 존재할까?ip가 걸려있는 모든 노드 -&amp;gt; 정보 시스템ㄴ 없다해커가 좋아하는 정보 시스템 환경느?ㄴ 무료, 업데이트 잘 안하는해커가 좋아하는 공격은 무엇일까? (노랑)ㄴ어떻게 하면 나의 정보시스템은 안전할까?나의 개인정보는 어디까지 활용에 동의할까?우리나라만 약관을 안읽는다ㄴ&amp;gt; ActiveX 때문에해커가 좋아하는 공격선택된 평문 공격 Chosen Plantext Attack- &amp;gt; 중요하다 시험은 안내! 암호문 단독공격 CipherText Only Attack 기지 평문 공격 Known Plaintext Attack 선택된 평문 공격 Chosen Plaintext Attack 선택 암호문 공격 Chosen Ciphertexxt Attack재전송 공격 Replay Attack무차별 대입 공격 ?? Force Attack Bliind Attack2.3.DBDB 접근 제어OS 보안IPS IDS- 보초병이 없엉ㅅCCTV 있고 보초병도 있고, CCTV 역할은 계속 기록, 보초병은 잡아가고방화벽신뢰영역 private network비신뢰영역 (공중망) public network패킷 드랍 어텍 리젝트구분 경찰O 경찰X도둑O O 실수도둑X 실수 옳은결정시험공부 O X출제 O X탐지프로그램작동 OX해킹 진행중, 해킹(칩입자)없음DNSTCP SSLIP ICMP ARP IPSec-DNS 로 IP 얻어오고허점 2가지 코앞에서 Browser 가 쿼리 (요청)을 했을 때 응답을 받을 때 조작하는 방법 DNS 서버를 조작, 데이터를 조작 (DNS 포이즈닝 어택 공격) TCP 프로토콜, 3 Hand Shaking 을 통해 연결허점 2가지 SYN 설정 정보를 줬을 때, 들여다보면 INS IP MAC 주소가 있음,IP 목적지 조작INS라는 번호 조작 SSL 레이어?시큐어 소켓 레이어암호화 통신을 도와준다스트립핑 (벗긴다)누가 레이어를 벗기고 들여답본다 암호화 통신이 되고 있을 때 그냥 통째로 가져와서 하이재킹 훔켜간다 암호를 조작 (암호를 해석하지 않고) ISO 7계층 이론적인 실제로는 4계층TCP ICMP IP ARP Protocol 공부다 허점이 있다, 해커가 이용한다방화벽이 3~4계층 사이에 설정이 될 것-IP1983 1월 공식 통신 프로토콜다양한 보안 위험을 야기하며 침투 및 도용에 취약폭넓게 사용 (예측 못함, 32비트, 보안)비신뢰성, 비연결지향 데이터그램 프로토콜TCP 신뢰성있는 연결지향성 프로토콜, 오류처리, 재전송 오류 복구, TCP 헤더에 붙는 정보가 많음UDP 비신뢰성 비연결성 프로토콜, UDP 헤더는 간단한 구조 호스트 이름 &amp;lt;–&amp;gt; IP 주소네트워크 (이름)IP 주소 -&amp;gt; IP Protocol은 Host를 구분하기 위하여MAC 주소 -&amp;gt; 데이터 링크 계층에서 LAN 카드 별로 부여Port 번호 -&amp;gt; 전송 계층을 수행하는 TCP에서는 Host에서 수행되는 네트워크 프로세스마다 별도 관리를 위해TPC HTTP DHCP SMTP SP안전성 확보 네트워크 계층 복잡한 절차ACK Time out Replay불안정성을 위해 구축한 안정성비신뢰성이며 비연결성이 IP를 보완해야 한다ICMP 1. IP상태오류 (원인) 정보 전달2, 진단 상황 #~~NMS : 취약점 해결사UDP FTP DNS DhCP SPIP의 꼭두각시유실될 수 있다Best Effort최선다해 보내지만 보장은 못한다최적 경로를 고려하지는 않는다IPLTE ATM Wifi DSL Ethernet SSL 크게 4가지핸드쉐이크 프로토콜Change specAsert RecordProtocol 사용자가 키보드를 통해서 모니터를 보면서 뭔가를 집어넣어 데이터어 나의 주인께서 데이터를보내시는 구나 너무커? 쪼갠다 압축한다무결성 데이터로 보내야한다 -&amp;gt; MAC, 암호화 시킨다, SSL 헤더붙이고TCP 에 보낸다TCP에서 또 헤더 붙인다네트워크로 넘어가면서 또 헤더 붙인다칼리 리눅스, wire sharkping 8.8.8.8 -tSYN Flooding 공격SSOProxy 두 가지 있다방화벽차이점방화벽과 Web방화벽과의 차이점STMP1023 이상으로 ~하면 된다 공격자가 4 in 2 out 을 이용한다 예를 들어 8000 (예약 4999) 를 이용한다 따라서 2번을 제어할 필요가 있다근원지 정보를 기억한다1023 까지는 Known Port악성코드는 굉장히 짧다 “루프?”전자 메일의 송신과 수신을 중심으로 기본적인 패킷필터링 방화벽 구성을한다일반적을 inbound/outbound 정책과 ACL(Access Control List)를 이용한다밑에 1~5번을 이용해서 E-mail 수신을 위한 허용 규칙으로 써라규칙 방향 근원지주소 목적지주소 프로토콜 목적지포트 판단 비고[이메일 수신하는 용도]1 In외부 내부 TCP 25 허용 2 Out 내부 외부 TCP 1023(예약) 허용[이메일 송신하는 용도]3 Out 내부 외부 TCP 25 허용4 In 외부 내부 TCP 1023(예약) 허용5 Ether 모두 모두 모두 Any 거부A1 In 114.16.26.4 168.12.1.1 TCP 25 허용B2 Out 168 114 TCP 1023 허용C3 Out 168 114 TCP 25 허용D4 In 114 168 TCP 1023 허용이거 수신용인데 송신용으로 쓰겟다8080으로 들어오고 4999로 예약해서 쓰겠다 (규칙에는 문제가 없다)이거 수신용이라서 송신용으로 쓸 수 없는거야! 라고 할 수 없다E4 In 114 168 TCP 8080 허용F2 Out 168 114 TCP 4999(예약) 허용그래서 목적지주소가지고는 안되서 근원지 포트도 관리를 해야한다규칙 방향 근원지주소 목적지주소 프로토콜 근원지 포트 목적지포트 판단 비고[이메일 수신하는 용도]1 In외부 내부 TCP 1023 25 허용 2 Out 내부 외부 TCP 25 1023(예약) 허용[이메일 송신하는 용도]3 Out 내부 외부 TCP 1023 25 허용4 In 외부 내부 TCP 25 1023(예약) 허용5 Ether 모두 모두 모두 Any 거부E4 In 114 168 TCP 4999 8080F2 Out 168 114 TCP 8000 4999(예약)25번으로 들어와야하므로 안된다?E4 In 114 168 TCP 25 8080F3 Out 168 114 TCP 8000 25(예약)이러면 또 된다?개선된 설계 : 2단계 해커의 접근을 차단하기 위해 ACK 비트 정보를 패킷 필터링 조건에 포함시키는 한 단게 더 개선된 새로운 규칙을 만든다규칙 방향 근원지주소 목적지주소 프로토콜 근원지 포트 목적지포트 ACK set 판단 비고[이메일 수신하는 용도]1 In외부 내부 TCP 1023 25 Any 허용 2 Out 내부 외부 TCP 25 1023(예약) Yes 허용[이메일 송신하는 용도]3 Out 내부 외부 TCP 1023 25 Any 허용4 In 외부 내부 TCP 25 1023(예약) Yes 허용5 Ether 모두 모두 모두 Any Any 거부방화벽 / 웹 방화벽 개요방화벽은 뭐다원래패킷 헤더 중에서 IP 포트~ 가지고 검사하는데 신분증 검사밖에 안돼신분증을 위조했든 인척하든 주섰든 그 뒤쪽에 무기 들 수도 있고 주머니에 다른게 들어있을 수도 있고방화벽????네트워크에 돌아다니는 pecket이 정상인지 판단하며 의심스러운 행위를 하는 사용자를 검사Router를 이용한 방화벽 구현 -&amp;gt; Based on pecket header, header 검사Proxy를 이용한 방화벽 구현 -&amp;gt; Proxy(내부 ㅍ네트워크의 host에는 외부 네트워크의 응용 연결처럼 보이고 외부 네트워크에는 내부 네트워크의 응용연결처럼 보인다)?웹 방화벽은 80포트를 타고 유입되는 비정상적인 요소들을 구분하여 접근제어패킷이 아닌 사용자의 URL이 정상이고 올바른 요청인지를 판다웹 서비스 취약점을 이용한 공격을 차단 (웹 서ㅓ르 ㄹ보호)정보 유출 방직 정접근방지, 위변조 방지 등을 할 수 있다웹 방화벽 형태 Hardware TypeWeb 및 Application Server와 가까운 LAN 내 혹은 OS에 설치데이터 packet을 빠르게 추적하고 필터링할 수 있다 Software Type가상머신위에 설치VM을 실행하기위해 ~가 필요하다저비용 속도저하 Cloud TypeSaaS 형태로 제공 관리간편하다 ?방화벽 / IPS/웹 방화벽HTTP &amp;lt;——————————————-&amp;gt;IP port AccessDos AttackF/WWorm, Virus TCP/IP 단 공격 (S~~, 스니핑, 스푸핑핑, 플루딩)IPS웹 공격해킹XSSCSRFSQL 인젝션버퍼 오버플로우WAF(위로)서버 data (개인정보)WebApplication네트워크 패킷의 헤더를 검사한다인증되지 않은 통신을 차단한다접그ㄴ제어는 rult set을 통해 이루어진다네트어크 전송계층를 검사한다시스템에 대한 원치 않은 조작을 탐지한다오용 및 이상 및 차단한다네트워크 응용계층을 검사한다실시간으로 패킷의 헤더 데이터를 ㅓ검사??웹 취약점 공격에 대한 탐지및 차단한다???스푸핑 레이어 어택ARP NetInterface 목적지Mac조작 스위치 (어떤장치랑 관련되어 있ㄴ디)IP Net 출발지IP조작 라우터DNS App 목적지IP조작 ?~way방화벽의 기능접근통제사용자인증감사및로그기능프록시기능주소변환기능웹 방화벽의 동작원리positive security /modelnegative security /model하이브리드 모델 (pos neg 통합)웹 방화벽 WAP의 기능서버데이터와 app~프로토콜 기반의 공격을 방어웹 서버로 들어오는 트래픽 검사 ~ 악의적인 코드, 공격유형이 포함된 트래픽을 차단http/https 로 불리는 웹 보안에 특화된 방화벽이다, 즉 유해단 http를 차단한다ssl 스트리핑?s를 빼버리는?방화벽의 한계점내부공격에 대해 어떠한 보호도 제공할 수 없다네트워크상에 백도어르 통해 들어오는 무분별하거나 권한 없는 액세스에 대해 보호 X바이러스와 악의적인 코드에 대해 와벽한 보호 X?일반적인 공격????방화벽과 프록시서버의 차이?방화벽 ? IPS 차이//두 가지위조 - 문서 자체를 바꾸다, 통째로변조 - 문서 일부를 바꾸다, 눈에 안띄게 살짝변조가 들 나쁘다왜요?왕창 바꾸면통신과정에서 금방 들통이 난다다섯가지A - 중단(흐름 차단) - B흐름을 내비두는 데 도청 (가로채기)흘러가는 데이터의 일부를 변조 (수정)위조 (조작)사칭DDos스니핑 MITMMITM DNS 스푸핑업로드하고 다운할때의 공격 ASS CSRF MITMMITM Replay(재전송공격)그 외에 Reflection 반사공격대칭키 공격?선형공격차분공격통계적 분석전수 공격생일 공격블루투스 어택 공격무차별 공격일치블럭연쇄공격고정점연쇄공격차분연쇄공격SSO는 기본적인 인증시스템취약점 : 최초 인증 과정을 통과하면 여러 서버나 사이트에 접속가능해지므로 보안에 큰 문제인 @가 생길 수 있다. @를 해결하기 위해 중요 정보를 접근하거나 동작하려면 #가 필요하다.전체 해시밧이 아니라 해시 중간의 결과에 대한 충돌점을 찾는다 특정 포인트를 공격대상으로 한다???전자상거래에서 상대방의 신용카드번호, 주민등록번호, 인증번호, 전자서명 등의 진짜와 가짜를 어떻게 확인할까?이를 위해해시함수메시지 인증코드 (CBC-MAC, HMAC, NMAC | CMAC)디지털 서명인증서등또한 SSH SSL IPSec 등에서 MAC을 사용한다다무결성, 인증, 부인방지를 위해 다음을 이용한다원격제어 (SSH가 기반)   Unkeyed hash (MDC) Keyed hash (MAC) Digital signture Digital ~ (인증서) 무결성 O O O O 인증 X O O O 부인방지 X X O O Keys X 세션키 public % private key X509 메시지 인증코드 (MAC) 무결성과 인증을 보장하고 변경, 거짓명세를 검증하고 부인방지를 해결 못한다 제3자에게 증명할 수 없다-&amp;gt; A로부터 받을 메시지를 B가 ‘이 메세지는 A가 보낸것’이라고 제 3자에게 증명할 수 없다 = MAC을 이용한다키를 추측 -&amp;gt; 전수, 생일 공격재전송공격 -&amp;gt; (대응책) 비표(수신번호), 타임스탬프~디지털 서명 무결성~ 인방지를 구한다~~~인증서~~전자서명 알고리즘의 요구 조건위조방지사용자인증부인방지변조방지재사용방자ㅣ다음 중에서 전자 서명의 특징으로 가장 바르지 않은 것은?부인불가위조불가서명자인증재사용가능답이 없다다음은 공개키 기반 구조 PK에 대한 설명이다. 가장 옳지 않은 것은?1 네트워크 화녁에서 보안 요구사항을 만족시키기 위해 고개키 암호화 인증서 사용을 가능하게 해주는 기반 구조2 암호화된 메시지를 송신할 때 수신자의 개인키를 사용하며, 암호화된 서명을 할 때 수신자의 공개키를 사용한다3 공개키인증서를 발행하여 기밀성, 무결성, 인증, 부인방지, 접근 제어를 보장한다.4 공개키 기반 구조의 구성요소로 공개키 인증서, 인증기관, 등록기관, 디렉터리 사용자등이 있다Client와 Server는 대칭키(세션키)를 이용하여 메시지를 송신&amp;amp;수신하고자 한다C가 S에게 접속요청을한다C에게 S의 공개키를 전달한다S의 공갴키로 대칭키를 암호화하여 전달한다S는 개인키로 암호문을 복호화하여 대칭키를 획득한다대칭키를 이용하여 C와 S가 암호화 통신을 한다대칭키의 유출을 막을 수 있다공격자는 가짜 Server(Or )에 Client를 접속하게 하여 Clinet가 입력한 정보를 빼돌리는 공격이 가능하다 (피싱 공격)Client가 접속한 Server(Or )가 진짜인지를 신회할 수 있도록 인증서 개념이 도입된다-인터넷 공간에서 사업을하려는 Server는 Client에게 신뢰성을 주기 위해 공인기관에서 인증서를 발급받는다신뢰할 수 있는 사이트를 위해 공인기관A에게 웹사이트B의 인증서 생성을 요청한다A에게 웹사이트의 공개키와 사이브 정보를 전달한다공인기관A는 웹사이트를 절차에 따라 검증한다B가 제공한 사이트 정보와 공개키를 인증기관 A의 개인키를 이용하여 암호화하여 인증서를 생성한다 (B의 인증서)검증이 완료된 후 인증서를 발급한다-웹사이트와 연결을 위해 Client가 접속을 요청한다Client에게 웹사이트의 인증서 정보를 전달한다Client는 브라우저 내장 공개키로 복호화를 시도한다, 웹 사이트의 공개키를 획득한다웹 사이트의 공개키로 암호화 통신에 사용한 대칭키를 암호화하여 전달한다암호화 통신이 인증된 상태로 연결되었다인증되지 않은 웹사이트B(or Server)일 경우 2와 같이 인증서를 보낼 수 없다웹사이트가 보내온 인증서가 인증기관의 개인키로 암호화한 파일이 아닐 경우 공인기관A의 공개키로 복호화가 불가능하다-철수의 공개키에 CA의 개인키로 디지털 서명을 하여 인증서를 구성한다철수는 자신의 공개키를 등록한다키쌍을 생성한다순이는 CA의 디지털 서명이 되어있는 철수의 공개키인 인증서를 획득한다순시은 공개키를 사용하여 디지털 서명을 검증한다 (철수의 공개키를 확인한다)순이는 철수의 공개키로 메시지를 암호화하고 철수에게 소ㅇ신한다암호문을 수신한 철수는 자신의 개인키로 복호화한다해시함수의 특징으로 가장 바르지 못한 것은?1 오류탐색기능을 제공한다2 MDS SHA-1 HAS-160 등이 있다3 디지털 서명에 시용되어 무결성을 제공한다4 하드웨어 및 소프트웨어에 모두 실용적이여야 한다5 메시지 인증과 메시지 부인방지 서비스에 이용된다6 임의 크기의 메시지에 적용되며, 헤시값 계산 과정이 쉬워야 한다7 MAC 와 달리 키를 사용하지 않는다8 임의의 길이를 갖는 메시지를 입력으로 하며 고정된 길이의 출력값을 갖는다9 해시 함수의 충돌 회피성을 동일한 출력을 산출하는 서로 다른 두 입력을 계산적으로 찾기 어렵다는 특성을 이용한다10 답이 없다🗿 디스코드 메모 정리복사생성자 v1 = v2 , v1(v2) , v1 {v2}객체 비교 시에도 복사가 일어난다지2 태양계 유니티퍼멜파티 대포 피하기만들었었지void * ?malloc 리턴이 포인터인 이유?Heap에 메모리 할당, 이렇게 할당한 주소를 가리켜야함malloc 함수는 어떤 데이터를 할당한 지 모름, 정할 수 없음 , 그래서 void *current (end)이게 없으면 삽입 O(n), 끝부분을 찾아야 하니까그러면 연결리스트를 왜써 배열 쓰지그래서 current 씀 중요삭제는 어차피 찾는 거라서크게 상관없음손 위도 뭐 있다고 한 것 같음CISC RISC명령어가 다르면, 다시말해 여러가지를 쓸 수 있어서 편의성복잡해서 느림RISC는 다 똑같아서 좀 불편해도 빠름" }, { "title": "⛏️ 프로그래머스 구명보트 CPP", "url": "/posts/Programmers-42885/", "categories": "⛏️Programming, 🕯️PS", "tags": "PS, Programmers", "date": "2022-10-03 12:05:00 +0900", "snippet": "구명보트💎 첫 번째 풀이 코드 의도 : 일단 생각나는대로 빨리 풀어보자 결과 : 정확성 75점 (15/15), 효율성 15점 (3/5), 총 90점int solution(vector&amp;lt;int&amp;gt; people, int limit){ int answer = 0; sort(people.begin(), people.end()); while (people.size() &amp;gt; 0) { int i = people.size() - 1; if ((i != 0) &amp;amp;&amp;amp; (people[0] + people[i] &amp;lt;= limit)) { answer++; people.erase(people.begin() + i); if (people.size() &amp;gt;= 1) people.erase(people.begin()); } else { answer++; people.erase(people.begin() + i); } } return answer;}처음에는 단순히 Vector 에서 Lightest 와 Heaviest 요소를 erase 함수를 통해 지워나가면서 풀어나갔는데,이 방법은 정확성 테스트는 모두 통과했지만, 효율성 테스트에서 1번 3번 시간 제한을 통과하지 못했다.그 이유는 메인 루프에서 Lightest 를 제거해나갈 때 오버헤드가 발생해서인것 같다.Vector 에서 특정 요소롤 erase 로 제거하면 해당 요소의 공간은 빈 공간이 되는데,Vector는 순차 자료구조이기 때문에, 제거한 요소 뒤의 모든 요소들을 한 칸씩 앞으로 땡겨 재할당해준다.내 풀이에서는 Vector 맨 앞에서 존재하는 Lightest 를 제거하는 경우가 비일비재하기에,이 과정에서 오버헤드가 많이 발생했을 것으로 추측된다.문제 조건에 의해 무인도에 갇힌 사람은 최대 50000명이므로,최악의 경우, 요소들을 한 칸씩 당기는 과정을 49998번, 49996번, 49994번, … 진행하게 된다.💎 두 번째 풀이 코드 의도 : 속도.. 속도.. 속도..! 결과 : 정확성 75점 (15/15), 효율성 15점 (5/5), 총 100점#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;cmath&amp;gt;using namespace std;int solution(vector&amp;lt;int&amp;gt; people, int limit){ int necessaryLifeBoatCount = 0; int count[241] = { }; // Record Every Weight int first = 40; int end = 240; // First Will Be The Lightest Weight // End Will Be the Heaviest Weight for (int i = 0; i &amp;lt; people.size(); i++) count[people[i]]++; while (true) { if (first == end) { break; } if (count[first] == 0) { first++; continue; } if (count[end] == 0) { end--; continue; } // If The Sum Of Lightest Weight And Heaviest Weight Is Smaller Or Equals To The Limit // Ride Them A Boat if (first + end &amp;lt;= limit) { int temp = min(count[first], count[end]); count[first] -= temp; count[end] -= temp; necessaryLifeBoatCount += temp; } // If Not, The Heaviest People Can Only Ride A Boat By Themselves, // So Each Person With That Weight Picks Up One Boat else { necessaryLifeBoatCount += count[end]; count[end] = 0; } } if (count[first] &amp;gt; 0) { if ((count[first] &amp;gt; 1) &amp;amp;&amp;amp; (first + first &amp;lt;= limit)) { necessaryLifeBoatCount += count[first] / 2; necessaryLifeBoatCount += count[first] % 2; } else { necessaryLifeBoatCount += count[first]; } } return necessaryLifeBoatCount;}두 번째 풀이에서는 속도를 최대한 높혀보고자 했다.실제로 이 풀이는 내 풀이 중 가장 빠른 풀이이기도 하다.이 풀이에서는 마치 카운팅 정렬처럼,Count 배열을 만들고, 거기에 각 인덱스를 무게 로 하는 사람 수를 저장했다.예를 들어 Input 으로 들어온 People 이 [ 40, 50, 80, 40, 90 ] 이라면,Count[40] 은 40KG 인 사람의 수인 2이다.이런 Count 배열을 만들어준 이유는 두 가지가 있다.전제는 사람의 무게가 40KG ~ 240KG으로 비교적 좁은 범위로 한정되어 있는데, 사람의 수는 1명 ~ 50,000명이나 된다는 것. 때문에 같은 몸무게를 가진 사람이 많을 것이고, 이로 인해 중복되는 처리가 많을 것이라고 생각했다. 이런 중복된 처리들을 Count 배열을 이용해 한 번에 처리하고자 했다. 그리고 그리디 이기 때문에 모든 요소에 접근을 해야하는데, Vector를 인덱스로 접근하는 것보다, 배열을 인덱스로 접근하는 것이 속도가 훨씬 빨랐다.여기에 두 개의 포인터 (주소를 가리키는 포인터가 아니라 말 그대로 포인터) 를 만들었다.Lightest : 현재 무인도에 남아있는 사람들 중 가장 가벼운 사람의 무게Heaviest : 현재 무인도에 남아있는 사람들 중 가장 무거운 사람의 무게Count 배열에서의 인덱스는 사람의 무게와 대응되므로,Count[Lightest] 는 가장 가벼운 무게의 사람 수, Count[Heaviest] 는 가장 무거운 무게의 사람 수를 의미한다.이를 이용해 메인 루프는 매 반복 마다, 아래 두 가지 작업 중 한 작업을 실행한다. Lightest 와 Heaviest 두 명을 보트에 태워 구출한다. Heaviest 한 명만 보트에 태워 구출한다.Lightest 와 Heaviest 의 무게 합이 구명보트 무게 제한을 넘지 않으면,Lightest 와 Heaviest 두 명을 보트에 태워보내고,Lightest 와 Heaviest 의 무게 합이 구명보트 무게 제한을 넘지 않으면,Heaviest 는 혼자서 밖에 보트를 탈 수 없으므로 혼자 보트에 태워 구출한다.(가장 가벼운 Lightest 랑 짝을 지었음에도 무게 제한을 넘으므로)💎 최종 풀이 코드 의도 : 속도.. 그리고 가독성 결과 : 정확성 75점 (15/15), 효율성 15점 (5/5), 총 100점#include &amp;lt;vector&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int solution(vector&amp;lt;int&amp;gt; people, int limit){ int boatCount = 0; int lightest = 0; int heaviest = people.size() - 1; sort(people.begin(), people.end()); while (lightest &amp;lt;= heaviest) { if (people[lightest] + people[heaviest] &amp;lt;= limit) lightest++; heaviest--; boatCount++; } return boatCount;}코테 스터디 모임에서 회의를 해보니,다른 두 팀원 분들은 모두 이런식으로 푸셨었다.기본적인 알고리즘 자체는 기존과 비슷하고, 구현은 첫 번째 풀이와 두 번째 풀이를 섞은 것처럼 달라졌다.이 풀이는 첫 번째 풀이처럼 Vector를 이용하되, 이번에는 요소를 지우지는 않고,두 번째 풀이처럼 Lightest 와 Heaviest 두 개의 포인터를 이용해 현재 과정에서 처리할 요소를 결정한다.속도는 두 번째 풀이가 훨씬 더 빠르긴 하지만, (정확성 테스트에서, 약 .01ms VS 약 .03ms)이 풀이의 가독성이 전보다 훨씬 좋다고 생각했기에 이를 최종 풀이로 결정했다." }, { "title": "⛏️ 오버헤드 Overhead", "url": "/posts/Overhead/", "categories": "⛏️Programming, 🕯️Programming-Memo", "tags": "", "date": "2022-10-03 12:05:00 +0900", "snippet": "💎위키백과어떤 처리를 하기 위해 들어가는 간접적인 처리 시간, 메모리 등을 말한다A 처리 시간 : 10초 소요 B 처리 추가 : 15초 소요 =&amp;gt; 오버헤드 5초 B 처리 개선 : 12초 소요 =&amp;gt; 오버헤드 3초 단축" }, { "title": "⛏️ 네임스페이스", "url": "/posts/Name-Space/", "categories": "⛏️Programming, 🕯️Programming-Memo", "tags": "", "date": "2022-10-01 11:03:00 +0900", "snippet": "💎CPP의 경우네임스페이스는 식별자 (자료형, 함수, 변수 등의 이름)의 영역:: 연산자네임스페이스 (이름공간) 을 지정하는 연산자double Circle::CalcArea(){ // ... //}함수가 정의된 이름공간이 클래스임을 지정하는 것이라도 생각해도 된다이름 공간은 코드를 논리적 그룹으로 구성특히 코드에 여러 라이브러리가 포함되어 잇을 때 발생할 수 잇는 이름 충돌을 방지하는데 사용모든 변수 이름 앞에 이름 공간을 붙일 수도 있고 아니면using namespace std; 와 같은 선언문을 사용하여서 현재의 이름공간을 지정하여도 된다하나의 프로그램에서 여러 개의 이름 공간을 사용할 수 있다💎https://stackoverflow.com/questions/4269034/what-is-the-meaning-of-prepended-double-colon/4269060#4269060네임스페이스 없이 :: 를 쓰면 Global Namespace를 사용" }, { "title": "⛏️ 인라이닝 Inlining, 인라인 함수 Inline Function", "url": "/posts/Inlining-Inline-Function/", "categories": "⛏️Programming, 🕯️Programming-Memo", "tags": "C, CPP", "date": "2022-10-01 10:54:00 +0900", "snippet": "💎함수 호출 시에는 함수 호출 규약에 따라 약간의 오버헤드가 발생함수 호출 전 : 모든 레지스터 (CPU안의 저장 공간)가 저장되어야 하고 인수들을 복사되어야 한다함수 호출 후 : 레지스터들이 다시 복구만약 아주 간단한 함수라면 함수 안의 문장을 실행하는 시간보다 함수 호출을 준비하는 시간이 더 걸릴 수 있다따라서 크기가 작은 함수의 경우에는 차라리 함수 호출을 하지 않고 코드를 복사하여서 넣어주는 편이 효율적일 수 있다💎inline 키워드 (CPP)함수 앞에 붙으면 컴파일러는 함수를 생성하지 않고 함수를 호출한 곳에 코드 넣어줌이를 인라인 함수 Inline Functioninline void PrintHello(){ cout &amp;lt;&amp;lt; &quot;Hello&quot;;}멤버 함수를 클래스 내부에 정의하면 자동적으로 인라인 함수가 된다멤버 함수를 클래스 외부에 정의하면 일반적인 함수와 동일하게 호출된다멤버 함수의 크기가 작은 경우, 클래스 내부에 정의하는 것이 좋다 (생성자, Getter, Setter 등)멤버 함수의 크기가 큰 경우, 코드 복사 시 실행파일의 크기가 커질 수 있으므로 (…?) 클래스 외부에 정의하는 것이 좋다💎최신 컴파일러는 알아서 가능한 영역까지 Inlining을 진행한다고 함알아두면 좋지만 너무 신경쓰지는 말 것마이크로한 최적화는 장기적으로는 성능 향상에 큰 도움이 되지 않음 (좋은 코드에 신경써라)" }, { "title": "⛏️ 유클리드 알고리즘/호제법", "url": "/posts/Euclidean-Algorithm/", "categories": "⛏️Programming, 🕯️Algorithm", "tags": "Algorithm", "date": "2022-10-01 08:42:00 +0900", "snippet": "💎백준 알고리즘 분류A를 B로 나눈 나머지 r (이때, A &amp;gt; B)A, B의 최대공약수는 B, r의 최대공약수와 같음을 이용하여 A, B의 최대공약수를 구하는 알고리즘A, B의 최대공약수를 알면 A, B의 최소공배수도 알 수 있다.CPP STL 내장 함수로도 존재 gcd, lcmint GCD(int A, int B){ int r = 0; while (A % B != 0) { r = A % B; A = B; B = r; } return B;}int LCM(int A, int B){ return A * B / GCD(A, B);}💎 약수(約-, Divisor) | 인수 (因-, Factor)묶여있는 수원인, 원소, 이유가 되는 수(A, B ∈ ℕ), A ≠ 0 일 때,A가 B의 약수 ⇔ B = A * k (k ∈ ℕ)A가 B의 약수 ⇔ A가 B를 나눈다 ⇔ A|B💎 공약수, Common Divisor (Factor)A, B의 공통된 약수💎 최대공약수, GCD, Greatest Common Divisor (Factor)A, B 의 공약수 중에서 가장 큰 수gcd(A, B) ⇔ A, B의 최대공약수A, B 의 최대공약수의 약수는 A, B의 공약수i.e.12의 약수 : 1, 2, 3, 4, 6, 1218의 약수 : 1, 2, 3, 6, 8, 1812와 18의 공약수 : 1, 2, 3, 612와 18의 최대공약수 : 66의 약수 : 1, 2, 3, 6💎 서로소 (-素, Coprime)서로 묶이지 않는 수, 서로가 순수한(공통이 없는 수) 수A, B가 서로소다 ⇔ 공약수(최대공약수)가 1이다 ⇔ 1을 제외한 공약수가 없다 ⇔ 공약수의 개수가 1개이다gcd(A, B) = 1💎 유클리드 알고리즘/호제법(A, B, r ∈ ℕ), (0 ≤ r ＜ B ＜ A) 일 때,gcd(A, B) ⇔ gcd(B, r)A = qB + r ⇔ B = qr + r₂pf )assume gcd(A, B) = g, gcd(B, r) = gA = ga, B = gba, b는 서로소 ⇔ gcd(a, b) = 1 (∵ if gcd(a, b) = k ⇔ k|A, k|B ⇔ gcd(A, B) = gk ≠ gcd(A, B) = g)A = qB + r ⇔ ga = qgb + r (∵ A = ga, B = gb)r = ga - qgb = g(a - qb)∴ g|rα ≔ (a - qb)r = gαgcd(B, r) = g 를 증명하기 위해서B = gb, r = gα 를 가지고gcd(b, α) = 1 을 증명해보자 (∵ if gcd(b, α) = k ⇔ k|B, k|r ⇔ gcd(B, r) = gk ≠ gcd(B, r) = g)귀류법gcd(b, α) = k 이라면?A = qB + r ⇔ ga = qgb + gα (∵ A = ga, B = gb, r = gα)b = kβ, α = kγgcd(β, γ) = 1 (∵ gcd(b, α) = k)A = ga = qgkβ + gkγ = gk(qβ + γ)∴ gk | AB = gb = gkb∴ gk | B이러면 A, B의 최대공약수가 gk 이므로 gcd(A, B) = g 와 모순∴ gcd(β, γ) ≠ 1, gcd(b, α) ≠ k∴ gcd(b, α) = 1∴ gcd(B, r) = g∴ gcd(A, B) = gcd(B, r)이를 통해 큰 수 (A, B) 를 작은 수 (B, r) 로 계산할 수 있다.💎 공배수, Common MultipleA와 B의 공통된 배수💎 최소공배수, LCM, Least/Lowest Common MultipleA, B 의 공배수 중에서 가장 작은 수lcm(A, B) ⇔ A, B의 최소공배수최대공약수를 안다면, 아래 공식을 이용해 바로 구할 수 있음LCM = A * B / GCDA * B = GCD * LCMa = A / GCD, A = a * GCDb = B / GCD, B = b * GCDA * B = GCD * a * GCD * bLCM = a * b * GCD" }, { "title": "🌱 블로그 글꼴을 &#39;돋움&#39; 으로 바꿨다.", "url": "/posts/DayStone-220929/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-09-29 19:23:00 +0900", "snippet": "🗿 Change-The-Font-To-Dotum기존에 쓰던 기본 폰트가 갑자기 마음에 안들어졌다.‘Google Font’ 에 있는 글꼴 여럿 적용시켜보다가,그냥 근본있는 윈도우 내장 글꼴인 ‘돋움’ 으로 바꾸기로 결정했다.메이플스토리 인게임 글꼴도 돋움이라는데, 그래서 그런지 뭔가 친숙하다.왠지모를 ‘그때 그 시절’ B급 감성..옛날 네이버 블로그 느낌도 난다.나는 마음에 든다.남이 보기에는 어떨지 모르겠다." }, { "title": "⛏️ 유니티 GUID 보는 법", "url": "/posts/Unity-GUID/", "categories": "⛏️Unity, 🕯️Unity-Normal", "tags": "Unity", "date": "2022-08-26 20:12:00 +0900", "snippet": "💎참고.meta 파일 열면 나온다" }, { "title": "⛏️ VS 테마 적용하는 법", "url": "/posts/VS-Theme/", "categories": "⛏️Programming, 🕯️Programming-Memo", "tags": "", "date": "2022-08-26 20:12:00 +0900", "snippet": "💎https://marketplace.visualstudio.com/테마를 다운 받긴 했는데, 이걸 어떻게 적용해야할 지 몰랐음..그래서 메모 위 링크에서 원하는 테마 찾아 다운 파일 더블 클릭해서 설치 (VS 꺼둬야 함) VS 켜서 적용 (설정이나 위 메뉴바에 ‘도구 &amp;gt; 테마’)" }, { "title": "⛏️ U# 자주 하는 질문 (자문자답)", "url": "/posts/UdonSharp/", "categories": "⛏️Unity, 🕯️VRC", "tags": "Unity, VRC", "date": "2022-07-08 14:31:00 +0900", "snippet": "💎오류 로그는 안뜨는데 작동안할 때호출하고자하는 CustomEvent가 Public 접근 제한자인지 확인한다뭔가 이상할 때Udon Behaiviour 여러 개 들어가있는 지 확인한다Udon 싱크 크기https://doc.photonengine.com/en-us/pun/current/reference/serialization-in-photon" }, { "title": "⛏️ C / C++ 에러", "url": "/posts/C-CPP-Error/", "categories": "⛏️Programming, 🕯️Programming-Memo", "tags": "C, CPP", "date": "2022-07-08 13:54:00 +0900", "snippet": "💎 C++ C3861에러 : ‘뭐시깽’ 식별자를 찾을 수 없습니다.해결 : 함수 위치 밑 선언 확인 C++ C2360, C++ C2361에러 : ‘뭐시깽’ 초기화가 ‘case’/’default’ 레이블에 의해 생략되었습니다.해결 : 변수 선언하는 case에 스코프 {} 달아주기설명 : case/default 이전 공간에서는 메모리 할당 안됨" }, { "title": "⛏️ 아스키코드", "url": "/posts/ASCII/", "categories": "⛏️Programming, 🕯️Programming-Memo", "tags": "", "date": "2022-07-08 12:15:00 +0900", "snippet": "💎7비트, 2^7 = 128개8비트는 에러 검출 방식, 혹은 비 영어권에서 문자 표현 확대용&amp;amp;#인덱스; 를 통해 아스키코드를 HTML Entity로 사용 가능예를 들어 &amp;#38;#35; 는 # 로 표현 미리보기   숫자 48 ~ 57 알파벳 대문자 65 ~ 90 알파벳 소문자 97 ~ 122 10진수 부호 구분 이름 0 NUL 특수 제어 Null 1 SOH 전송 제어 Start of Heading 2 STX 전송 제어 Start Of Text 3 ETX 전송 제어 End Of Text 4 EOT 전송 제어 End Of Transmission 5 ENQ 전송 제어 Enquiry 6 ACK 전송 제어 Acknowledge 7 BEL 특수 제어 Bell 8 BS 포맷 제어 Backspace 9 HT 포맷 제어 Horizontal Tab 10 LF 포맷 제어 NL Line Feed, New Line 11 VT 포맷 제어 Vertical Tab 12 FF 포맷 제어 NP Form Feed, New Page 13 CR 포맷 제어 Carrige Return 14 SO 특수 제어 Shift Out 15 SI 특수 제어 Shift In 16 DLE 전송 제어 Data Link Escape 17 DC1 장치 제어 Device Control 1 18 DC2 장치 제어 Device Control 2 19 DC3 장치 제어 Device Control 3 20 DC4 장치 제어 Device Control 4 21 NAK 전송 제어 Negative Acknowledge 22 SYN 전송 제어 Synchronous Idle 23 ETB 전송 제어 End of Transmission Block 24 CAN 특수 제어 Cancel 25 EM 특수 제어 End of Medium 26 SUB 특수 제어 Substitute 27 ESC 특수 제어 Escape 28 FS 정보 분리 File Separator 29 GS 정보 분리 Group Separator 30 RS 정보 분리 Record Separator 31 US 정보 분리 Unit Separator 32 (Space) 기호 Space 33 ! 기호 Exclamation Mark 34 ” 기호 Double Quote 35 # 기호 Hash or Number 36 $ 기호 Dollar Sign 37 % 기호 Percentage 38 &amp;amp; 기호 Ampersand 39 ’ 기호 Single Quote 40 ( 기호 Left Parenthesis 41 ) 기호 Right Parenthesis 42 * 기호 Asterisk 43 + 기호 Plus Sign 44 , 기호 Comma 45 - 기호 Minus Sign 46 . 기호 Period 47 / 기호 Slash 48 0 숫자 Zero 49 1 숫자 Number One 50 2 숫자 Number Two 51 3 숫자 Number Three 52 4 숫자 Number Four 53 5 숫자 Number Five 54 6 숫자 Number Six 55 7 숫자 Number Seven 56 8 숫자 Number Eight 57 9 숫자 Number Nine 58 : 기호 Colon 59 ; 기호 Semicolon 60 &amp;lt; 기호 Less Than 61 = 기호 Equals Sign 62 &amp;gt; 기호 Greater Than 63 ? 기호 Question Mark 64 @ 기호 At Sign 65 A 알파벳 Upper Case Letter A 66 B 알파벳 Upper Case Letter B 67 C 알파벳 Upper Case Letter C 68 D 알파벳 Upper Case Letter D 69 E 알파벳 Upper Case Letter E 70 F 알파벳 Upper Case Letter F 71 G 알파벳 Upper Case Letter G 72 H 알파벳 Upper Case Letter H 73 I 알파벳 Upper Case Letter I 74 J 알파벳 Upper Case Letter J 75 K 알파벳 Upper Case Letter K 76 L 알파벳 Upper Case Letter L 77 M 알파벳 Upper Case Letter M 78 N 알파벳 Upper Case Letter N 79 O 알파벳 Upper Case Letter O 80 P 알파벳 Upper Case Letter P 81 Q 알파벳 Upper Case Letter Q 82 R 알파벳 Upper Case Letter R 83 S 알파벳 Upper Case Letter S 84 T 알파벳 Upper Case Letter T 85 U 알파벳 Upper Case Letter U 86 V 알파벳 Upper Case Letter V 87 W 알파벳 Upper Case Letter W 88 X 알파벳 Upper Case Letter X 89 Y 알파벳 Upper Case Letter Y 90 Z 알파벳 Upper Case Letter Z 91 [ 기호 Left Square Bracket 92 \\ 기호 Backslash 93 ] 기호 Right Square Bracket 94 ^ 기호 Caret or Circumflex 95 _ 기호 Underscore 96 ` 기호 Grave Accent 97 a 알파벳 Lower Case Letter a 98 b 알파벳 Lower Case Letter b 99 c 알파벳 Lower Case Letter c 100 d 알파벳 Lower Case Letter d 101 e 알파벳 Lower Case Letter e 102 f 알파벳 Lower Case Letter f 103 g 알파벳 Lower Case Letter g 104 h 알파벳 Lower Case Letter h 105 i 알파벳 Lower Case Letter i 106 j 알파벳 Lower Case Letter j 107 k 알파벳 Lower Case Letter k 108 l 알파벳 Lower Case Letter l 109 m 알파벳 Lower Case Letter m 110 n 알파벳 Lower Case Letter n 111 o 알파벳 Lower Case Letter o 112 p 알파벳 Lower Case Letter p 113 q 알파벳 Lower Case Letter q 114 r 알파벳 Lower Case Letter r 115 s 알파벳 Lower Case Letter s 116 t 알파벳 Lower Case Letter t 117 u 알파벳 Lower Case Letter u 118 v 알파벳 Lower Case Letter v 119 w 알파벳 Lower Case Letter w 120 x 알파벳 Lower Case Letter x 121 y 알파벳 Lower Case Letter y 122 z 알파벳 Lower Case Letter z 123 { 기호 Left Curly Bracket 124 | 기호 Vertical Bar 125 } 기호 Right Curly Bracket 126 ~ 기호 Tilde 127 DEL 특수 제어 Delete 💎참고1참고2참고3참고4" }, { "title": "🌱 기대", "url": "/posts/DayStone-220630/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-06-30 05:50:00 +0900", "snippet": "🗿 기대내 자신에게도, 또 남에 대해서도기대를 하지 말아야겠다바닥의 시점과 관점과 자세로 살아가야겠다나는 기대보다 못난 사람이고남도 내 기대보다는 덜난 사람들이다기대는 실망의 어머니다기대해서 좋았던 적은 없는 것 같다단지 모두 운이 좋았을 뿐이다기대하기 보다 대비해야 한다내가 제대로 아는 것은 하나도 없다나를 포함해, 무언가의 원래를 보고 실망하지 않기 위해서는 지금부터 대비해야 한다죠죠에 나오는 악당이 한 말이다대비하면 행복할 수 있다" }, { "title": "⛏️ GetType() typeof()", "url": "/posts/gettype-typeof/", "categories": "⛏️Programming, 🕯️Programming-Memo", "tags": "", "date": "2022-06-29 13:01:00 +0900", "snippet": "💎https://stackoverflow.com/questions/11312111/when-and-where-to-use-gettype-or-typeof둘 다 Meta-Information 을 포함한 System.Type 을 가져옴typeof()() 안에 타입 이름을(문자열이 아니라 식별자 Identifier) 넣고, 타입을 가져오는 키워드 (컴파일 타임 시점 =&amp;gt; 정적인 타입)ex )typeof(int) =&amp;gt; Int32typeof(string) =&amp;gt; stringGetType()() 안에 인스턴스를 넣고, 타입을 가져오는 함수 (런타임 시점)ex ) int temp = 0;GetType(temp) =&amp;gt; Int32TempClass temp = new();GetType(temp) =&amp;gt; TempClassstring s = “Hi”;Type t1 = typeof(string);Type t2 = s.GetType();t1 == t2 ==&amp;gt; trueobject obj = “Hi”;Type t1 = typeof(object); // ==&amp;gt; objectType t2 = obj.GetType(); // ==&amp;gt; stringt1 == t2 ==&amp;gt; falseTesting Types타입 식별을 Testing 이라고 표현하는 듯?if (mycontrol is TextBox) // ==&amp;gt; true!=if (mycontrol.GetType() == typeof(TextBox)) // ==&amp;gt; false이는 같지 않다왜냐하면 mycontrol이 TextBox에게 derived 파생되어졌을 수 있기 때문이 경우 첫 번째 케이스는 true, 두 번째 케이스는 false 조건식임TextBox의 모든 inherit 상속받은 친구들을 가져와 비교하려면 ispublic class MySpecializedTextBox : TextBox{}MySpecializedTextBox specialized = new MySpecializedTextBox();if (specialized is TextBox) ==&amp;gt; trueif (specialized.GetType() == typeof(TextBox)) ==&amp;gt; falseCasting" }, { "title": "⛏️ 비주얼 스튜디오", "url": "/posts/VS-2022/", "categories": "⛏️Programming, 🕯️Programming-Memo", "tags": "", "date": "2022-06-28 14:12:00 +0900", "snippet": "💎https://visualstudio.microsoft.com/ko/license-terms/vs2022-ga-community/다른 모든 사용 시나리오의 경우:엔터프라이즈가 아닌 조직에서는 최대 5명의 사용자가 Visual Studio Community를 사용할 수 있습니다. 엔터프라이즈 조직(PC가 250대를 초과하거나 연 매출이 1백만 USD를 넘는 경우)에서는 위에 설명한 오픈 소스, 학술 연구 및 강의실 학습 환경 시나리오 외에는 사용이 허락되지 않습니다.https://visualstudio.microsoft.com/ko/vs/pricing/?tab=individual5명 이하, 1백만 달러 이하는 커뮤니티 써도 된다반대인 경우는 기업으로 판단하여 비즈니스 라이센스를 구입해야한다" }, { "title": "⛏️ Git", "url": "/posts/git/", "categories": "⛏️Programming, 🕯️Programming-Memo", "tags": "", "date": "2022-06-28 02:41:00 +0900", "snippet": "💎cli Command-line Interface CLI 명령 줄 인터페이스https://www.codesoom.com/courses/gitLocal Repo 합치기합쳐놓을 곳에 cdgit remote add 로컬주소git fetch &amp;gt; 이전 commit 기록 불러오기git merge –allow-unrelated-historiesgit commit -a.gitignorehttps://github.com/github/gitignorehttps://www.toptal.com/developers/gitignoreignore all .class files*.classexclude lib.class from “*.class”, meaning all lib.class are still tracked!lib.classignore all json files whose name begin with ‘temp-‘temp-*.jsononly ignore the build.log file in current directory, not those in its subdirectories/build.logspecify a folder with slash in the endignore all files in any directory named temptemp/ignore doc/notes.txt, but not doc/server/arch.txtbin/*.txtignore all .pdf files in the doc/ directory and any of its subdirectories/** matches 0 or more directoriesdoc/*/.pdf &#39;#&#39;로 시작하는 라인은 무시한다. 표준 Glob 패턴을 사용한다. 슬래시(/)로 시작하면 하위 디렉터리에 적용되지(recursivity) 않는다. 디렉터리는 슬래시(/)를 끝에 사용하는 것으로 표현한다. 느낌표(!)로 시작하는 패턴의 파일은 무시하지 않는다..gitignore 파일 적용git rm -r –cached .git add .git commit -m “커밋 이름”git push origin {브랜치 이름}https://velog.io/@psk84/.gitignore-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0커밋 수정로컬 전 단계git commit –amendesc :wq로컬 이전 단계git log 확인git rebase -i HEAD~3수정할 친구를 pick &amp;gt; rewordesc :wqvi 에서 입력하려면 i취소하려면 esc u커서 위치한 한줄 전체 취소하려면 Shift u취소를 취소하려면 Ctrl R (redo)이미 커밋 push (원격)git push –force 브랜치이름" }, { "title": "⛏️ VRC 월드 유니티 테스트 시, ContextMenu Attribute", "url": "/posts/USharp-ContextMenu/", "categories": "⛏️Unity, 🕯️VRC", "tags": "Unity, VRC", "date": "2022-06-28 02:41:00 +0900", "snippet": "💎VRC World 맵 제작 시, 유니티에서 테스트를 진행할 때에는ContextMenu Attribute를 사용하면 안될 것 같다ContextMenu Attribute 사용 시, 오브젝트를 껐다키는 등의 단순 명령들은 잘 실행되지만, 변수 값을 변경하는 등의 명령은 제대로 실행되지 않는다.예를 들어, 변수 temp 와 temp를 Debug Log로 찍고있는 Update, temp 값을 1씩 더하는 함수 Add 가 있을 때런 타임에서 SendCustomEvent 등으로 Add를 호출하면 Update 에서는 변경된 값이 로그로 찍혀나오지만,ContextMenu로 Add 를 호출하면 Update에서 값이 변하지 않은 초기값 그대로가 찍혀나온다.Add 함수 내에서 로그를 찍어보면, ContextMenu로 호출했을 때 값이 변하는 것을 확인할 수 있지만 Update 에서는 여전히 기본값을 찍어낸다.U# 스크립트가 Udon Behavior 에 감싸져 있어서 그런 지, 아니면 내가 아직 ContextMenu Attribute를 제대로 이해하지 못한 상태라 그런 건지, 원인은 제대로 모르겠다" }, { "title": "🕯️ HTML에서 Jinja 주석 처리 할 때", "url": "/posts/jinja-comment/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2022-06-27 07:45:00 +0900", "snippet": "💎HTML 파일에서 Jinja 코드를 주석처리 할 때 &amp;#60;!–{% Jinja Code %} –&amp;gt;같이 HTML 주석안에 Jinja 코드를 넣으면 주석처리 되지 않는다. {# {% Jinja Code %} #}처럼 Jinja 주석안에 넣어줘야 한다.외부 코드(HTML)와 내부 코드를 분리시키는 Jinja 같은 템플릿 엔진이,문서에서 읽을 수 있는 모든 데이터를 변환하고자 하기 때문에 생기는 문제이 글 같은 경우에는, HTML Entity를 활용하여 코드를 표현하였다." }, { "title": "🌱 블로그 오류 수정", "url": "/posts/DayStone-220627/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-06-27 02:59:00 +0900", "snippet": "🗿 블로그 오류 수정3월부터 블로그가 강제 동결되었었다3월에 옛날 블로그에서 백업해뒀던 글들을 전부 올려보려고 했는데왠지모르게 계속해서 깃 허브 레포지토리 Actions 에서 에라가 생기는 것이다나름 여러 시도를 해봤지만.. 도통 이유를 몰라서 포기하고 한동안 방치해두다가방금에서야 원인과 해결방법을 알게 되었다원인은 옛날 블로그 글들 중 꺾쇠 괄호 사용한 글이었다네이버 블로그에서는 내가 뭘 쓰든 간에 알잘딱으로 치환해줘서 문제가 없었는데깃허브 블로그에서는 내가 쓴 꺾쇠 괄호가 태그로 인식되었던 것이다괄호를 지우고 업로드해보니 잘 동작한다한동안 답답했는데 해방감이 든다블로그도 다시 잘 운영해야겠다참고글" }, { "title": "🌱 뭘해도 자신있지가 않다", "url": "/posts/DayStone-220610/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-06-10 02:36:14 +0900", "snippet": "🗿 뭘해도 자신있지가 않다뭘해도 자신있지가 않다다 의미 없는 것 같다꿈만 큰 것 같다대작병에 걸렸다아무것도 안했지만나는 왠지 힘들다" }, { "title": "🌱 내가 너무 어리다", "url": "/posts/DayStone-220324/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-03-24 03:05:52 +0900", "snippet": "🗿 내가 너무 어리다내가 너무 어린 것 같다.어리석은 짓을, 후회할 짓을 너무 많이했다.그 사건 이후로 깨부할만 했을 텐데도, 나의 대작병이 아직도 났지 않았다.결국 내 모든 창조물은 속없이 껍데기만 커지고내 예상과 달리 사람들은 허영을 보고 기대하며나는 내심 그 기대과 관심에 목말라하면서도허영을 만들어냈다는 죄악감과 언젠가 내 허영이 탄로날 것이라는 불안감에 휩싸인다난 이제 어쩌면 좋을까.연초의 악몽이 다시 떠오르는 새벽이다모든 프로젝트를 끝내고조용히, 작은 것 하나만 바라보고 만들어나가야 겠다" }, { "title": "🌱 존재감", "url": "/posts/DayStone-220218/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-02-18 04:59:00 +0900", "snippet": "🗿 존재감바로 전 일기의 연장선내가 우물 안 개구리였다는 생각이 요즘들어 너무 많이 든다고수들이 너무 많다아니 뭐.. 당연한 일이긴 한데..그냥.. 나도 고수의 자리에 앉고 싶다한 분야의 전문가가 되고 싶다더 공부해야겠다" }, { "title": "🌱 존잘", "url": "/posts/DayStone-220201/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-02-01 20:19:00 +0900", "snippet": "🗿 존잘존잘이 너무 많다여러 분야를 공부하면 할수록 잘하는 사람들이 너무나도 많아 보인다그 아래에서 배우고 싶어도 쉽게 말을 못 걸겠다" }, { "title": "⛏️ VRC 안개 (Fog)", "url": "/posts/USharp-Fog/", "categories": "⛏️Unity, 🕯️VRC", "tags": "Unity, VRC", "date": "2022-01-28 09:48:00 +0900", "snippet": "💎 Fog (유니티 기본 기능)Lighting &amp;gt; OtherSettings &amp;gt; Fog켜두면 카메라로부터 멀어지는 오브젝트들을 흐리게 보이게 만들 수 있음 (점점 Fog Color로 보이는)이때 SkyBox는 흐리게 보이지 않기 때문에, 하늘도 흐리게 만들고 싶다면 Fog Color와 같은 색의 Material을 적용하는 식으로 사용.💎 Udon 으로 접근하기RenderSettings.fog 로 키고 끌 수 있음RenderSettings에 fog 관련 변수들에 접근하고 수정할 수 있음.💎 주의Fog 안켜둔 채로 빌드하면, 게임 내에서 Udon으로 RenderSettings.fog 켜도 적용이 안됌이유는 나도 몰?루. VRC로 빌드할 때 지혼자 설정되는 게 많은 것 같음.아무튼 해결방법으로는 켜둔 채로 빌드하고, Udon으로 월드 들어오자마자 Fog 꺼주는 식으로 사용" }, { "title": "🕯️ 연산 순서에 따른 퍼포먼스 차이", "url": "/posts/Performance-Diff-By-Order/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2022-01-02 12:07:00 +0900", "snippet": "💎연산 순서에 따라 퍼포먼스 차이가 발생한다당연한 말이긴 하지만VS 2022 에서 제안하는 것들 중 도움되는 것이 참 많은 것 같다.230109Short-Circuit EvaluationShort-Circuit Evaluation 에 따른 연산 순서 상의 속도 차이도 존재한다.요약하면 비용이 높은 함수를 뒤쪽에 배치하면 좋다." }, { "title": "🌱 왜 재미없을까", "url": "/posts/DayStone-220102-1/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-01-02 10:59:00 +0900", "snippet": "🗿 왜 재미없을까왜 이렇게 쉬울까던그리드와 스컬은횡스크롤의 강제적 무빙(중력)이 어려움을 느끼게하는 요소라고 본다리스크 오브 레인은아이템을 무한정 얻어 무한히 성장할 수 있지만, 적들도 그에 비례해 시간이 지날수록 무한히 강해져 어렵게 느껴진다엔터 더 건전은탑뷰임에도 제목답게 수많은 총알을 피해야하는 탄막/불렛헬/닷지 류 장르였기에 어렵게 느껴진다내 게임은탑뷰 게임이라 강제적인 무빙도 존재하지도 않고그렇다고 적들은 죄다 근거리에, 탄막이 막 나오는 것도 아니었고스테이지마다 적들은 그대로인데 플레이어의 성장은 운만 따라준다면 무한하다이게 이유인걸까나도 횡스크롤로 바꿔야 할까던그리드 개발자가 탑뷰에서 횡스크롤로 바꾼 이유도 이런 이유에서 였을까?막막하다" }, { "title": "🌱 망했다", "url": "/posts/DayStone-220102-0/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2022-01-02 10:56:00 +0900", "snippet": "🗿 망했다그냥 대차게 망해버렸다." }, { "title": "🌱 연공전", "url": "/posts/DayStone-211224/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-12-24 10:13:32 +0900", "snippet": "🗿 연공전연공전까지 앞으로 이틀과연 그전에 만족할만한 퀄리티로 완성할 수 있을까..끝까지 달려봐야겠다또 포기해서 후회하는 일이 없도록" }, { "title": "🌱 친구", "url": "/posts/DayStone-211222/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-12-22 06:17:20 +0900", "snippet": "🗿 친구중학생 때부터 친구로, 또 사람 대 사람으로 좋아하던 친구가 있다그 녀석은 좀 특별했다뭔가 말로 표현하기 힘든 그게 있었다자기소개 시간에 몇 천명이 이용하던 커뮤니티를 운영한 적 있다고 말하는 것부터 심상치 않다고 생각하긴 했다그 친구는 좀 나쁜 말로 표현하자면.. 나 같은 인터넷 망령이었다나는 평생 나만 하는 줄만 알았던 좀 딥한 인터넷 문화를 알고 즐기는 사람이 또 있다는 사실에 놀랐다또 그 친구는, 원소, 오행 같이 판타지적이고 특별한 무언가에 관심있다거나, 뭔가 자신만의 세계나 작품을 만들고 싶어한다는 점도 나랑 비슷했다그런 이야기를 진지하게든 농담으로든 나눌 수 있는 친구는 그 친구가 유일했다그런 점이 나에게 매력적으로 다가왔다. 친구로서그 친구는 또 노래를 잘하고, 또 하고 싶어하기도 했다자기가 좋아하는 무언가가 확실하고, 자기의 꿈을 이루기 위해 노력하는 모습은 정말 멋지게 보였다내 주변에 꿈이 그렇게 확실했던 사람은 걔가 처음이기도 했다그런 여러 이유 때문에 그 애랑 친하게 지내고 싶었다결국 어떻게 친해졌는지는 기억이 잘 안나지만, 그 친구랑 같은 초등학교를 다닌 또 다른 친구 덕분인지, 아무튼 친하게 지낼 수 있었다그 친구랑 지내는 게 너무 즐거웠다뭔가 인생에 유일하고 든든한 동료를 찾은 기분이었다얼마나 좋았는지, 친구끼리 강남간다고, 그 친구가 가려던 음악전공학교를 단지 그 친구가 간다는 이유 하나만으로 따라가려고 부모님을 매번 설득하곤 했다물론 부모님께서는 비용적인 측면에서, 또 진로적인 측면에서 이에 반대하셨고, 사실 내가 생각하기에도 터무니없는 짓이었기에 그대로 실천할 수는 없었다그렇게 중학교를 졸업하고나서 그 친구는 그 전문 학교에, 나는 일반고에 가게 진학하게 되었다같은 학교에서 매일 만나는 것도 아니고, 서로 같이 하던 게임도 안하게되고, 그렇게 공통 관심사가 없어지다보니 서로 연락할 일이 없어서 자연스레 멀어졌다나는 그게 너무 아쉬웠다그래서 평생 남에게 먼저 연락해본 적 없던 내가, 처음 그 친구에게 몇 번 먼저 연락해보고는 했다그 때 마다 잠깐 말이 트이긴 했지만, 역시 금방 어색해지고는 했다친구 공연까지 찾아가서 응원하고는 했지만, 여전히 다시 그 때 처럼 친해질 수는 없었다그 친구가 나를 어떻게 생각하는 지도 사실 잘 모르겠다내가 눈치가 없기도 하고, 그 친구 성격 상 남을 싫어하는 티를 낼 것 같지도 않고..나 혼자 이러고 있는 게 미친 스토커 짓처럼 생각하고 있을까봐 걱정되기도 하고그래서 지금까지 좀 병신같지만 짝 우정을 하고 있다언제 다시 연락하고 친해질 수 있을 지 모르겠다지금의 인간 관계가 부족한 건 절대 아니지만..그래도 옛날이 그리운 요즘이다" }, { "title": "🌱 진짜 새로운 색", "url": "/posts/DayStone-211218/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-12-18 00:20:00 +0900", "snippet": "🗿 Real New Color미친왁굳형 강의 컨텐츠보다가 알게됐는데이론 상으로는 새로운 색을 볼 수 있다고 한다우리가 볼 수 있는 영역이 가시 광선인데그 이상의 영역을 인지할 수 있게되면, 그동안 보지못한 전혀 새로운 색을 볼 수 있다고 한다너무 흥분된다나는 이게 전혀 불가능한 일인줄 알았는데 이론 상이든 뭐든 그게 가능할 수 있다는 일이라니너무 흥분된다 미친팬치님들이 말해주시기로는이미 자외선 일부는 세포가 반응하고 잇찌만, 각막이 차단하고 있는 것이라고 한다적외선처럼 온도를 볼 수 있는 동물도 있다고 한다강의 내용 중에 캘빈에 관한 내용이 있었는데그 연장선인가?아무튼 너무 들뜬다" }, { "title": "⛏️ 유튜브 재생목록 랜덤재생 사이트", "url": "/posts/Playlist-Randomizer/", "categories": "⛏️Memo", "tags": "", "date": "2021-12-16 09:18:00 +0900", "snippet": "💎사이트 링크 유튜브에서 기본적으로 제공하는 재생목록 랜덤 재생 기능은 알고리즘 문제인지 같은 영상들이 같은 패턴으로 나올 때가 종종 있음 재생목록에 저장된 영상이 많다면, 어떤 영상을 재생할 때 그 주변 영상만 불러오기 때문에, 랜덤 재생 기능을 사용하면 그 주변 영상들 중에서만 랜덤으로 재생하는 문제가 있음 (모든 영상이 정의역이 아님) 해당 사이트는 그런 문제가 없음 " }, { "title": "🌱 색", "url": "/posts/DayStone-211216-1/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-12-16 06:15:00 +0900", "snippet": "🗿 New Color어렸을 때 그런 생각을 함색에 관한 생각인데두 가지임🗿하나는 처음 보는 색에 관한 거임우리가 지금 당장 볼 수 있는 색들 말고전혀 보지못한 새로운 색이 있을까?물론 우리는 빛을 보는 건 맞는데판타지 같은 얘기인건 아는데그래도 우리가 진짜 모르는 그런 색이 있을 지진짜 처음보는 색을 보면 어떤 느낌일까 궁금함색맹인 사람이 무슨 안경을 끼는지 수술을 하는지 하면 색이 보인다고 하던데그렇게 그동안 못 보던 색을 보는 느낌이 진짜 궁금하기도 하고진짜 한 번도 보지못한 전혀 새로운 색을 볼 수 있을 지도 궁금함그냥 그렇다고🗿또 하나는 내가 보는 색이 너가 보는 색하고 같은 건지임하늘이 낮에는 하늘색, 밤에는 검은색이잖슴?근데 내가 생각하는 하늘색과 검정색이너가 생각하는 하늘색과 검정색이 아닐 수도 있다는 거임너는 내가 검은색이라고 생각하는 걸 하늘색이라고 생각하고 있고,나는 너가 하늘색이라고 생각하는 걸 검은색으로 생각할 수도 있는거임그러니까 나는 지금 하늘이 낮엔 하늘색이고 밤엔 검은색이고, 그렇게 생각하고는 있는데그건 내가 어렸을 때 낮의 하늘을 하늘색, 밤의 하늘은 검은색이라고 배워서 그 색과 단어를 매칭을 했을 뿐임실제로 내가 보는 색이 너가 보는 색이랑 같은 지는 모름그래서 우리가 서로 보고 있는 색이 다를 수도 있지 않을까? 하는 생각임그러니까 색이랑 단어를 구분지어서 생각해야함말로 설명하기 어렵네그림으로 그려보면이런 거임너의 시각에서 본 너와 나의 하늘색임너가 보는 낮의 하늘은 하늘색임우리 모두 어렸을 때 그렇게 배웠잖슴근데 내가 보는 낮의 하늘이, 너가 보기에는 검정색 일 수 있다는 거임하지만 나는 니가 보기에 검정색인걸 하늘색이라고 알고 있음왜냐면 내가 보는 낮의 하늘은 너가 보기에 검정색이지만, 아무튼 나는 낮의 하늘은 하늘색이라고 배웠으니까.여기서 내 생각을 다시 한 번 말하자면, 우리가 서로 보고 있는 색이 다를 수도 있다는 거임.설명을 헷갈리게 하늘이랑 하늘색 가지고 해서 조같을 수 있는데그림 수정하기 귀찮음 ㅈㅅ근데 오히려 내 생각을 잘 표현하는 것 같음그니까 나는 낮의 하늘이 니가 보기에 검정색인 세상을 보고 있음.근데 낮의 하늘색을 우리가 하늘색으로 부르기로 약속했잖슴?그래서 나는 니가 보기엔 검정색인 낮의 하늘을 하늘색이라고 배웠음.그래서 나의 하늘색은 니가 보기에 검정색임.하지만 이걸 알 방법은 없음우리가 서로 정신을 바꿔도 너가 보는 낮의 하늘색은 하늘색일 거임우리의 눈과 뇌가 생각하기에 낮의 하늘색은 언제나 그 눈과 뇌가 생각하는 하늘색이거든우리가 서로 정신을 바꾼 후 너가 보는 세상의 낮의 하늘은, 우리가 서로 정신을 바꾸기 전 너가 생각하던 검정색이지만우리가 서로 정신을 바꾼 후 너의 뇌는 그런 낮의 하늘을 하늘색이라고 인지하는 거임이야기가 좀 샜는데아무튼 결론은 우리가 보는 색이 서로 다를 수 있다는거임그게 전혀 새로운 색이든, 내가 보고 있는이 섞인거든 간에 말임" }, { "title": "🌱 찬 바람이 분다", "url": "/posts/DayStone-211216-0/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-12-16 05:16:00 +0900", "snippet": "🗿 Chill가끔 음악을 듣다보면정말 죽고 싶어지는데, 또 동시에 기분은 좋아지는 그런 음악들이 있음처음 그런 느낌을 받은 음악은 My Way초등학생 때 피아노 학원을 다닐 때학원 연습방안에서 이 음악을 연주할 때마다 죽고 싶어졌음그래서 매번 나 혼자 건반치고 지 혼자 울고는 했음 ㅋㅋㅋ…이게 적다보니 좀 정신병자 같기도 한데아무튼 처음 이 느낌을 받은 건 그 때 부터였음그 때는 근데 기분이 좋지는 않았던 것 같음말로 표현하기 힘들지만 그 때 그 감정에서 더 나아간 감정이 지금 느끼는 감정인 것 같음 지금까지 그런 감정을 느껴본 음악들은 이런 음악들임더 있기는 함공통점이 있는지 모르겟음대부분 좀 우울한 분위기인 것 같기는 한데, 또 다 그런 것 같지는 않고코드가 비슷한건지, 다 마이너 코드인건지..음악을 잘 몰라서 ㅋㅋ..유일하게 설명할 수 있는 공통점은 내가 그런 감정을 느낀 음악들이라는 것 하나 뿐무튼 그럼왜 죽고 싶어지는 건지는 모르겠는데왜 기분이 좋아지는 건지는 나름 생각해봄죽고 싶어져서인것 같음왜 죽고 싶어지는 건지는 모르겠는데, 아무튼 죽고 싶어져서 기분이 좋아지는 것 같음뭔 개소리냐면아토피 같은 거임아토피난 곳 긁다보면 기분이 좋아질 때 있음아 모기 물린 곳 긁을 때도 비슷함아토피 긁으면 아픈 거 잊으려고 도파민 나온다고함이 감정도 그런 거 같음왠지 모르겠지만 아무튼 죽고 싶어지는데뇌가 아 병신아 죽지마 하고 도파민이 쥰내 나오는 거임그런 느낌인 것 같음적고보니 병신같네아무튼 나는 그렇게 생각함전에 그런 감정을 부르는 용어를 만들었음남 보여주기 부끄럽기는 한데,‘찬 바람이 분다’ 임저런 음악 듣다보면 기분 좋은 소름 돋을 때 있음오한은 아님 뭔가 다름뭔가 박하 사탕처럼 뭔가 올라오면서 기분 좋음그런 느낌을 내 나름대로 표현해본거임지금은 음악말고도 그냥 저런 느낌 받으면 찬 바람이라고 생각하고는 함" }, { "title": "⛏️ 왁굳형 캘린더 달력 프로그램 - DesktopCal", "url": "/posts/DesktopCal/", "categories": "⛏️Memo", "tags": "", "date": "2021-12-14 17:17:00 +0900", "snippet": "💎 왁굳형 캘린더 달력 프로그램 https://www.desktopcal.com/ 클라우드 연동을 통해, 다수의 PC, Mobile 환경에서도 동기화가 가능하다. 왕아" }, { "title": "⛏️ 메모 - 마우스 지 혼자 스크롤 될 때", "url": "/posts/Mouse-Scroll-Issue/", "categories": "⛏️Memo", "tags": "", "date": "2021-12-14 17:07:00 +0900", "snippet": "💎참고 링크 Window 검색 창에서 &#39;장치 관리자&#39; 검색 &#39;마우스 및 기타 포인팅 장치&#39; 에서 지금 사용하는 마우스가 아닌 마우스 찾기 &#39;디바이스 사용 안함&#39; 혹은 &#39;디바이스 제거&#39; 귀찮다면 전부 제거 후, 마우스 USB 뺐다 끼기 정보 : &#39;HID&#39; &amp;gt; &#39;Human Interface Device&#39; " }, { "title": "🌱 종강을 한 나", "url": "/posts/DayStone-211214/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-12-14 16:02:00 +0900", "snippet": "🗿 JongGang그저 기모찌한 나공부 안한 과목이 꽤 있어서 학점 잘 나올지 모르겠는데,아무튼 뭐 끝나서 좋다.이제 딱히 밖에 나갈 일도 없으니까방구석에서 귤 까먹으면서 게임하고 방송보고 그런 히키코모리 같은 삶을 살 수 있다.코로나는 물론 없어져야 하는 게 맞는데..그래도 별개로 코로나 때문에 비대면이여서 이번 한 해는 야무지게 놀았다.코로나 없어져도 그냥 평생 비대면이면 좋겠따내년도 제발 비대면이라면 좋겠따…" }, { "title": "🌱 일단 해보자?", "url": "/posts/DayStone-211121/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-11-21 16:58:00 +0900", "snippet": "🗿 Just Do ‘IT’요즘따라 인터넷에서 자주 보는 개념이 있다.세부 의미는 죄다 다르지만, 추상화된.. 개념은 비슷하게 느껴진다. 공부는 정통대로, 하지만 구현은 꼭 정통일 필요는 없음 완벽주의를 버려야한다. 일단 동작하고 고쳐야함. ~~ 코드가 더러워도 좋으니 일단 완성을 해라, 코드 퀄리티는 완성보다 우선시되면 안된다 사람은 이해라는 건 못하지만, 흥미를 가질 수 있다 내부 아키텍처는 직접 게이트를 설계하려는 사람에게만 의미가 있으며, 게이트의 내부 구조를 신경 쓰지 않고 추상적인 규격 부품으로만 활용하려는 사람에게는 인터페이스 단계만으로 충분하다. 이런 것들그러니까 뭐랄까요즘 내 눈에 보이고 들리는 것들이 죄다 뭔가..(모듈화된 무언가를 만드는 것) 처럼 느껴진다.API 같은.. 느낌?내부 사정은 질척질척한 스파게티든 뭐가 됐든일단 뭐라도 되게 만들어라..뭐 대충 그런 느낌..내 생각을 나도 잘 모르겠지만아무튼 요즘 뭔가.. 영감을 얻고 있다 이런 개념들 속에서" }, { "title": "🌱 너무 뜨거울 필요는 없다", "url": "/posts/DayStone-211114/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-11-14 10:29:00 +0900", "snippet": "🗿 Water And Life커피 물이든 목욕 물이든팔팔 끓을 정도로 뜨거울 필요는 없다." }, { "title": "🌱 인디 게임 페스티벌 IGF 2021 가방!", "url": "/posts/DayStone-211026/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-10-26 00:00:00 +0900", "snippet": "🗿 IGF-2021-Bag전에 인디 게임 페스티벌 2021에서 이벤트 하나에 참가해, 가방 하나를 받게되었다.그리고 방금 그 택배가 왔다!🗿 가방사진이 전부라 가방 이쁘다는 거 말고든 뭐 딱히 더 설명할건 없다!택배 봉투보니 10월 4일에 배송했었네. 11월 즈음에 올거라고 했는데, 꽤 빨리왔다.나중에 저 가방에 유니티 티샤쓰 입고 인디 게임 페스티벌도 한 번 나가보고 싶다.일단 언능 시험 기간부터 끝나면 좋겠다." }, { "title": "🌱 Git Journal Test", "url": "/posts/DayStone-211021/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-10-21 05:28:21 +0900", "snippet": "🗿 시도일기 쓰고 싶을 때 데스크탑을 켜야만하는 귀찮음폰으로는 할 수 없을까?그래서 설치해본 앱 테스트🗿 결과오 된다!파일명과 YAML만 수정하면 데스크탑에서 작성한 것과 똑같다!다 좋은데 글을 수정할 때마다 자동으로 커밋을 하다보니 커밋이 지저분해지는 단점은 있는 것 같다.." }, { "title": "🌱 급, 꿈", "url": "/posts/DayStone-211020/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-10-20 05:05:56 +0900", "snippet": "🗿 급요즘 너무 급한 것 같다.남은 시간은 짧게, 흐르는 시간은 빠르게만 느껴진다.이제 안정을 취해야 한다.여유를 가지고 느려지자는 게 아니다.빠르게 느껴지는 시간이 맞춰, 나 역시 빨라져야 한다.더 이상 급해지지 않게, 나란히 나아가야 한다.🗿 꿈하고 싶은 게 참 많고 많았는데, 요즘 잊고 살고 있었다.그렇게 할 일이 많은 것도 아니었는데, 왜 이렇게 바쁘게만 느껴졌을까?친해지고 싶은 사람이 많다. 만들고 싶은 게 너무 많다.아, 까짓것 한 번 해보죠 Like 이카리 신지" }, { "title": "🌱 대학, 긴장", "url": "/posts/DayStone-211019/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-10-19 04:08:00 +0900", "snippet": "🗿 대학매주 월요일과 수요일,나는 이번 학기 유일한 대면 수업을 듣기 위해 KTX와 버스를 타며 먼 거리를 통학한다.매번 캠퍼스 정문을 드나들 때 마다, 나는 울어버릴 것만 같은 기분이 든다.힘들고 졸린 것 따위가 그 이유는 아니다.대학에 대한 후회.내가 지금 이 대학에 온 것을 후회한다기보다는,내가 원하던 대학을 가기 위해 끝까지 도전하지 않은 것.그것에 대한 후회 때문이다.입시 설명회, 학과 체험 같은 행사를 다니며 눈에 익혔던 그 대학 캠퍼스가,지금 내가 다니는 이 대학의 정문을 지날 때 마다 눈에 아른거린다.왜 끝까지 도전하지 않았을까.왜 중간에 포기했을까.왜 자기합리화하며 그저 되는대로 이 대학에 왔을까.정말 그날 아무 생각없다가도 딱 그 정문을 지나는 순간,뭔가 복받치는, 턱 막힌 듯한 그 감정을 주체할 수가 없다.재수해야하나.. 편입해야하나.. 그런 생각이 들다가도,지금 이 대학 그대로 졸업하고 군대 다녀와도 금방 20대 후반이 되어버리는데,재수하고 편입하고 나면.. 정말 그렇게 되면 난 너무 늦어버리는 것만 같다.그래서 나는 올해 그 대학을 다니고 있어야만 했다.그래서 작년 그 도전을 포기하지 말았어야만 했다. 그게 너무 후회된다.… 시간이 너무 짧다올해 들어서 ‘어른들 말씀 틀린 게 하나 없었구나’ 하는 생각을 참 자주 하게 되는 것 같다.🗿 긴장오늘은 대면 수업도 있었지만, 온라인 실시간 수업도 있는 날이었다.그리고 맙소사, 나는 그 수업에서 카메라를 켜둔 채 꿈뻑 졸아버렸다.거진 2/3쯤 눈감고 고개를 까딱까딱 흔드는 그 모습을 교수님께서 보셨다.하하. 정말 너무 창피했다.사실 나는 이미 저번에 그 수업에 지각한 전적이 있었다.그 때 교수님께 연신 사과드리며 수업 열심히 듣겠다는 포부를 밝혔었는데,보기좋게 그 말을 거짓말로 만들어버렸다.평소 나를 좋게 봐주시던 교수님이셨는데, 그 좋은 이미지를 깨뜨린 것.그 점이 나를 더 창피하게 만들었다.언제부터였을까.몇 년 전부터 나는 긴장하지 않는 사람이 되어 있었다.시험이 다가와도 긴장되지 않았고,과제 제출 기간이 다가와도 긴장되지 않았다.절대 좋은 일이 아니었다.나는 그렇게 부지런한 사람이 아니었다.학교 내신 공부를 열심히 해본적도 없고, 과제를 미리미리 해본 적도 없다.그런 상태에서 긴장까지 안하게 되니, 끝까지 미루고 미루다가 결국 당일이 되고 나서야 지난 나를 후회했다.사람은 적당히 긴장할 줄 알아야한다.긴장할 줄 알아야, 미래를 대비할 수 있다.긴장할 줄 모르면, 분명 뭔가 실수하게 된다.나는 긴장하고 싶다." }, { "title": "🕯️ 비트 연산자, 시프트 연산자", "url": "/posts/Bitwise-Operator/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2021-10-08 19:35:00 +0900", "snippet": "💎 공통 정수형 데이터의 연산만 가능 실수형 데이터는 불가능 💎 비트 연산자 (Bitwise Operator) &amp;amp; AND, 비트 AND 연산자 양쪽 피연산자의 각 비트를 비교하여 양쪽 모두 1이면 1, 아니라면 0으로 설정. 예시 - ```c int x = 3; // 3, ...0011 int y = 5; // 5, ...0101 int z = x &amp;amp; y; printf(&quot;%d&quot;, z); // 1, ...0001``` ^ XOR, 포괄적 비트 XOR 연산자, (eXclusive OR) 양쪽 피연산자의 각 비트를 비교하여 서로 다르면 1, 아니라면 0으로 설정. 예시 - ```c int x = 3; // 3, ...0011 int y = 5; // 5, ...0101 int z = x ^ y; printf(&quot;%d&quot;, z); // 6, ...0110``` | OR, 배타적 비트 OR 연산자 양쪽 피연산자의 각 비트를 비교하여 한 쪽이라도 1이면 1, 아니라면 0으로 설정. 예시 - ```c int x = 3; // 3, ...0011 int y = 5; // 5, ...0101 int z = x | y; printf(&quot;%d&quot;, z); // 7, ...0111``` Shift + Enter 위에 있는 키 ( ₩ ) 로 입력할 수 있음. ~ NOT, 비트 보수(또는 비트 NOT) 연산자 피연산자의 비트 보수를 만듦 (0에서 1, 1에서 0으로 수를 뒤집음) 예시 - ```c int x = 15; // 15, ...0000&#39;0000&#39;0000&#39;1111 printf(&quot;%d&quot;, ~x); //-16, ...1111&#39;1111&#39;1111&#39;0000``` 여담으로, ~ 는 단항 산술 연산자로 분류됨. (MSDC 기준) 💎 비트 시프트 연산자 주의 할 점 비트 시프트 연산자로 수행된 변환은 오버플로, 언더플로 조건을 지원하지 않음. 때문에 연산 결과가 첫 번째 피연산자 형식으로 표현할 수 없는 경우, 오류가 발생하지 않으며, 정보가 손실될 수 있음. &amp;lt;&amp;lt; 첫 번째 피연산자를 두 번째 피연산자 만큼 왼쪽으로 이동. 계산에 오버플로가 없는 경우, 첫 번째 피연산자에 2두 번째 피연산자 를 곱한 값과 같음. 시프트 이후 비워진 비트는 0 으로 설정됨. 예시 - ```c int x = 15; // 15, ...0000&#39;0000&#39;0000&#39;1111 int y = 4; int z = x &amp;lt;&amp;lt; y; printf(&quot;%d&quot;, z); // 240, ...0000&#39;0000&#39;1111&#39;0000 // 15 * 2^4 = 240``` &amp;gt;&amp;gt; 첫 번째 피연산자를 두 번째 피연산자 만큼 오른쪽으로 이동. 첫 번째 피연산자가 부호가 없거나, 음수가 아닌 경우, 2두 번째 피연산자 로 나눈 값과 같음. 시프트 이후 비워진 비트는 첫 번째 피연산자의 형식에 따라 채워짐. 부호 없는 unsigned 형식이면, 0으로 채워짐 (최상위 비트 설정 해제) 부호 있는 형식이라면 부호 비트가 복사되여 채워짐. 양수 0, 음수 1 (최상위 비트 설정된 채 유지) 예시 - ```c int x = 240; // 240, ...0000&#39;0000&#39;1111&#39;0000 int y = 4; int z = x &amp;gt;&amp;gt; y; printf(&quot;%d&quot;, z); // 15, ...0000&#39;0000&#39;0000&#39;1111 // 240 / 2^4 = 15``` 음수 값을 오른쪽으로 이동하면 원래 값의 반을 정수로 내림한 값이 생성됨. -253 (11111111 00000011) 을 오른쪽으로 1비트 이동하면, -127 (11111111 10000001) 이 생성됨. 253 (00000000 11111101) 을 오른쪽으로 1비트 이동하면, 126 (00000000 01111110) 이 생성됨. 💎 할당 연산자 다른 연산자들과 마찬가지로 할당 연산자를 통해 값 변형과 할당을 동시에 할 수 있음. &amp;amp;= ^= |= ~ 는 단항 산술 연산자라 할당 연산자가 존재하지 않음. &amp;lt;&amp;lt;= &amp;gt;&amp;gt;= 💎 참고 MSDC Wikipedia - 비트 연산자 Wikipedia - 산술 시프트 Wikipedia - 논리 시프트비트 마스크&amp;amp; = ?웹에서 계산기 만들기" }, { "title": "🌱 인디 게임 페스티벌 IGF 2021", "url": "/posts/DayStone-210905/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-09-05 00:00:00 +0900", "snippet": "🗿 IGF-2021구글 플레이 코리아는 2016년부터 매년 인디 게임 페스티벌을 개최하고 있다.이번 인디 게임 페스티벌 2021은 특이하게 온라인으로, 그것도 귀여운 메타버스 세상에서 진행되었다.이미 수상식이 다 끝나고 (9월 4일), 뒤늦게 소식을 접하게 된 나는 (9월 4일 새벽), 늦게나마 접속하여 출품된 게임들과 메타버스 세상을 구경했다.🗿 구글 인디 게임 페스티벌 2021앞서 언급했지만, 이번 인디게임 페스티벌은 웹상의 메타버스 세상에서 진행되었다.맵은 한국, 일본, 유럽 지역 별로 있으며, 크게 시상식이 했던 무대와 출품된 게임 부스들로 구성되어 있다.유저는 맵에서 출품된 게임도 구경하고, 다른 유저나 개발자들과 소통하고, 그냥 정처없이 돌아다닐 수도 있다.현실의 오프라인 게임 행사들에서 할 수 있는 모든 것들을 온라인으로 구현해두었다.코로나 이전의 인디 게임 페스티벌과 다른 점은 온라인이라는 점 뿐이다.메타버스의 개념이 정확히 뭔지는 잘 모르겠지만, 아무튼 이렇게 현실을 온라인으로 구현해 내는 것이 아닌가 같다.무대는 이렇게 생겼다.이곳에 게임 개발자 분들과 일반 유저 분들이 모여 행사와 시상식이 진행되었다고 한다.이미 모든 행사와 시상식이 끝난 후이기 때문에, 스크린에서는 시상식에서 진행되었던 실시간 스트리밍으로 영상이 재생되고 있다.위 사진은 유럽에서 진행된 시상식의 한 장면이다.미리 알고 있었다면 여러 개발자 분들과 이야기도 나눠보고, 비록 온라인이지만 함께 시상식도 참여하고, 여러 가지로 의미있는 경험이었을텐데, 참여 못한 것이 너무 아쉬울 따름이다.게임 부스는 이렇게 생겼다.하트 버튼과 게임 정보 버튼, 발표 영상 버튼, 그리고 구역 내의 유저들끼리만 소통 할 수 있는 비밀 채팅 구역으로 구성되어 있다.그 외에도 시상식에서 수상한 게임들을 보여주는 구역이나, 다른 맵(한국, 일본, 유럽, 네트워킹 존)으로 이동 할 수 있는 블랙홀(포탈) 구역 그리고 비밀의 아이템 가게 등이 있다.비밀의 아이템 가게는 위와 같이 생겼다.상호작용해보면 위와 같이 50개의 아이템을 모을 시 어떤 선물을 준다고 한다.여기서 말하는 아이템은, 맨 처음 아바타를 만들 때 사용했던 치장 아이템을 말한다.여기서는 Virtual Swag 라고 부른다. Virtual Swags 는 다양한 경로로 얻을 수 있었다.게임 정보 n회 보기, 이모티콘 n회 사용하기, 모든 맵 방문하기 같은 여러 업적 달성시에도 얻을 수도 있고,맵 곳곳에 있는 선물 상자나 게임 장르 아이콘이 그려진 깃발, 특별한 오브젝트들과 상호작용을 통해 얻을 수도 있고,일부 NPC들과의 대화를 통해서도 얻을 수 있다.이런 방법들로 새로 50개의 Virtual Swag를 찾아, 비밀의 아이템 가게로 가면 몇 자리의 코드를 알려주는데,이 코드를 통해 인디 게임 페스티벌 가방 을 받을 수 있다!어떤 NPC가 선착순 300개라는 말을 했던 것 같으니, 사이트가 닫히기 전에 받아가면 좋을 것 같다.컬렉션모든 Virtual Swag 를 찾아냈다!만남모든 Virtual Swag 를 찾은 후, 돌아다니다가 JOX Development 의 게임 디렉터, Denys 를 만났다.Denys 는 유럽 IGF에 Towers 라는 게임을 출품했는데, 그 게임을 소개 받았다.평소 퍼즐 게임은 선호하지 않았는데, 나름 재밌는 게임이었다.영어는 잘못하기도 하고 자신도 없어서 여러 질문을 하기는 하지는 못했지만, 좋은 경험이었다.나도 언젠가 플레이어가 아닌 개발자로서 IGF에 참여하고 싶다고 마음먹게 되었다.후기웹 상에서 진행되는 행사라 그런지, 렉이 좀 많이 걸리긴 했다.찾아보니 지난 5월에 열린 개발자 컨퍼런스 Google I/O 에 이 메타버스 세상을 이미 한 번 선보였었다.간혹 이렇게 선물을 언급하는 언급하는 NPC가 있었다.NPC를 통해 우리나라에서 처음 열렸다는 사실을 알게되었다.이번엔 우리나라뿐만 아니라 일본과 유럽에서도 열렸는데, 전세계로 확대되면 인디 개발하시는 분들에게나 좋아하시는 분들에게 반가운 소식일 것 같다.마지막 Virtual Swag 하나가 도저히 안보여서 참고했던 파일이다.웹 브라우저의 개발자 도구 (F12) 로 찾아냈었다.숨겨져있지는 않아서 쉽게 다운로드 할 수 있었다.셀카찍기 버튼으로 찍은 스크린샷이다.바로 네트워킹 존의 모습이다.따로 게임 부스는 없었고, 타이밍에 맞춰 밟으면 소리가 나는 타일들이 있었다.또 Virtual Swags 를 주는 NPC나 오브젝트가 많이 배치되어 있었다.9월 4일 새벽에 채팅이 닫혔다.개발자분들 뿐만 아니라, 구글 관계자나 스태프도 가끔 볼 수 있었다.나중에 가방이 도착하면 글을 또 써봐야겠다." }, { "title": "🌱 0년차 게임 개발", "url": "/posts/DayStone-210901/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-09-01 00:00:00 +0900", "snippet": "🗿 Book-Amateur-Game-Development텀블벅 링크새로운 책을 구매했다.0년차 게임 개발 이라는 책이다.텀블벅에서 펀딩을 진행했던 프로젝트의 책인데,나는 펀딩을 통해 구입하지는 않았고, 펀딩이 끝난 뒤 정식 출판이 되었을 때 인터넷으로 따로 구입했다.그래서 그런지 표지가 펀딩 당시와는 많이 다르다.개인적으로는 펀딩 때의 표지가 더 마음에 든다.내가 깔끔한 ‘블랙 - 화이트’ 색 조합을 좋아하는 것도 있지만,펀딩 표지가 리미티드 에디션이 된 것도 더 끌리는 이유 중 하나인 것 같다.이 책을 구입하게 이유는 크게 두 가지다.하나는 이 책이 게임 개발 스킬이 아니라, 게임 개발과 개발자에 더 관점이 맞춰진 책이여서다.이 책 구입 당시, 나는 피, 땀, 픽셀 이라는 책을 굉장히 인상깊게 읽었었다.지금이야 (2022년 9월) 개발과 개발자에 관한 책들이 여럿 나오고 있는 추세지만,당시엔 피, 땀, 픽셀 을 포함한 몇 권의 책 말고는 전부 스킬 책이었다.스킬 책 보다 가볍게 읽을 수 있는 게임 개발 책이 많이 없던 것에 대해 갈증이 있던 와중,마침 이 책을 찾게 된 것이었다.또 하나는.. 이 책이 청강대 학생들의 이야기를 담은 책이여서다.청강대 학생들의 책을 산다고 청강대에 다닐 수 있는 건 아니지만,그냥 청강대랑 관련됐다는 그 사실만으로 나에겐 특별하게 느껴졌다.대학에 대한 미련이 아직 많이 남아있다.이런 뒷 이야기도 있었다.첫 메세지를 전한 지 6개월이 지났음에도 불구하고,나를 잊지않고 메세지를 보내준 것이 나에겐 큰 감동이었다." }, { "title": "🗿 블로그를 새로 만들었습니다.", "url": "/posts/Github-Blog/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-08-30 00:00:00 +0900", "snippet": "안녕하세요.블로그를 새로 만들었습니다.이전 네이버 블로그의 글들도 이 블로그에서 확인하실 수 있습니다. (몇몇은 수정되었습니다.)블로그는 아래 주제들을 다룹니다. 사색 일기 게임 개발 프로그래밍정말 누가 볼까 싶지만, 한 명에게라도 도움 되는 블로그가 되면 좋겠습니다. 존경하는 어느 교수님 말씀에 영감을 받아.. " }, { "title": "🕯️ InvalidOperationException: Collection was modified; enumeration operation may not execute.", "url": "/posts/Collection-Was-Modified/", "categories": "⛏️Memo, 🕯️Computer", "tags": "", "date": "2021-08-13 22:45:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠foreach로 List를 돌다가, 그 List의 요소가 삭제되거나 추가되어 변경되면 생기는 오류삭제 할 경우 요소의 인덱스를 기억해서 밖에서 지우던지, 삭제 후 바로 break로 나와주던지 해야함.참고" }, { "title": "🌱 생각을 적어주는 기계, 어려운 글쓰기", "url": "/posts/DayStone-210410/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-04-10 17:10:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠오랜만에 hugspa님 블로그를 들어갔다생각을 적어주는 기계나에게도 정말 필요한 것 같다​나도 온갖 잡 생각을 많이한다​수업은 전부 비대면이고하필 또 내가 집돌이라 집 밖에 나가질 않는데​그럼 집에서 할게 뭐 많나그냥 게임하고 유튜브보고그러다 지치면 온갖 잡 생각을 하게 되는 것이다​하도 그런 생각들을 하다보니생각을 정리하고는 싶은데​막상 글로 적어 정리하자니 마음같지가 않다​내 머리 속에서 내 경험들을 바탕으로 한 생각이다보니생각을 정리하려면, 먼저 그 생각이 나오게 된 경험이나 생각들을 먼저 정리해 적어야 한다그럼 온전히 처음 정리하고자 한 생각에 집중하지 못하고 다른 길로 새버린다​생각의 여행을 하는 것이다한 생각을 하다가 다른 골목으로 빠지게 되고그 생각을 하다가 또 다른 골목으로 빠지게 되고그러다보면 완성된 생각, 이파리는 하나도 없고 가지만 많은 앙상한 나무가 되는 것이다​정신차리고 하나의 생각만을 글로 정리하게 될 때, 그 생각에 대한 내 생각이 달라지는 경우도 있다내가 맞다고 옳다고 생각했던게 적고 보니 틀린 것 같다고 느껴질 때가 많다​그리고 현재 그런 상황은 아니지만, 아무래도 블로그의 특성상 불특정한 다수의 타인이 내 글을 볼 수도 있기 때문에나의 생각이 일반적인 타인의 입맛에 맞추려고 자꾸만 바뀌려고 한다​그런 시행착오를 겪고 어떻게든 정리한 글을 나중에 보면 또 그렇게 이상할 수가 없다​아 이 생각은 좀 달라졌는데이 문장은 좀 더 자연스럽게 바꿔야겠는데하고 수정을 열 번이고 스무 번이고 하게 된다​글을 쓸 때에도 고민에 고민을 걸쳐 수정을 그렇게 많이 하는데하필 블로그 글은 발행 후에도 수정이 가능하다보니내 블로그에는 처음 발행한 이후 그대로의 모습을 유지한 글이 하나도 없다모두 수정에 수정, 또 수정에 수정을 거친다​또 내가 나름 내 생각, 내 철학, 내 사상, 나 그자체라고 생각했던 것들이다시보니 정말 바보같고 당연하고 아무것도 아니게 보인다​하긴 뭐맨날 방구석에서 컴퓨터만 붙들고 사는 내가무슨 대단한 생각을 무슨 필력으로 정리해 쓸 수 있겠냐만은​나는 내 생각이 다른 사람은 몰라도 자기자신에게 있어서는 가치있다고 생각하고나는 내 생각을 정리할 수 있는 방법은 깊은 명상이 아니라, 종이나 컴퓨터 문서로 정리하는 것이라고 생각하기 때문에내가 여기에 시간을 투자한 만큼의 결과가 나오지 않는 것이 속상한 것이다​그래서 나는 생각을 적어주는 기계가 필요하다​그런 기계가 있다면계속 생각해봤던 생각도, 내 문체가 아닌 글을 보는 것을 통해, 내 생각이 맞는지 틀린지 객관적으로 볼 수 있지 않을까그런 생각을 했다​hugspa님의 글을 보며 내가 글을 참 못쓴다는 생각도 했다​내가 위에 늘어놓은 불평불만은 사실 hugspa님의 단 두 문장으로 줄일 수 있다​’ 생각 한 것을 종이장에 적으려면 생각과는 다르게 적혀버리고 만다. 그게 싫다.’​이 분은 나와 다르게 참 생각을 잘하고 글을 잘 쓰신다.​난 어쩌면 잡생각을 하다가 잡잡생각을 하기 때문에생각을 쉽게 정리하지 못하는 것일지도 모른다​생각을 좀 단순화시키면, 글을 좀 단순화시키면 되는 걸까책을 많이 읽어야 하는 걸까​생각하는 연습, 글쓰는 연습을 더 해야겠다" }, { "title": "🌱 ncase.me", "url": "/posts/DayStone-210330/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-03-30 04:50:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠https://ncase.me/개인적으로 좋아하는 사이트입니다.이분이 만드신 게임은 모두 여운이 있는 것 같습니다.아래 몇몇 게임을 링크해두었습니다.(몇몇 게임은 유튜브에서 한 번쯤은 보신 게임일 것 같습니다.)https://ncase.me/door/https://ncase.me/trust/https://ncase.itch.io/wbwwb We Become What We Behold by Nicky Case! a game about news cycles, vicious cycles, infinite cycles ncase.itch.io " }, { "title": "🌱 싱크", "url": "/posts/DayStone-210329/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-03-29 05:11:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠오늘 처음 Async (비동기) 를 공부했다.사실 책 ‘이것이 C#이다’ 에도 수록되어 있는 내용이긴 하지만,게을러서 몇 년째 거기까지 진도를 못나가고 있다. 하하그리고 동시에 Sync (동기) 도 맛봤다.Sync.. Sync.. 싱크..?헐 내가 알고 있던 싱크가 바로 이 싱크였다.그냥 신기하고 재밌어서 기록하고 싶었다." }, { "title": "🌱 재밌는 교수님", "url": "/posts/DayStone-210326/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-03-26 06:45:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠영상 강의를 듣던 중, 믿을 수 없는 장면을 보았다.​교수님께서 인터넷을 열었는데 뉴스엔 메르스가, 투데이에는 6월 15일이 써져있었다.나는 2015년 6월에 만들어진 강의를 2021년 3월에 보고 있다.​그래 뭐 그럴 수 있다.똑같은 내용, 똑같이 만드는 건 비효율적일 수 있다.​그래도 날짜 안보여주려고 작업 표시줄 숨겨두실거면,하다못해 그 장면이라도 다시 촬영하시는 성의라도 보이시지..‘2015년 1학기’ 라는 폴더 좀 가려주시지..즐겨찾기에 당당하게 위치한 ‘공짜영화 무료다운 자료실’ 은 덤이다.​그런데 이게 다가 아니다.​도대체 과제로 낸 문제를 영상 강의에서 단 한 번도 언급되지 않은 내용으로 출제하는게 말이되나?표가 아닌 이미지 파일에 X표시를 하라는게 말이되나?표가 아닌 이미지 파일의 빈칸에 답을 써넣으라는게 말이되나?​의심되는 것이 여간 한 두개가 아니다.누가봐도, 아무리봐도 프린트해서 나눠 줬던 과제물을 다시 확인도 하지 않은 채 그대로 올린 것이다.​그래도 수업 내용은 알차다고 생각해서 좋게 생각했던 교수님이었는데,한 순간에 그 호감이 비호감으로 바꼈다.​일개 학생 주제에 어쩌라고 한다면 뭐라 할 말은 없다.내 잘못이다.공부를 열심히 해서 좋은 대학에 갔어야 했다. 하하" }, { "title": "🌱 넷플릭스, 애니메이션 검열", "url": "/posts/Netflix-Censorship/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2021-03-25 09:13:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠넷플릭스에서 애니메이션을 보고 있었는데, 정말 뜬금없이 검열이 된 장면이 있었습니다.스토리 게임의 중요한 장면에 몰입하고 있는데, 카톡/디스코드 알림이 오는 것만 같았습니다.그만큼 한순간에 몰입이 깨졌습니다.​좀 짜증 났습니다.도대체 왜 이렇게 검열을 해대는 거지? 궁금해졌습니다.대충 찾아보니 국내 넷플릭스의 경우 다음과 같은 과정으로 애니메이션을 가져온다고 합니다. (오피셜은 아니지만, 통용되는 정보입니다)​ 1. 먼저, 영상을 심의하여 등급을 지정하는 영상물등급위원회 (이하 영등위) 가 있습니다. 영등위는 영상을 검사하고 전체 이용가, 12세, 15세, 18세 (청소년 시청 불가) 같은 시청 등급을 지정합니다. 즉, 수정/검열은 하지 않습니다. ​또한, 방송법을 규정하고, TV에서 이미 방영된 영상을 심의하는 방송통신위원회와 방송통신심의위원회 (이하 방통위) 가 있습니다.TV는 다른 기관이 아닌, 방송국 스스로 직접 방영할 영상에 대한 내부 심사, 수정, 검열을 통해 자율적으로 시청 등급을 지정하고 방영할 수 있습니다.방통위는 그 후, 이미 방영된 영상을 심의하는 것이기 때문에, 영등위와 마찬가지로 영상에 대한 직접적인 수정/검열은 할 수 없습니다.대신, 만약 방영된 영상이 방송법/방송 심의 규정을 지키지 않았다면, 해당 영상을 방영한 방송국에 규정을 어긴 정도에 따른 조치를 내릴 수 있습니다.​&#39;의견 제시&#39;, &#39;권고&#39;, &#39;주의&#39;, &#39;경고&#39;, &#39;과징금&#39; 과 같은 조치가 있으며,방송국은 조치와 별개로 벌점을 받게 되고, 그런 벌점은 방송평가점수에 반영됩니다.만약 방송국이 지정한 시청 등급이 적절하지 않다고 판단될 경우, &#39;등급 조정&#39; 을 요청할 수도 있습니다.​ 2. 해외 애니메이션을 국내에서 방영하고 싶은 국내 애니메이션 방영사가 있습니다. 국내 애니메이션 방영사가 애니메이션을 방영하는 방법은 TV에서 송출하는 방법과 OTT를 통해 스트리밍 하는 방법, 두 가지로 나뉩니다. (OTT : Over The Top. 인터넷으로 영상을 제공하는 서비스를 말합니다. 대표적으로 유튜브와 넷플릭스가 OTT라고 할 수 있습니다.) ​먼저 TV에서 송출하는 방법의 경우,앞서 언급한 것처럼, 국내 애니메이션 방영사가 자율적으로 애니메이션에 대한 내부 심사, 수정, 검열, 시청 등급 지정을 하고 방영할 수 있습니다.다만, TV는 그 특성상 시청자의 연령 층이 확실하지 않기 때문에 방송 규정이 영등위의 심의보다 특히 더 엄격한 것으로 알려져 있습니다.(EX. 청소년이 18세 이용가 (청소년 시청 불가) 등급의 영상을 볼 수 있음, 때문에 18세 이용가 (청소년 시청 불가) 영상도 모자이크 처리를 해야 함.)또한, 앞서 언급한 것처럼, 만약 방송법/방송 심의 규정을 어긴다면 방통위에게 조치를 받을 수 있고, 이런 조치가 계속될수록 처벌은 심해지기 때문에,방영사는 엄격한 방송법을 지키기 위해, 방통위의 조치를 최대한 받지 않도록, 애니메이션에 대한 수정/검열을 강하고 심하게 할 수밖에 없게 됩니다.그렇게 만들어지는 것이 우리가 흔히 아는 모자이크가 덕지덕지 붙여진, 애니메이션 (수정/검열본) 입니다.​반면 OTT를 통해 스트리밍 하는 방법 경우,연령 층이 불확실한 TV와 다르게, 본인 인증 등과 같은 방법으로 시청자의 연령층을 분명하게 알 수 있습니다.때문에 연령층에 따라 시청할 수 있는 영상을 제한할 수 있게 되고, (EX. 청소년은 18세 이용가 (청소년 시청 불가) 등급의 영상을 볼 수 없음)때문에 수정/검열을 하지 않은, 애니메이션의 원본을 영등위에게 18세 이용가 (청소년 시청 불가) 로 심의 받은 이후, 스트리밍 할 수 있게 됩니다.또한, 영등위가 방통위의 심의를 인정해 주기 때문에, 원본이 아닌, TV용 애니메이션 영상 (수정/검열본)을 곧바로 스트리밍 할 수도 있습니다.​어찌 됐건, 그렇게 국내 애니메이션 방영사는 TV용 애니메이션 영상 (수정/검열본), OTT용 애니메이션 영상 (원본),두 가지의 영상을 가지게 됩니다.​ 3. 앞서 말했듯 영상에 대한 심의는 많은 시간과 비용이 필요로 합니다. 새로운 콘텐츠를 빠르게 계속해서 제공해 줘야 하는 넷플릭스 입장에서, 비용을 몰라도 시간이 걸린다는 것은 큰 걸림돌이 됩니다. 특히 영화가 아닌 애니메이션의 경우, 1~2시간 정도 하는 단편의 영화들과 다르게, 1화당 20분 정도 하는 장편의 영상 매체이기 때문에, 심의를 진행하는 시간은 더욱더 오래 걸리게 될 것입니다. ​다만, 이미 한 번 심의를 거친 영상은 다시 심의를 받지 않아도 되기 때문에,넷플릭스는 국내 애니메이션 방영사에서 이미 심의 받은 영상들을 받아오게 됩니다.(넷플릭스 오리지널이 늦게 업로드, 업데이트되는 이유가 바로 직접 심의하기 때문입니다.)​이때, 국내 애니메이션 방영사에서 받아온 영상은 대부분 TV용 애니메이션 영상 (수정/검열본) 입니다.때문에 이런 문제가 발생하게 된 것입니다.​그럼 왜 넷플릭스는 OTT용 애니메이션 영상 (원본)을 가져오지 않을까요?여기엔 여러 의견이 있습니다.​=&amp;gt; 그냥 편해서!=&amp;gt; 해당 애니메이션 방영사에서 이미 유로 서비스로 제공하고 있기 때문에, 넷플릭스에게 넘겨주지 않았을 것이다. (독점 및 경쟁사 견제)=&amp;gt; 해당 애니메이션 방영사도 원본을 가지고 있지 않기 때문일 것이다.=&amp;gt; 해당 애니메이션 방영사가 원본을 가지고 있긴 한데, 영등의 심의를 받지 않아, 심의를 받아야 하기 때문일 것이다.=&amp;gt; 해당 애니메이션 방영사가 원본보다 수정/검열본을 더 싸게 팔았기 때문일 것이다.=&amp;gt; 직접 원본을 가져올 수 있지만, 심의에 시간 혹은 비용이 많이 들어 그냥 수정/검열본을 가져왔을 것이다.=&amp;gt; 넷플릭스가 법을 잘못 알고 있는 것이다.=&amp;gt; 심의를 받고 있는데 (혹은 있었는데) 그 양이 너무 많아서 지체되고 있는 것이다. (혹은 새로운 심의를 넣고 있지 않을 것이다.)​뭐, 이렇다고 합니다.​알 수 있는 사실로는 TV는 방영사가 자율적으로 직접 수정/검열하고 시청 등급 매김, 방통위는 방송 규정을 만들고 심의함 OTT는 영등위에서 심의를 거쳐 시청 등급만 매겨짐, 수정/검열은 하지 않음 18세 이용가 (청소년 시청 불가) 등급 영상에 모자이크가 있는 이유는 해당 영상이 과거 TV에 방영된 적 있는 수정/검열본이기 때문 ㄴ 담배나 가벼운 상처들이 모자이크 되어 있는 이유도 이하 같음 넷플릭스 오리지널의 경우, 직접 영등위에 심의를 넣을 수밖에 없기 때문에, 18세 이용가 (청소년 시청 불가) 등급 영상에 모자이크가 없음 ​이 정도인 것 같습니다.​어떤 이유에서 넷플릭스가 원본을 제공하고 있지 않는지는 공식적인 답변이 없어 알 수 없지만,그 이유가 무엇이든, 원본이 아닌 모자이크가 덕지덕지 붙여진 수정/검열본을 제공한다는 것은소비자 입장에서는 조금 불편할 수 있는 문제라고 생각합니다.​저는 그냥 오리지널 챙겨보는 정도로 만족해야겠습니다." }, { "title": "🌱 IDE 서식 자동 정렬 단축키", "url": "/posts/IDE-Auto-Format-Shortcut/", "categories": "🗿Stone, 🌱DayStone, ⛏️Programming, 🕯️Programming-Memo", "tags": "", "date": "2021-03-21 02:16:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠VS 는Ctrl + K 입력 후 Ctrl + F (선택 영역 정렬)Ctrl + K 입력 후 Ctrl + D (문서 전체 정렬)Rider는 Ctrl + Alt + LVS Code는 Shift + Alt + F" }, { "title": "🌱 컴파일, 컴파일러, 어셈블러, 링커, 로더", "url": "/posts/Compile/", "categories": "🗿Stone, 🌱DayStone, ⛏️Programming, 🕯️Programming-Memo", "tags": "", "date": "2021-03-06 09:00:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠주의 ! : 전문가가 아닌 학생이 공부하며 정리하는 글이기 때문에, 정확하지 않은 정보가 포함되어 있을 수 있습니다 !​Compile 컴파일ㄴ 특정[원시] 언어 (Source) 로 작성된 코드를 다른[목적] 언어 (Target) 의 코드로 변역[해석, 변환]하다, 혹은 그 과정ㄴ 주로 ‘고급 언어 (High Level) 로 작성된 코드를 저급 언어 (Low Level) 로 번역하는 것, 혹은 그 과정’ 을 의미함 여기서 언어는 프로그래밍 언어를 의미함Compiler 컴파일러ㄴ 컴파일[번역, 해석, 변환]하는 프로그램 컴파일의 의미에 관하여우리는 흔히 컴파일을 ‘고급 언어’를 ‘저급 언어’로 번역하는 것, 혹은 그 과정이라고 배웁니다.하지만, 본래 컴파일은 ‘특정 언어’를 ‘다른 언어’로 번역하는 것, 혹은 그 과정을 의미합니다.​🤔 : 저는 책으로 ‘고급 언어’를 ‘저급언어’로 번역하는 것이라고 배웠는데, 그럼 책이 틀린 건가요?​주의! 틀리다는 것이 아닙니다.‘고급 언어’에서 ‘저급 언어’로 번역하는 것 도, ‘특정 언어’에서 ‘다른 언어’로 번역하는 것 에 포함되므로 틀리지 않습니다.​하지만!‘고급 언어’에서 ‘고급 언어’로,(예 : Java에서 C#으로 =&amp;gt; Source to Source Compiler, Transcompiler)‘저급 언어’에서 ‘고급 언어’로,(예 : Byte Code에서 Java, Python으로 / 기계어, 어셈블리어에서 C#(추상)으로 =&amp;gt; Decompiler)‘저급 언어’에서 ‘저급 언어’로,(예 : 어셈블리어에서 기계어로 =&amp;gt; Assembly, 기계어에서 어셈블리어로 =&amp;gt; Disassembly)번역하는 것도 모두 컴파일이기 때문에, ‘고급 언어’에서 ‘저급 언어’로 번역하는 것만을!!!! 컴파일이라고 할 수는 없다는 것입니다.​물론, 우리가 주로 사용하는 컴파일의 의미는 대부분 ‘고급 언어’에서 ‘저급 언어’로 번역하는 것 을 의미하기 때문에,‘컴파일도 여러 종류가 있구나’ 정도로 알아 두시면 도움이 될 것 같습니다.(이 글에서도 대부분 ‘고급 언어’에서 ‘저급 언어’로 번역하는 것 이라는 의미의 컴파일을 다룹니다.)​ Compile 이라는 단어가 지금의 의미를 가지게 된 이유Compile 의 사전적 의미 를 검색하면, 제일 먼저 ‘(여러 출처에서 자료를 따와) 엮다, 편집[편찬]하다’ 가 나옵니다.왜 이런 뜻을 가지고 있는 Compile 이 ‘~ 번역하다(컴퓨터)’ 라는 의미도 가지게 되었을까요?​🤔 : ‘편집하다’ 가.. 이러쿵 저러쿵해서 ‘번역하다’ 가 된건가? 잘 모르겠어요.​그 이유은 바로 최초의 컴파일러 ‘A-0’ 가 만들어지고 사용되었을 때,현대의 컴파일러로서 동작하기 보다, 링커 (Linker) 또는 로더 (Loader) 로서 더 많이 동작됐기 때문입니다.​ 컴파일의 과정 에서 자세히 다루겠지만, 링커 는 여러 파일을 하나의 실행 파일로 연결시켜 주는 역할을 하는데요.때문에 ‘A-0’ 를 만든 Grace Hopper 가 이 프로그램을 설명하기 위해 새로운 용어를 만들 때,‘엮다, 편집[편찬]하다’ 라는 뜻의 Compile 에 ~er 를 붙여 Compiler 라는 용어를 만들게 되었습니다.​시간이 지나며 컴퓨터에서의 컴파일의 개념은 점차 바뀌었고, 단어의 뜻 역시 ‘~ 번역하다(컴퓨터)’ 로 바뀌었는데,단어는 그대로 Compile을 사용했기 때문에, Compile 은 ‘엮다,편집하다’ 와 ‘~ 번역하다(컴퓨터)’ 라는 두 가지의 의미를 가지게 되었습니다.​참고로 Compile 의 어원은 ‘함께’ 라는 의미의 ‘Com’ + ‘쌓아올리다’ 라는 의미의 ‘Pile’ 이라고 합니다.​CompilerCompiler From Wikipedia, the free encyclopedia This article is about software to translate computer languages. For the manga, see Compiler (manga) . “Compile” and “Compiling” redirect here. For the software company, see Compile (company) . For other uses, see Compilation . In computing , a compiler …https://en.wikipedia.org/wiki/Compileren.wikipedia.org 컴파일의 과정‘고급 언어’를 기계어로 번역하는 컴파일의 과정을 간략히 설명하자면 아래와 같이 같습니다.​imagehttps://youtu.be/cJDRShqtTbk고급 언어로 작성된 소스 코드↓ (컴파일러)기계어 작성된 오브젝트 코드↓ (링커)실행 파일프로그래밍 언어에 따라소스 코드에서 오브젝트 코드로 번역하는 과정까지를 컴파일로 부르는 경우도 있고,그 이후 링커를 통해 실행 파일을 만들어 내는 과정까지를 컴파일이라고 부르는 경우도 있습니다.​C 는 전자에 해당합니다.​Object File 오브젝트 파일ㄴ 기계어로 이루어진 파일​Linking 링킹ㄴ 한 개 이상으로 존재하는 오브젝트 코드를 합쳐 하나의 .exe 실행 파일로 만드는 것, 혹은 그 과정Linker 링커ㄴ 링킹하는 프로그램​먼저, 우리는 코딩을 할 때 프로그램에 필요한 모든 코드를 작성하지 않습니다.#include int main(){ printf(“Hello, World!”); return 0;}예로 C 를 통해 위와 같은 프로그램을 작성한다고 했을 때, printf 함수는 우리가 작성한 함수를 사용한 것이 아니라,#include 라는 코드를 통해, stdio.h (Standard Input/Output) 라이브러리에서 이미 만들어둔 printf 함수를 가져와서 사용한 것입니다.​이처럼 우리는 프로그램에 필요한 모든 코드를 작성하지 않고, 이미 만들어진 코드를 라이브러리 등을 통해 가져와 사용합니다.​또한, 우리는 일반적으로 프로그램을 만들 때 한 코드 파일만을 사용하지 않습니다.#include extern int age;int main(){ printf(“My age is %d”, age); return 0;}#include int age = 20;// 기타 코드우리는 일반적으로 프로그램을 만들 때 하나가 아닌 여러 개의 코드 파일을 다루게 되고, 그 코드들은 위 두 코드에서의 age 변수처럼 서로에게 영향을 주는 경우가 많습니다.​때문에​이렇게 우리가 작성한 C 프로그램 코드와 stdio.h 라이브러리를 하나로 합쳐 하나의 .exe 실행파일로 만드는 작업을 링킹이라 하고,그 작업을 링커가 하게 됩니다.​​컴파일러의 종류는 위 예시에서 언급‘특정 플랫폼’에서 ‘다른 플랫폼’으로,(예 : Window10에서 Android에 동작하는 코드를 =&amp;gt; Crosscompiler)‘컴파일러에서 컴파일러를’,(Compiler Compiler) 거진 알레르기 알레르기 ㅋㅋㅋㅋ​​—230201 옛날에 새로 쓰려 했던 문서 추가이것이 C#이다Eniac (에니악), 최초의 컴퓨터“섭씨 50도의 열과 소음이 가득 찬 커다란 방에서 한 여자 연구원이 노트를 들고 30미터에 이르는 방 한 면을 가득 메운 상자들에 꽂혀 있는 전기 케이블의 배선을 바꾸고 있다. 노트에는 대포의 탄도 계산에 필요한 방정식이 기록되어 있으며, 연구원은 그 노트에 따라 꼼꼼하게 케이블을 점검해 나간다. 6,000개에 이르는 전기 케이블의 점검을 모두 마치자, 그녀는 계산에 사용할 실험 수치가 기록된 카드를 기계에 밀어 넣고 스위치를 올렸다. 기계는 잠시 후 한쪽에 설치된 천공기 (Punching Machine) 를 통해 계산 결과를 카드에 출력했다.”방 한 면을 가득 메운 상자들 : Eniac (에니악), Computer전기 케이블의 배선 : Eniac의 계산 회로, Program바꾸고 있다 : 회로 제작, ProgrammingGood : 당시 기준 뛰어난 계산 능력Bad : 뜨거운 진공관을 식히기 위해 거의 매일 반나절은 운영 중지 프로그램을 변경하려면 6,000개에 이르는 배선을 교체해야 함Edvac (에드박), 현대 컴퓨터의 조상천재 과학자 존 폰 노이만 (John von Neumann) 이 개선한 Eniac (에니악)Eniac (에니악) 보다 개선된 구조, 향상된 신뢰성중앙 프로세서, 기억장치, 프로그램, 데이터로 이루어진 슈퍼컴퓨터 ~ PDA에 이르기까지현존하는 모든 현대 컴퓨터의 조상하지만 에드박 이후에도 컴퓨터의 발전은 하드웨어 중심으로 이루어짐. 프로그래밍 방식 : 전선을 바꿔 끼우는 방식 » 카드에 구멍을 뚫어 비트를 기록하는 방식. 여전히 0과 1의 Bit (Binary Digit, 이진수) 로 구성되는 Machine Language (기계어) 를 조합하여 프로그래밍프로그래밍 언어🎲 Assembly Language (어셈블리어), Compile (컴파일), Compiler (컴파일러). 📌 Example : “앞으로 가” == “허리를 바로 세우고 왼팔을 앞으로 내저으며 오른팔을 뒤로 내저어라. 동시에 몸의 중심을 앞으로 옮기며 왼발을 받침으로 삼고 오른발을 앞으로 내밀어라. 그리고 별도의 지시가 있기 전까지 이 행동을 계속하라.”. 😎 Human : 말 한마디를 듣고도, 그 한마디에 포함되어 있는 모든 행동을 알아서 잘 수행함. 💻 Computer : 어떤 일이든 세세하게 지시해주지 않으면 아무것도 하지 못함. Assembly Language (어셈블리어) 는 이런 점을 역 이용, 복잡한 기계어 명령어를 사람이 이해할 수 있는 기호나 단어로 바꿔 만든 것. 📌 Example : “01001100 00001000 10000001 10010000” » “MOV”. 😎 Human : 복잡한 기계어 명령어는 이해하기 어렵기 때문에, 이해할 수 있는 기호나 단어를 통해 컴퓨터에게 지시를 내림. 💻 Computer : 간단한 기호나 단어 하나만 입력받아도, 그 명령어가 의미하는 복잡한 기계어 명령어를 알아서 잘 수행함. 물론, 컴퓨터는 “MOV” 라는 명령어를 전혀 이해하지 못함, 컴퓨터는 Machine Language (기계어) 만을 이해하기 때문. 😟❔❔ : “바로 위에서는 “알아서 잘 수행함” 이라며?”. 그래서 컴퓨터는 어떤 프로그램을 통해 “MOV” 같은 명령어를 “01001100…” 같은 Machine Language (기계어)로 변환하는데,. 이렇게 Assembly Language (어셈블리어)가 Machine Language (기계어)로 변환, 번역, 해석되는 과정을 Compile (컴파일) 이라고 하고. Compile (컴파일) 해주는 프로그램을 Compiler (컴파일러)라고 함Assembly Language (어셈블리어) Code (코드) 작성 Compiler (컴파일러) 를 통해 Compile (컴파일) 기계어로 된 실행파일 == 프로그램 " }, { "title": "🌱 [공유] 32비트(bit)와 64비트(bit)의 차이 - 윈도우 프로그램 x86과 x64 중 뭘 선택해야 하나, 컴퓨터 PC 확인 방법 - Windows", "url": "/posts/PC-32Bit-64Bit/", "categories": "🗿Stone, 🌱DayStone, ⛏️Programming, 🕯️Programming-Memo", "tags": "", "date": "2020-10-12 03:33:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠https://blog.naver.com/sharpsoul/221777128846" }, { "title": "🌱 K/DA - THE BADDEST", "url": "/posts/DayStone-200828/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-08-28 04:49:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠​https://youtu.be/RkID8_gnTxw♪ Hearts In Twos ♬유행 선두자​​15985577887711598557789590이 곡이 Pre Release..?EP 발매를 압두고 있다..?​누나들 나죽어 ㅠㅠ" }, { "title": "🌱 0726 청강 공모전 끝!!!!", "url": "/posts/DayStone-200726/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-07-26 10:32:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠15957271654641595727167105오우쉣 1차 2차 공모전 모두 끝났습니다..이유 모를 자존감 폭발과 공부 의지..!이제 남은 건 결과 발표와 포트폴리오 뿐이야.." }, { "title": "🌱 0720", "url": "/posts/DayStone-200720/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-07-20 03:32:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠이제 나도 만들고 싶은 게임이 생겼다!!!!이게 당연한건데이게 나야유명하고 대단하고 똑똑한 사람이고 싶다그런 소망은 있는데구체적으로 뭘 만들고 싶다는 목표가 없다​내 게임을 만들고 싶어서 게임 개발 / 플밍을 시작했지만 당장 만들고 싶은 게임이 없다​그림 연습 할 때는 생각없이 그냥 그려지는 대로 그린다여자로 시작해도 남자같으면 남자로 끝​소설 소재라던지 큰 틀을 못잡겠다판타지인데 과학 고증하려고 애쓰다가 시간 다가고,설정 놀음하다가 끝난다​마땅한 작곡 프로그램도 못 찾겠고그렇다고 악상이 막 떠오르는 것도 아니고 흐지부지​가끔가다 블로그에 끄적끄적하는게 내 철학..​만날 스스로 혼내는거 말고는뭐하나 열심히 하는게 없다​자존감 떡락이게 난가싶다" }, { "title": "🌱 0623", "url": "/posts/DayStone-200623/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-06-23 23:08:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠중학생일 때,친구가 운영하던 게임 커뮤니티에서 썼던 글을 오랜만에 읽어봤다.​이 글은 당시 만들고 싶었던 내 RPG 를,메이플스토리 / JRPG 에서 찾은 게임의 클리셰와 문제점에 관해 정리한 글이다.​처음 게임 기획자가 되고 싶다고 마음먹고,얼마 지나지 않아 쓴 글인 걸로 기억하는데..​이건 뭐 기획서도 아니고.. 아무튼 내용은 많이 부실해도,게임을 만들겠다는 열정은 지금보다 더 느껴지는 것 같다, 이런 글도 쓰고.​옛날에 구글 드라이브에 한 번 저장했었다가, 컴퓨터로 다시 옮길 때 손을 좀 댄 것 같다.어떤 걸 손 댓는지 기억은 안난다.​누군가에게 도움이 될지는 모르겠지만,혼자 보관해두는 것 보다는 나을 것 같아 올려본다.​밑 링크는 당시 참고 했던 글이다.어디서 봤던 글인지 기억이 안나서 JRPG 클리셰 검색했더니, 나무위키에 바로 나왔다. ㅋㅋ..​http://www.joysf.com/4021184The Grand List Of Console Role Playing Game Clichés - JRPG의 법칙1차 출처 http://project-apollo.net/text/rpg.html 2차 출처 http://tvtropes.org/ 많은 장르에 걸친 클리세의 집대성이라고 할 수 있는 사이트입니다. 클리세가 아니라 다양한 작품에 등장하는 각종 인물형과 사건 배경에 대해 죄다 유형별 분류를 시도하는 수준이네요. 꽤 재밌군요. 꽤 오래된 글이지만 (아무래도 오리지널리티가 떨어지고 재미가 좀 없는 덕에) 대마왕이 해야 할 일이라던가 그런 거에 비해 잘 알려져 있지 않은 듯 싶네요. 국내 검색해도 나오는 글 없는 성 싶고, 클럽에도 올라온…http://www.joysf.com/4021184www.joysf.com목표 : 메이플스토리 노틸러스 안에서 느꼈던 감정을 되살리자부제 : 장점은 살리고 단점은 쓰러뜨리자! 메이플스토리 &amp;amp; JRPG의 문제점/클리셰​ 인벤토리 정리는 꼭 있어야 해​ 스토리와 퀘스트가 있지만 필수는 아니게. 모험이 주요 콘텐츠​ 혼자가 아닌 모두. 예를 들어 눈과 얼음으로 뒤덮혀 묻힌 문명을 유저들이 힘을 합하여 모두가 함께 찾아내거나 반대로 마을이 변하거나 없어지기도해​ 가끔 악당이나 몬스터 보스가 마을 / 맵에 출연. 유저들이 모두 힘을 모아서 쓰러뜨려야해​ 엘리트 몬스터 / 돌발 미션 / 엘리트 보스 / 콤보 / 룬 : 메이플 스토리​ 마인크래프트의 자유​ 유저가 지도를 만듬. 구름이나 안개등으로 가려진 지도를 유저들이 모험하면서 채워나가​ 도전과제와 칭호로 모험을 유도시켜​ 모험을 주 콘텐츠, 사냥이나 채집, 제작 등의 부 콘텐츠로 지루하지 않게​ 사냥이 주 콘텐츠가 아니기때문에 레벨은 모험이 중심​ 레벨도 모험 그리고 사냥/제작등을 합친 것 2개로 나눔​ 랭킹을 실시간으로 확인하여 경쟁심을 만들어​ 도박형 아이템도 있어야 재밌겠지. 하지만 영향력은 크지않게​ 성장 목표를 확실하게 보여주기​ 수 없이 많은 아이템​ 게임 개발 일지와 아이템 확률은 투명하게 공개​ 운영자 / 개발자도 유저와 함께 플레이하는 게임​ 채팅 거리제한, 확성기는 좀 더 멀리까지 들려​ 유저와 소통 : 게임 안에서, 카페 / 블로그에서, 유저들이 원하는 요구 사항, 유저들이 직접 만드는 콘텐츠 등​ 직업은 모험이나 콘텐츠 중심! 모험 / 탐험가, 장사꾼, 채집 ( 광부 / 나무꾼), 사냥꾼 등등​ ★ 판타지이지만 몇몇은 현실감있게! 예를 들면시간이 지나면 문을 닫는 상점 ( 대신 24시간 편의점이 있다구)주요 도시에서 멀리 떨어진 마을은 소식을 잘 전달받지 못해춥거나 덥거나, 피곤하거나 상쾌하거나업데이트마다 바뀌는 맵과 NPC들목적지가 있는 움직이는 NPC들같은말은 하지 않는다!도시마다 파는 물건 대부분이 다르다!같은 아이템이더라도 조금 다르게건물안이랑 밖이랑 소리크기 달라모든 애들은 스토리가 있어무리한 부탁은 예의상 안해전설은 전설일뿐 연관짓지말자 ( 몇 개 빼구 )못가는곳은 못가표지판은 뚫을 수 있고 절벽은 오를 수 있어 억지 부리면 안돼네모난 지도가 아니어도 괜찮아 지구본이 있잖아마을마다 쓰는 돈이 달라 ( 많으면 힘드니까 몇몇만 )상점은 여러개 있어도돼 ( 마을이 넓으니까 )모험을 통해 마을에서 마을로 가고싶다면 선택지는 여러개야 ( 길이 하나가 아니라구 )유저가 한일은 목격자가 없다면 몰라마을이 파괴되면 복구해야돼좋은일이 있거나 이벤트를 열면 상점 꽁짜!등등​ 맵에 랜덤으로 등장하는 장사꾼! ( 희귀하거나 유일하게 파는 템, 한정판! )​ 추억이 중요하니까 아이템이나 칭호/도전과제에는 장소/날짜가 있어야해​ 무기들고 다니면 애들이 무서워해​ 건물외부는 내부크기랑 같게! ( 사실 포탈은 없게 만들거지만 )​ 스킬은 마찬가지로 직업관련 모두 사용가능​ 인게임에서 공지사항등이 담긴 신문은 맵 가운데부터 가장자리로 순서대로 배분돼​http://www.thisisgame.com/webzine/gameevent/nboard/227/?n=82141&amp;amp;utm_source=naver&amp;amp;utm_medium=outlink&amp;amp;utm_campaign=tigadmin68&amp;amp;utm_content=82141&amp;amp;nogate​MMORPG는 한 번 운영을 개시하면 그리 간단히 운영을 중지 할 수 없습니다.왜냐하면,플레이어 여러분의 캐릭터 데이터나 게임 안의 재산은 단순히 0과 1로 결성되는 데이터가 아니라 추억과 시간과 동료가 담겨 있기 때문입니다. - 요시다 나오키?" }, { "title": "🌱 0611", "url": "/posts/DayStone-200611-1/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-06-11 23:51:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠유치원을 다닐 때 과일이든 뭐든씨를 먹으면 몸 속에서 씨가 자라는 줄 알았다​다시 생각해보니무슨 판타지 만화에 나올 법한.. 그런 설정​설정 놀음이라고 하나??아무튼 그런 걸 하는게 참 재밌다" }, { "title": "🌱 0611", "url": "/posts/DayStone-200611-0/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-06-11 23:25:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠From, 블로그씨좋아하는 소품이나 피규어, 티켓, 사진 등을 하나하나 모으는 재미가 있죠, 소중하게 모아 온 수집품이 있나요? 사진과 함께 소개해 주세요~나는 따로 수집하는 종류가 있다기 보다는추억이 있는 작은 물건들을 수집한다.​보물상자라고 부르는 나의 잡동사니 상자 안에는단순히 조그맣고 작은 추억이 있는 물건들이 들어있다.​여기서 추억이 있다 함은 특별한 것이 아니고,마치 옛날에 쓴 일기를 다시 보는 것처럼사소한 것이라도 지나간 일들이 떠오르는 것이다.​그래서 보물상자로 부르는 것과 달리서울에 놀러가서 다녀온 식당의 영수증, 수학여행 때의 놀이동산 이용권 같은 것들이 들어있다.​물론 나에게는 정말 보물 같이 여겨지는초등학생 때부터 지금까지의 일기장들, 그 때 썼던 몽땅연필, 어릴적 친한 친구가 줬던 편지나 물건들, 가족끼리 여행가서 산 기념품 같은 것들도 들어있다.​모으면서 이건 왜 가지고 있었지 하고 정리하는 것도 있고,가끔가다 왜 버렸지 하고 후회하는 것들도 있다.​차곡차곡 모아서 언젠가 일기장을 읽어보듯그 땐 그랬지~ 하고 주변 사람들한테 추억팔이나 해보고 싶다.​아니면 유명해지고 죽어서 박물관을 차리던지" }, { "title": "🌱 0609", "url": "/posts/DayStone-200609/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-06-09 22:39:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠비익련리 그리고 이응태‘다시 시작’ 버튼은 누르면 ‘정말 다시 시작하시겠습니까, 확실합니까’ 하고 확인창이 있어야 한다.​‘종료’ 버튼도 누르면 지금까지의 정보가 저장되지 않을 수도 있다면서 확인창을 띄워주는데.​아니 내가 느려야 한다" }, { "title": "🌱 0605", "url": "/posts/DayStone-200605/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-06-06 02:49:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠ 공모전이 끝난 지금청강을 향한 의지 불타오른다!!!!​학교 생활 12년 동안 가장 공부 열심히 하는 듯물론 가장이라고 해서 그 양이 절대 많은 것은 아니지만​지필 고사랑 대학 공모전이 겹쳐서 애매하게 됐음공모전 게임을 얼른 만들어서 제출하고 싶은데기획이 맘대로 안돼서 진도가 잘 안나감게임의 재미를 떠나서 ‘처음 완성된 게임을 만든다’, ‘공모전에 제출 해봤다’에 의미를 둬야 할 듯셰이더 같이 새로 배우고자 하는게 생기기도 했고​이어지는 이야기로는 대학에 관한 고민청강대에 꼭 가고 싶지만, 마음이 살짝 흔들리는 중합격한다는 보장은 없지만 지방 국립대 컴공과를 가야하나 하는 생각​수시까지 세 달도 남지 않았기에 생각을 빨리 정리해야 함어차피 둘 다 지원하고 합격하면 청강 가겠지만서도..​깨구락지라는 단어가 이상하게 귀엽고 마음에 듬관한 에피소드까지는 안 적어놔도 나중에 봤을 때 기억하지 않을까 하기에 스킵자동차 열쇠와 소파" }, { "title": "🌱 0521", "url": "/posts/DayStone-200521/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-05-21 03:29:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠또 다짐" }, { "title": "🌱 0506", "url": "/posts/DayStone-200506/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-05-06 19:39:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠아무것도 안하는데 번아웃이 온다.​언제 마음먹고 공부 열심히 하자 다짐하면,그럼 뭘 해야하지 계획을 세우기 시작하면,​지금까지 해왔어야 했던게,해야 한다고 생각되는게 하나하나 떠오르고,​그게 감당할 수 없을 정도로 많아지면서,짜증과 걱정이 섞인 감정이 피었다가,​이내 머리가 새하얘진다.​그러고는 번아웃이 와서그나마하던 공부든 뭐든 아무것도 못하고 멍ㅡ 해진다.​당장 시험도 코 앞이고, 금방 수능도 올 것이고,끝나면 대학교를 가야하는데, 성적은 아슬아슬하고,그렇다고 게임을 막 만든 것도 아니고,​아이고 못난 사람.​내 성격이 또 이상한게응원을 받으면 힘이 나야하는데, 대신 힘이 축 빠진다.​아이고 못난 사람" }, { "title": "🌱 0427", "url": "/posts/DayStone-200427/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-04-27 12:29:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠어려져서 걱정없이 공부하고 싶다고 생각했다.​어른 말은 틀린게 없다.근데 그렇다고 애들이 틀린건 아닌 것 같다" }, { "title": "🌱 0406", "url": "/posts/DayStone-200406-1/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-04-06 09:17:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠https://www.ted.com/talks/tim_urban_inside_the_mind_of_a_master_procrastinator?language=ko#t-831745암흑의 놀이터" }, { "title": "🌱 0406", "url": "/posts/DayStone-200406-0/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-04-06 07:33:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠https://youtu.be/Rvd3wuAU5ww뒤틀린 것도 좋아한다" }, { "title": "🌱 0324", "url": "/posts/DayStone-200324-2/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-03-24 19:27:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠누군가는,꾸준히 어떤 능력을 지녀왔던 사람들보다,처음부터 시작해 지금의 능력을 만들어온 사람을더 매력적으로 느껴하는 것 같다.​설령 그 능력의 수준이 같거나, 후자가 상대적으로 떨어진다고 하더라도 말이다.이를 이용해 어쩌면 나쁜 환경이 오히려 인생 이야기를 만드는데 도움이 되지않을까 하는 생각이 든다.​부자로 태어나 지금까지도 부자로 살아가는 사람보다,가난하게 태어났지만 지금은 부자로 살아가는 사람이,( 돈이 능력이라는 건 아니지만.. 아니 능력인가..? )​건강하게 태어나 지금까지도 건강하게 살아온 사람보다,아프게 태어났지만 지금은 건강하게 살아가는 사람이,​대학이나 취업 면접을 볼 때,‘나는 이런걸 뚝딱뚝딱 만들정도로 잘합니다’ 보다,‘나는 이런걸 만들다가 이런 문제점이 생겼었고, 이 문제를 해결하기 위해 이런 방법을 써봤으며, 이런 과정을 통해 이렇게 성장했습니다’ 를 더 매력적으로 보는 것 처럼 말이다.​자기소개서나 면접에서도 성장과정과 단점, 약점을 물어보는 것은 흔한 질문인 것 같고.​어찌보면 후자가 전자보다 더 노력을 해왔다고 볼 수 있으니 마땅히 받아야 할 대우인 것 같기도 하지만,그래도 분명 전자도 억울한 것이 있을 것 같다.​억지로 나쁜 환경을 만드는 사람들도 있을 것 같고,어찌됐건 나쁜 환경을 어딘가 이용하는 사람도 있지 않을까하고 생각해본다.비슷한 맥락으로 창작 작품에서도 이를 찾을 수 있다​일명 ‘흙수저’ 로 시작해, 사회에서 말하는 이른바 ‘성공’ 을 하는 드라마나 영화​일개 평범한 인간이, 세상을 구하는 영웅이 되는 뻔한 이야기의 게임들과 만화​최근에 클리셰를 비틀어주인공이나 주연을 아예 먼치킨 / 금수저로 설정하는 작품들이 나와 큰 인기를 끌기도 했지만​이미 오래전부터 많은 작품들이 이런 성향을 보여왔다정말 더 매력적으로 보이기 때문인 것 일까.사람들이 삼삼오오 모여 이야기 하는 걸 들어보면‘내 일이 너무 어렵다’, ‘아니다 내 일이 더 어렵다’‘나 너무 힘들다’, ‘아니다 내가 더 힘들다’ 하는 걸 최소한 내 주변에서는 쉽게 들을 수 있다.​더 어렵고 힘든게 좋은 것이 아님을 알면서도,자신이 남들보다 더 나쁜 환경에 처해있다고 말하는 것이 습관화된 사람들이 분명 있는 것 같다.​정말 나쁜 환경이 우리를 매력적으로 만들기 때문인가​" }, { "title": "🌱 0324", "url": "/posts/DayStone-200324-1/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-03-24 09:42:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠페르소나​초등학교 수련회, 숙소에서 남자 애들끼리 좋아하는 여자애를 말할 때,나는 내가 좋아하던 여자애를 외모보다 성격 때문에 좋아한다고 거짓말을 했다.​어릴 때 부터 착하게 보이는 방법을 알았고,실제로 착하게 보이고 싶었기 때문이다.부끄럽다.​학교를 다니면서 친구들이 교실 청소 대충하고 놀자고 해도 청소만큼은 언제나 혼자 남아서라도 열심히 했다.​괜히 복도에 떨어진 쓰레기를 줍기도 하고,괜히 도서관 책들을 정리하기도 하고,괜히 잘 못 어울리는 친구에게 잘 해주고,​혹시나 정말 ‘우연’ 하게도 선생님이 알아봐 주실까봐,친구들이 나를 착한 아이로 기억해줄까봐 그랬다.​쓰레기다. 쓰레기​다른 사람과 함께하는 일을 할 때면, 언제나 내 탓부터 했다.정말 내 탓이라면 잘못을 인정할 줄 아는 사람이고,그게 아니면 겸손한 사람이 되는거니까.그 무엇이 됐든 나는 착한 사람이 될 수 있으니까!​이게 이제 병이 걸린건지, 혼자 있을 때도 그런다.아무도 보는 사람이 없어도 착해보이는 일을 한다.그러고는 나는 착한 사람이다 하고 합리화한다.​스스로를 속인다.아닌걸 알면서 자꾸 그런다.​이 글도 그렇다" }, { "title": "🌱 0324", "url": "/posts/DayStone-200324-0/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-03-24 08:11:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠사랑이라는 감정은, 우리가 속고있는 거짓된 감정이 아닌가 생각한 적이 있다.​단순히 어떠한 것의 모양이나 내면 그리고 이야기에 의해서 느끼는 감정이 아니라,단순히 어떠한 것을 사랑스럽다고 사랑한다고 느끼기 때문이 아니라,​사람이라는 개체의 유지 그리고 종의 유지를 위한 욕구에서 비롯된 감정인 것 같다 (이 문장엔 크게 마음두지 말자)​다시말해 나의 마음 혹은 영혼 속에서 진정 어떤 것을 사랑한다고 느끼는 것이 아니라,나의 뇌가 ‘나’ 라는 개체가 살아갈 수 있게, 나를 포함한 종족의 번영을 위해,나의 뇌가 저것을 사랑스럽다고, 사랑해야한다고 느꼈기에, 살아가는데 필요한 존재라고 인지했기 때문에,나의 뇌가 나에게 그것을 사랑한다고 속이고 있는 것이 아닐까.​사랑의 이유는 단순히 ‘사랑스러워서’ 가 아닌, 숨겨진 다른 이유가 있는 것이 아닐까사람의 머리 속에는 가장 이상적인 ‘어떤 것’ 이 존재하고, (이데아 Idea)때문에 사람은 단순하게 그런 가장 이상적인 것을 추구하게 되고,때문에 그 사람이 생각하는 가장 이상적인 것과 가장 비슷한 것을 자연스레 사랑하게 되는 것이 아닌가 싶다.​즉 나는 어떤 이쁜 누나의 존재를 사랑하는 것이 아니라,나의 머리 속 가장 이상적인 연인의 이미지를 사랑하는 것이 아닐까.어떤 이쁜 누나가 나의 머리 속 가장 이상적인 연인의 이미지와 비슷하기 때문에 사랑하는 것이 아닐까.​나의 머리 속에 있던 가장 이상적인 것들이 우리가 살아감과 동시에 꾸준히 변하면서,내가 사랑하는 것, 내가 싫어하는 것도 꾸준하게 변하는게 아닐까.​내가 사랑하던 것을 더 이상 사랑하지 못하게 된다면, 그것은 내가 사랑하던 것이 내가 가장 이상적인 것이라고 생각하던 것과 달리 변해서,혹은 반대로 내가 가장 이상적인 것이라고 생각하던 것이 내가 사랑하던 것과 달리 변해서가 아닌가 싶다위에서 말해온 사랑의 대상은 사람, 사물, 세상에 존재하는 모든 것과 추상, 허구적인 모든 것을 포함한다.​연인과 가족과 친구, 취미와 일, 추억과 꿈, 그 이상까지​사람이 아닌 나머지는 사랑한다는 것이 좀 어색하기에,대신 좋아한다 원한다로 고쳐본다면 좀 어울리는 것 같다.​그 말이 그 말 같고,적어놓은 내 마음이 내 마음 같지 않고,​쓰면 쓸 수록 처음 생각과 달라지고 표현이 잘 안되지만,아무튼 사랑은 거짓된, 어떤 하나 이상의 단계를 더 거쳐 느끼는 감정이라고 생각한다​hugspa님의 글을 보고" }, { "title": "🌱 0317", "url": "/posts/DayStone-200317/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-03-17 21:27:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠http://joshworth.com/dev/pixelspace/pixelspace_solarsystem.html" }, { "title": "🌱 0102", "url": "/posts/DayStone-200102/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2020-01-02 13:50:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠새해 둘 쨋날부터 시간 약속을 지키지 못 했다.​나는 평소에도 시간 약속을 잘 못 지키는 편이다.구체적으로는 아침 시간 대에 만나기로한 약속들​다른 사람들은 대부분 약속 전날에 약속 준비하고 일찍잔다면, 나는 내일 약속이 있는지를 까먹는다.​약속하고, 늦잠자고, 연락오고, 못 지키고..약속하고, 늦잠자고, 연락오고, 못 지키고의 반복​일정이 적혀있는 달력을 하나 만들어야겠다" }, { "title": "🌱 1230", "url": "/posts/DayStone-191230/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-12-30 04:34:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠15776466150361577646619208지난주 목요일 (12월/26일) 학교 축제 때 게임 만드는 동아리 부스에 제 게임을 전시했습니다.​저희 학교 축제같은 경우에는 동아리 부스에 1년 동안의 결과물을 전시하는데, 저희 동아리에서는 딱히 전시한게 없었습니다.​기나긴 1년 동안..골드메탈님의 여러 강의들을 따라하고, 축제 이주일전부터 부스 전시용 게임 만들기 시작한게 전부인지라​동아리에 부장과 차장을 포함한 15명 정도의 부원이 있었는데 만들어진 게임이 달랑 5개였습니다.​아무래도 게임 개발자에 대한 꿈에 확신을 가지고 있는 친구들도 없었고, 동아리 부장과 차장 친구들이 모두 개발 관련 경험과 지식이 부족한데다가, 어떤 친구들은 학업에 더 노력한 결과가 아닌가 싶습니다.​부스 등록을 늦게 하는 바람에 축제 안내문에 저희 동아리 들어가지 않아서 아무도 안/못 찾아올 줄 알았는데, 생각보다 많은 친구들과 후배들이 와서 놀랐고,​제 게임에는 생각보다 많은 인기 그리고 버그들과 개선사항들이 있어서 놀랐습니다.​아직 기획한 시스템이 모두 구현되지않은 프로토타입의 프로토타입의 프로토타입인지라, 재미없어할 줄 알았는데, 하는 친구들마다 신기해하고, 즐겁게 해주니, 기분이 묘하고, 뿌듯했습니다.​제가 전시한 게임은 동아리와 별개로 한참전부터 만들던 게임입니다.​얼른 완성해서 출시해봤으면 좋겠네요.스타듀밸리 협동 플레이에 푹 빠져버려서 언제 다시 개발에 집중할지 모르겠지만요" }, { "title": "🌱 1223", "url": "/posts/DayStone-191223/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-12-23 04:07:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠하늘색은 왜 하늘색일까낮에는 푸르게이른 밤과 새벽에는 붉게밤에는 검은데" }, { "title": "🌱 1221", "url": "/posts/DayStone-191221/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-12-21 16:08:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠15769120507961576912052074157691205310015769120542171576912055294ㅠㅠㅠ" }, { "title": "🌱 유니티 _ 인스펙터에서 값을 변경한 Public, [SerializeField] 속성 변수", "url": "/posts/Unity-Public-SerializeField/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-12-10 20:01:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠20191203225712.950590접근 제어자가 Public 이거나 [SerializeField] 속성을 준 변수를 인스펙터에서 수정한 후,해당 변수를 [HideInInSpector] 속성으로 바꾸더라도, 인스펙터에서 설정된 값이 저장되어 남아있을 수 있다.​분명 오류 없이 게임 시스템을 구현한 것 같다고 생각했는데 수정한 사실을 미처 모르고 넘어가게 된다면,에디터가 오류라고 말해주지도 않고, 일일이 찾아보기 전까지는 모르기 때문에 조심해야 한다." }, { "title": "🌱 1122", "url": "/posts/DayStone-191122/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-11-22 01:14:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠친구가 학교 미디어실 컴퓨터에 네 사진들이 있는데, 네가 저장한 거냐고 물어봤다.​확인해보니 나도 모르게 컴퓨터에 내 사진들이 저장되어 있었다.동생 사진도 있었고, 특정 커뮤니티에서 사용하는, 사회적으로 논란이 될만한 사진들도 함께 있었다.​방문 기록으로 확인해보니 누군가 10월 초에 나의 계정이 연결된 구글 드라이브에 들어갔었다.​바로 사진들을 지우고, 로그아웃을 했다.혹시 몰라 폴더들을 죄다 확인해봤지만, 다행히 정말 사진 몇 개 저장한 게 다인 것 같았다.연결된 카드로 뭔가를 사거나, 드라이브에 저장해둔 파일들이 삭제된 정도로 심각한 문제가 아니었다.​무서웠다." }, { "title": "🌱 1104", "url": "/posts/DayStone-191104/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-11-04 00:03:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠아 아 아" }, { "title": "🌱 Nauts, 누가 좋아하는 것을 만들 것인가", "url": "/posts/DayStone-191022/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-10-22 01:35:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠인터넷 여행유튜브 &amp;gt; 유튜브 댓글 &amp;gt; 네이버 블로그 &amp;gt; 유튜브https://youtu.be/XgA2-Rc3-TMSE-3c7afa25-4b91-4c07-b7ff-4fab8159b57eNauts의 음악 이야기 : 네이버 블로그게임음악, 애니메이션 음악, CF등 각종 배경음악을 작곡, 편곡, 프로듀싱하는 Nauts입니다. 여기서는 여러분이 미처 몰랐던 음악에 대한 이야기, 음악에 대한 팁을 나름대로의 경험에 비추어 풀어보는 자리입니다. 많이들 들러 주세요! daum90002@daum.net twitter.com/supernautsblog.naver.comhttps://blog.naver.com/supernauts테일즈위버를 회상하며 (1) Second Run100시간 쿠폰의 위엄… 앞으로 이 카테고리에는 제가 경험했던, 혹은 제가 알고 있는 우리나라 게임음악의…blog.naver.comhttps://blog.naver.com/supernauts/130149633130프로젝트 회상하기 - 테일즈위버 10주년(1)테일즈위버를 바라보면서 10년이 이렇게도 빠를 줄은 몰랐습니다. 제 나이도, 추억도 정말 빠르게 저 멀리…blog.naver.comhttps://blog.naver.com/supernauts/130177271739프로젝트 회상하기 - 테일즈위버 10주년(2)자, 지난 시간에 이은 테일즈위버 10주년 기념 OST 작업 회고록 2탄입니다. 오늘 거론될 곡들은 나름 이…blog.naver.comhttps://blog.naver.com/supernauts/130178119501테일즈위버 10th Anniversary Collection - YouTube《 테일즈위버 10th Anniversary Collection. 10년의 그 기억 속으로 다시 눈을 감다. 》 10년의 추억을 풀어놓았다. 한국 게임 음악사에 한 획을 그었던 테일즈위버가 그동안 많은 사랑을 받았던 10곡을 엄선하여 10주년 기념 앨범을 발매한다. 이번에 발매된 …www.youtube.comhttps://www.youtube.com/playlist?list=PLrgkfqG7JAcP38Z1LQSZJ8U4ITExEJ_JrNauts / 남구만 님의 블로그 프로필 사진이 웹툰 ‘와라! 편의점’ 그림체인 이유뇌피셜Nauts님께서 ‘와라! 편의점’ 애니메이션의 OP/ED 그리고 게임 OST를 만드셨는데,이 때 인연이 생기셔서 ‘와라! 편의점’ 작가님께서 그려주시지 않았을까?​게임은 아이러브커피같아서 재밌게 했던 기억이 나고, 애니메이션은 봤었었는데, 아쉽게도 OP/ED 은 기억에 없다.게임 테일즈위버의 OST, First Run / Second Run / Reminisence에 숨겨진 이야기오피셜‘First Run’의 곡명은 Nauts 님께서 입사하시고 처음 만드신 곡이라 ‘처음 만들었으니 너는 이런 이름이 어울려…’‘Second Run’의 곡명은 ‘First Run이 낮 음악이니 밤 음악이라면 이 정도 이름으로 만족해라…’라는 다소 허무한 접근으로 지어졌다고 한다.( 게임 ‘테일즈위버’에서는 같은 공간에 낮 음악과 밤 음악이 따로 있었다. )​‘First Run’는 입사 초기 당시 음향에 대한 지식이 부족했기 때문에, 만드는데 20일 정도가 걸렸다고 한다.‘Second Run’ 은 피아노 음색이 이쁘지 않아서 ESTi / 박진배 님의 도움을 받아 좋은 음색으로 추출하고,다른 트랙과 합치고, 대강(?) 믹싱해 2시간 만에 만들었다고 한다.​이 곡이 썩 마음에 들지 않으셨던 Nauts 님께서는, 2003년 발매한 OST CD에 이 곡을 넣지 않으셨는데,당시 유저들에게도 ‘Seconde Run’ 은 꽤나 인기가 있었기 때문에‘왜 Second Run을 안 넣었냐!’, ‘OST 한 번 더 팔아먹으려는 상술이다!’ 같은 가벼운 비난을 들었다고 한다.​‘Second Run’의 인기를 전혀 이해하지 못하신 Nauts 님께서는,‘이렇게 만들어도 진짜 사람들이 좋아하나?’ 하는 생각을 가지고 테일즈위버에서의 마지막 OST를 작업했는데,그 곡이 바로 ‘Reminisence’였다.​‘Reminisence’ 역시 인기가 오르는 것을 보고, 많이 혼란스러웠다고 한다.​더 자세한 내용은 중간에 달아둔 Nauts 님의 블로그 글에서 볼 수 있다.하나생각어제 글을 쓰다가 깜빡 자고 말았다.무엇을 더 쓰려고 했는지 자세히 기억나지 않는다.​하지만 분명한 건, 전에 쓴 글에서도 말했듯 게임에서 음악은 정말 중요한 역할을 한다고 생각한다.​게임 속 추억을 가장 잘 보관할 수 있는, 가장 잘 기억하게 할 수 있는 매체그것이 게임의 음악이라고 생각한다.​또한​굳이 특정한 게임을 해보지 않은 사람들도, 그 게임에 소중한 기억이 있는 사람도 함께 공감할 수 있는 매체그것도 게임의 음악이라고 생각한다.​적어도 나의 생각은 그렇다.언제나 그렇듯, 생각을 글로 말로 표현하는 것은 나에게 너무나 어렵다.​그냥 좋다.둘생각무언가를 만들어 내는 것, 창조는 정말 힘든 일이라고 생각한다.경제적으로 그리고 정신적으로 많은 비용을 필요로 하는 것 같다.​위 Nauts 님의 이야기처럼내가 최고라고 생각했던 것이 남에게는 그렇지 않을 수 있고,오히려 내가 별로라고 생각했던 것이 남에게는 그렇지 않을 수 있다.​‘나’ 가 좋아하는 창조를 할 것인가‘남’ 이 좋아하는 창조를 할 것인가​‘나’ 가 좋아하는 것은 무엇인지‘남’ 이 좋아하는 것은 무엇인지​‘나’ 에게 더 가치있는 일은 무엇일까​어렵다.셋생각세상에는 고마운 사람들이 많다.나중에 내가 게임을 만들게 된다면, 그런 고마운 분들이 해줬으면 좋겠다.그리고 이런 생각을 하는, 나를 좋아해주는 사람들도 있었으면 좋겠다." }, { "title": "🌱 레전드 오브 룬테라 베타테스터", "url": "/posts/DayStone-191017/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-10-17 07:57:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠ 레전드 ‘레전드 오브 룬테라를 할 수 있어, 무척 기쁘다’ 의 줄임말 ​언젠가 라이엇의 한 부분이 되고 싶다​너무 좋아 라이엇​" }, { "title": "🌱 생일", "url": "/posts/DayStone-191012/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-10-12 03:04:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠02:59SW 빌더스 챌린지 마지막 준비하다가..올해 처음받은 생일 축하 메시지​남한테 눈치주기도, 부담주기도 싫어서 괜히 주변에 생일 절대 안알려주는데이런 AI놈에게 받는 거라면 맘편히 인사받을 수 있겠다.​그냥 올리고 싶었다.사실 나도 누군가 알아줬으면 했나보다." }, { "title": "🌱 안드로이드 버전 이름", "url": "/posts/DayStone-190905-1/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-09-05 21:25:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠09:18​버전 이름이 디저트란 걸 처음 알았을 때는, 설정에서 안드로이드 버전을 광클하고 젤리빈 게임을 했을 때.. 추억​‘직관적이지 않아서’ 같은 이유로 숫자로 바뀐 것이 어찌 보면 당연할 수 있지만,그래도 저는 개성 넘치는 디저트 버전 이름이 더 끌리네요.​구글, 앞으로 안드로이드 OS에 디저트 이름 안쓴다[디지털데일리 백지영기자] 구글이 안드로이드 운영체제(OS)에 붙이던디저트 이름을 더 이상 쓰지 않는다. 대신 숫자를 붙일 예정이다. 조만간 출시될 안드로이드 OS의 이름은 ‘안드로이드 10’이 된다.22일(미국 현지시간) 구글www.ddaily.co.krhttp://www.ddaily.co.kr/news/article/?no=184951안드로이드(운영체제)/버전 상위 문서: 안드로이드(운영체제) 안드로이드 버전 일람 [ 펼치기 · 접기 ] 1 . 개요 2 . 정식 공개 이전 2.1 . 버전 0.5 2.2 . 버전 0.9 베타 3 . 버전 1.0 4 . 버전 1.1: 프티 푸르 (Petit Four) 5 . 버전 1.5: 컵케이크 (Cupcake) 6 . 버전 1.6: 도넛 (Donut) 7 . 버전 2.0/2.1: 에클레어 (Eclair) 8 . 버전 2.2: 프로요 (Froyo) 9 . 이후 버전 1. 개요 [편집] 구글 의 스마트폰 / 태블릿 컴퓨터 용 운영체제 안드로이드 의 역대 …namu.wiki​https://namu.wiki/w/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C(%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C)/%EB%B2%84%EC%A0%84" }, { "title": "🌱 빨대는 몇 개의 구멍이 있을까", "url": "/posts/DayStone-190905-0/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-09-05 21:11:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠09:11빨때는 몇 개의 구멍을 가지고 있을까요?‘당연히 2개 아니야?’ 하다가 생각을 하는 순간, 미지의 세계로..​한 번 고민해 보셔요.저는 잘 모르겠습니다. 한 개인 것 같기도 하고..​https://mindyourdecisions.com/blog/2018/02/19/how-many-holes-does-a-straw-have-the-correct-answer-explained-mathematically/How Many Holes Does A Straw Have? The Correct Answer Explained Mathematically – Mind Your DecisionsHow Many Holes Does A Straw Have? The Correct Answer Explained Mathematically Posted February 19, 2018 By Presh Talwalkar. Read about me , or email me . How many holes does a straw have? This question has generated a lot of debate online. Recently BuzzFeed made a video that already has over 450,000 …mindyourdecisions.comhttps://youtu.be/W0tYRVQvKbM" }, { "title": "🌱 0824", "url": "/posts/DayStone-190824/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-08-24 08:30:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠07:43​지난 여름방학동안 학교 도서관이 리모델링 됐습니다.오랜만에 도서관에 가보니, 전에 지네와 거미들이 나올것같은 분위기는 어디가고, 북카페같은 깔끔한 분위기로 바꼈습니다.새로운 책들도 많이 들어왔습니다.​어제 언어와 매체 시간에는 도서관에서 책을 읽는 시간을 가졌습니다.저는 방학 전부터 읽고 있던 ‘이것이 C#이다’ 를 마저 읽으려 했지만, 뒷부분이 너무나 어려웠기 때문에 대신 읽을 다른 책을 찾아봤습니다.그렇게 웃기는 코딩이지 뭐야 라는 책을 읽었습니다.그냥 읽기도 뭐해서 노트에 정리하면서 읽었습니다.40분동안 19쪽 읽었습니다.http://book.naver.com/bookdb/book_detail.php?bid=14371281(&amp;amp;)”” - 제 생각입니다.​산업혁명 (Industrtial Revolution)​1차 산업혁명 (18세기) : 영국에서 시작, 증기기관 발명, 기계화 주 산업이 농업, 수공업에서 제조업으로 바뀝니다.​2차 산업혁명 (19세기 후반 ~ 20세기 초) : 유렵과 미국에 퍼짐, 전기 에너지 사용, 대량화 석유같은 자원과 천연원료의 사용으로 연장, 기계, 컴퓨터 분야가 발전하고, 자동화 공장이 생겨납니다. 동시에 자원고갈과 환경오염이라는 문제가 발생합니다. ​3차 산업혁명 (20세기 중후반 ~21세기 초) : 재생 에너지과 인터넷 통신 기술의 결합 2차 산업혁명에서 발생한 문제를 해결하기위해 재생 에너지가 사용되기 시작합니다. 2차 산업혁명에서 발전한 연장, 기계, 컴퓨터 분야를 기반으로 인터넷 통신 기술이 발전합니다. 통신과 금융 등의 서비스업이 발전합니다. ​4차 산업혁명 (~) : 제조업과 정보의 융합 Industry 4.0 3차 산업혁명에서 발전한 디지털, 바이오 산업과 물리학 등 여러분야의 융합된 기술들이 경제 체재와 사회 구조를 급격히 변화시키는 혁명. 초 연결성 (Hyper-Connected)과 초 지식화 (Hyper-Intelligent), 두 특성을 가집니다. ​초 연결성 (Hyper-Connected) 서로 다른 기기들이 통신을 통해 연결된 상태를 말합니다. Ex) 컴퓨터와 스마트폰, 드론, 로봇 등의 연결, Iot (Internet of Things), Clould ​초 지식화 (Hyper-Intelligent) 인간의 기본적인 사고에서 더 나아가, 더 많은 정보를 체계화/보유, 따라서 더 빠른 정보 처리 능력을 가지는 지식 전혀 새로운 개념들을 바탕으로, 세계의 강력한 것, 새로운 것들을 습득할 수 있는 지식. Ex) 인공지능 (AI, Artifical Intelligence), 빅-데이터​인공지능 (AI, Artifical Intelligence) 인간의 학습, 추론, 지각, 자연어 이해 등의 능력을 딥 러닝(Deep Learning)등의 기술로 컴퓨터 프로그램으로 실현화하는 기술, 혹은 실현화 한 것 Ex) 알파고 (Alpha-Go) : 바둑 경기를 통해 사람들이 인공지능에 관심 가지게 함. (&amp;amp;) 어쩌면 게임을 활용하는 방법 ​딥 러닝 (Deep Learning) 과거에는 컴퓨터를 가르치고, 그것을 컴퓨터가 학습하고, 새로운 것을 예측 딥러닝은 인간의 가르침 없이, 스스로 학습하고, 새로운 것을 예측 (&amp;amp;) 솔직히 잘 이해 안됐습니다. ​농업 점차 농민이 아닌 IT 업체가 농장 운영을 시작할 것 (&amp;amp;) 어쩌면 이제 밥먹으면서 “이 더운 여름날에 농부분들이 피땀흘리시면서.. “ 같은 말을 안 듣는 시대가 올 수도 있겠습니다. ​빅 데이터 (Big Data) 디지털 환경에서 발생한 1. 방대한 규모, 2. 짧은 생성주기, 3. 다양한 종류(수치뿐만 아니라 영상, 이미지, 문자 등) 의 데이터 이런 데이터를 바탕으로 사람의 행동을 예측, 더 나아가위치정보와 SNS로 사람의 생각/의견 예측 세계적 컨설팅 기관 메킨지 (Mckinsey)”그 정의는 주관적이며, 앞으로도 계속 변할 것.” ​모두 컴퓨터를 이해한것 &amp;gt;4차 산업혁명을 이끄는 그 중심에는 컴퓨터가 있음HW뿐만 아니라 컴퓨터를 움직이게하는 SW의 이해가 중요함​ 컴퓨터 HW 프로세서 : SW 처리 메모리 : SW 저아 SW&amp;gt; 시스템 SW Ex) MS의 Window, Linux 응용 SW 785695251_preview_12019 09 05 그렇게 아무일도 없었다." }, { "title": "🌱 0819", "url": "/posts/DayStone-190819/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-08-19 17:32:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠05:441566161213264이것은 유튜브 앱에서 확인할 수 있는 나의 영상 시청 시간 통계다.적다고 말할 수 없는 이 통계에 대하여 핑계를 좀 대자면, 컴퓨터 하거나 잘 때, 유튜브로 음악을 꼭 듣기 때문에 전부 영상을 보는 시간은 아니다.​아무튼 오늘은 유튜브를 돌아다니다 우연히 ‘Bad boy’ 라는 노래의 커버 곡을 듣게 되었다.​원곡이 뭔가 해서 찾아봤더니, 최근 사건이 많았던 빅뱅의 노래였다.개인적으로 커버 곡과 마찬가지로 원곡 역시 듣기 좋은 노래였다.​이런 이야기를 한 이유는 이 노래를 듣고 생각난 것이 있었기 때문이다.개인적으로 오래전부터 답을 찾지 못한‘나쁜 사람의 창작물 역시 좋아해서는 안되는 건가?’ 하는 생각이다.​https://youtu.be/RRKJiM9Njr8사실 오늘 들었던 ‘Bad Boy’ 말고, 옛날에 이런 생각을 가지게 해줬던 노래가 또 있다.‘My Chemical Romance’ 라는 그룹의 ‘Welcome To The Black Parade’ 라는 노래다.​물론 이 그룹과 이 노래 자체 때문에 그런 생각을 가지게 된 것은 아니다.​https://youtu.be/MtLsKwZtgyo내가 그런 생각을 하게 만든 것은 바로 이 커버 곡과 이를 부른 ‘Austin Jones’ 라는 사람이다.‘Bad Boy’ 같이, ‘Welcome To The Black Parde’ 라는 원곡도 이 커버 곡을 먼저 보고 알게 되었다.​처음 영상을 봤을 때, 하이라이트가 인상 깊어서 가끔 기억날때 찾아보고는 했다.어느 날 댓글을 보고 알게 된 바로는 이 사람이 소녀팬들에게 성적 영상을 찍어달라 요구했다고 한다.​위 영상 댓글 보면 ‘노래는 좋은데 가수가 나쁘다’, ‘재능이 아깝다’ 와 비슷한 반응이 대부분이다.(원본 영상은 채널이 정지되어 없고, 다른 사람들의 채널에서 재업로드된 영상이다.)​어떤 사람들은 ‘사람과 죄는 미워해도, 창작물 혹은 재능은 미워하지 말자’ 하고어떤 사람들은 ‘사람과 죄를 미워하듯, 창작물 혹은 재능 역시 미워해야 한다’ 라고 한다.​최근 일본 불매운동과도 관련이 있는 생각인 것 같다.​아무튼,어렵다. 아직도 답을 모르겠다." }, { "title": "🌱 VA-11 Hall-A, 게임의 정의, 구분짓기 (작성중)", "url": "/posts/DayStone-190818-1/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-08-18 04:35:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠02:43새벽까지 친구들과 게임하고 유니티를 키려다가, 음악도 들으면서 하려고 유튜브에 들어갔다.그리고 어김없이 섬네일에 이끌려 여러 영상을 보다가, 댓글을 몇 개 달았다.‘그동안 내가 무슨 댓글을 달았더라’갑자기 궁금해져서 찾아봤다.‘몽환적인 노래 모음집’ 이라는 영상에 왜 댓글을 왜 달았나 하고 열어보니그 영상 댓글 중, 몽환적인 느낌의 음악 장르를 소개해 주는 댓글을 나중에 다시 보려고 와드해둔 것이었다.소개해 주는 장르 중 사이버펑크(Cyberpunk) 가 있었는데, 그 장르의 ‘2814’ 라는 곡을 추천하길래 들어보다가유튜브에 Cyberpunk 라 검색하고 다른 음악들도 찾아봤다. (2021기준 이제 Cyberpunk 2077 영상만 나온다)그중 테일즈위버의 Ost ‘Second Run’ 같은 이름을 가진 영상이 있길래내가 알고 있는 Second Run 인가하고 들어보기로 했다.https://youtu.be/H8w_Q57RQJc알고 보니 ‘VA-11 HALL-A - Second Round [Full Album]’ 라는 영상이었다.Second ‘Round’ 인거 방금 쓰면서 알게 되었다.Second ‘Run’ 이 아니었다.처음 도입부부터 인상적이었다.전혀 들어보지 못한 풍의 음악이었다.이게 Cyberpunk 인가?음악만 들으면 손과 눈이 심심하니 댓글을 읽었다.‘When a game opens up with a message telling you to get food before jumping in, you know it’s going to be beyond chill.’이라는 댓글이 있었다.영어를 잘못하기에, Beyond 와 Chill을 검색한 후 열심히 머리를 굴린 결과‘게임이 켜지면서 시작하기 전에 음식을 챙기라는 메시지가 뜰 때, 너는 이제 소름 돋을 거라는 걸 알 거야’로 해석되었다.아님말구아무튼 이건 게임 음악이었다.처음에는 Second ‘Run’ 이니까 테일즈위버를 말하는 건가 싶었지만,네이버에 ‘VA-11 HALL-A’ 를 검색해보니, 테일즈위버가 아닌 다른 게임이 나왔다.‘VA-11 HALL-A’, 발할라라고 부르는 게임이었다.언젠가 네이버 게임 포스트에서 본 적이 있는 게임인 것 같다.무슨 게임인가 궁금해서 영상들을 찾아봤다.image (2)댓글에서 봤던 그 장면이다.이거 찾다가 다른 영상 섬네일에 이끌려서.. 그렇게 4시 34분이 됐다.왜 쓰려고 했는지 기억이 안 나서 끝이_사진을_왜_다운받으셨나요2019 09 29 22:34 수정_ 재밌다.VA11 Hall-A 는 나의 인생 게임이다!음악도 음악이지만 배경설정이나 스토리, 도트 그래픽, 등장인물, 특유의 개방감과 가벼움이 정말 마음에 든다.또, VA11 Hall-A 는 나를 사색하게 만들었다.과연 어디까지를 게임이라 할 수 있을까?나는 게임이 재미있는 이유가 성취감을 느낄 수 있기 때문이라고 생각했다.RPG나 MOBA 장르에서는 상대를 이기거나, 상대보다 강해짐으로써 성취감을 느끼고..퍼즐이나 플랫포머 장르에서는 스테이지를 하나하나 클리어 해나가면서 성취감을 느끼고…하다못해 미연시에서도 현실에 없는 미소녀를 애인으로 만든다는 성취감이 있다.반면 VA11 Hall-A 는 어떤가?생각해보면 그렇다.이 게임은 바텐더 ‘질 스팅레이’ 의 시점에서 손님들의 이야기를 듣는 게임이다.술 섞기 (만들기), 방 꾸미기, 미니게임, 도전과제, 선택지, 멀티 엔딩이 분명 존재하는 게임이지만,결국 이 게임을 하는 목적은 손님들의 이야기를 듣는 것이지, 다른 것이 아니다.Karmotrine.PNG카모트린또, 플레이어는 이 이야기에 큰 영향을 줄 수 없다.유일하게 뭔가 변화를 줄 수 있다면, 술을 만들 때 카모트린을 잔뜩넣어 손님을 취하게 만들 수 있다.하지만 달라지는 건 손님들이 얼굴이 빨개지고, 평소와는 다른 특별한 이야기를 한다는 것 뿐이다.정말 이야기를 듣는 것 말고는 없는 게임이다.이야기를 듣는 다는 것이 과연 성취감이 있는 일인가?고민 상담 같은 일을 하는 사람이라면 그럴 수 있겠지만,여기서는 그냥 손님들의 이야기를 듣기만 한다. 대답도 ‘질 스팅레이’ 가 한다.플레이어는 아무것도 하지 않는다. 가끔 손님에게 술 하나 섞어 만들어주는게 전부다.그저 과자 한 봉지를 먹으며, 마우스 클릭이나 키보드로 대화창을 넘기며 다음 이야기를 본다.과장 좀 보태고, 배경 음악있고, 삽화 몇 개 있는 소설책이라 봐도 무방하다.비주얼 노벨? 인터렉티브 무비?이 게임은 뭐라고 불러야 할까?이걸 게임이라 부를 수 있을까?난 VA11 Hall-A 가 게임이라는 사실을 부정하고 싶은 것이 아니다.분명 VA11 Hall-A 는 게임이다. 나 자신이 그렇게 느낀다.그런데 VA11 Hall-A는 평소 내가 생각하던 게임이라는 개념과 많이 달랐다.그래서 혼란스러웠다.과연 어디까지가 게임일까?흔히 게임을 ‘상호작용 가능한 영화’ 라는 비유를 본적이 있고, 나도 공감하던 말이다.하지만 드래곤볼 극장판에 손오공이 “지구인들아 나에게 힘을!” 하고 원기옥을 모으는 장면에서관객들에게 버튼 하나 쥐어주고 ‘버튼 누를 때 마다 손오공에게 힘을 보탤 수 있습니다” 하고 자막 띄워주면상호작용이 있는 영화니까, 이것도 게임이라고 말할 수 있나?물론 선택지가 없는 일방적인 상호작용이긴하다.그렇다면 관객이 영화 중간중간 투표를 하고 그 결과에 따라 이야기의 흐름이 달라지는 건 어떤가.이건 게임인가 영화인가? (인터렉티브 아트, 인터렉티브 무비)게임의 사전적 의미를 검색해봤다.규칙을 정해놓고 승부를 겨루는 놀이라고 한다.더 혼란이 온다.VA11 Hall-A 에 규칙이 있는가? 그래 뭐.. 개발자들이 만들어 놓은 규칙 속에서 게임을 즐긴다.그럼 VA11 Hall-A 에 승부가 있는가? 나는 없다고 본다.SE-8a9e1c4b-940f-4547-bd1e-a72dda6bb83c물론 나는 우리나라에서 ‘비디오 게임’ 을 ‘게임’ 으로 줄여 부른다는 사실과,본래 게임은 운동, 스포츠 경기에서 쓰이던 단어라는 사실을 안다.그렇기 때문에 더욱 궁금하다.현대 문화에서 비디오 게임은 어떻게 정의되고 받아들여지고 있는가?많은 사람들이 공감하지는 않더라도, 그렇게 생각하지 않더라도최소한, 내가 생각하는 게임의 정의를 정의해보고 싶었다.그렇게 다음과 같은 결론을 내렸다.첫 째, 게임은 규칙이 있다. 때문에 영화 그리고 인터렉티브 아트와 구분된다. 여기서 규칙은 패턴이 아니라 법과 같이 지켜야 하는 것을 말한다. (규칙적이라는 것이 아니라, 규칙이 있다는 것이다) 또한, 여기서 규칙은 문화 매체 예술을 ‘즐기는 데’ 필요한 규칙이다. 예를 들어 영화 ‘어벤져스 엔드게임’ 의 경우, 일정 기간 동안 스포를 하지마라는 캠페인, 경고 혹은 규칙이 있었다. 다만, 이는 개인이 ‘어벤져스 엔드게임’ 이라는 영화를 볼 때, 즐기기 위해 필요한 규칙이 아니었다. 다시말해 영화를 볼 때 필요한 규칙이 아니라, 사회에서의 최소한의 ‘에티켓’, ‘예의’ 였던 것이다. 스포를 해도 사람들에게 온갖 욕은 먹겠지만, 그를 제제하거나 처벌할 수는 없는 것이다. 반면 게임은 플레이하기 위해, 즐기기 위해 반드시 규칙을 필요로 한다. 게임은 규칙없이 돌아가지 않으며, 개발자와 플레이어는 게임을 제공하고 즐기기 위해 그 규칙을 지킨다. 때문에 게임의 규칙을 어기는 행위를 할 경우 제제하거나 처벌할 수 있는 것이다. ( 이 때, 게임의 규칙을 어기는 행위는 플레이어의 관점에서 치트, 해킹, 반칙, 게임 내 오류 악용 등이 있을 수 있고, 개발자의 관점에서 최근 뜨거운 관심사인 게임 내 확률 조작, 플레이에 영향을 주는 오류, 버그 등이 있을 수 있다. ) 인터렉티브 아트와는 왜 구분되는가? 인터렉티브 아트는 즐기는 데 필요한 ‘방법’ 은 있지만, 즐기는 데 지켜야할 ‘규칙’ 은 없다. 여기서 방법과 규칙을 구분짓는 것은 중요하다, 여기서 방법은 말 그대로 즐기는 법을 말하고, 규칙은 즐기는데 해서는 안되거나, 해야만 하는 것들을 말한다. 이 때, 사진을 찍어서는 안된다거나, 작품을 훼손해서는 안된다거나, 하는 것들은 ‘즐기는 데’ 필요한 규칙이 아니다. 여기서 ‘즐기는 데’ 를 잘 해석해야 한다. 나는 지금 인터렉티브 아트에 대해서 말하고 있다. 앞서 말한 것들은 인터렉티브 아트에서만, 인터렉티브 아트이기 때문에 존재하는 규칙이 아니다. 위와 별개로 게임은 규칙은 최소한 두 명 (개발자와 플레이어) 이 작정한다. 한 명이 스스로 작정한 규칙은 포함하지 않는다. (개발자와 플레이어가 같은 경우) 때문에 동시에 게임은 개발자가 최소 한 명 이상의 플레이어에게 제공하려는 목적이 있어야 한다는 정의가 내려진다.둘 째, 취향은 존재하더라도 때문에 인터렉티브 아트와 구분된다. 게임과 인터렉티브 아트는 공통점이 많다. 둘 다 규칙이 존재한다. 게임과 마찬가지로 인터렉티브 아트 역시 즐기기 위한 규칙이 있다. 다만, 인터렉티브 아트의 경우 둘 다 참여로서 완성된다. 인터렉티브 아트에서 자주 언급되는 것이 ‘참여를 통해 완성되는’, ‘참여자가 예술가가 되는’ 이다. 게임은 ‘플레이를 통해 완성되는’, ‘플레이어가 영향을 주는’, 때문에 좋든 싫든 추억을 남겨주는 문화, 매체이다. 이를 통해 상호작용 가능한 매체 혹은 문화, 일명 ‘인터렉티브 아트’ 를 게임이라 말할 수 없게 된다.​ 다만, ‘인터렉티브 무비’ 는 게임이다.중간에 했던 생각들 게임은 재미있다 : 내가 재미없다고 생각하는 게임은 게임이 아닌가?사실 게임은 정의하기가 정말 어려운 것 같다. (열린 결말이지만..)하루에도 수 만개의 게임이 각종 플랫폼에 출시되고 개발되고 있다.그런 게임 ‘들’ 을 하나의 단어로 간단히 정의할 수 있을까?사실 배경 음악도 플레이어가 마음대로 정할 수 있다.배경 음악이 분위기는 만들어내지만, 배경 음악이 달라지는 전환점이나 연출이 없다는 말이다.나는 이 게임을 한 이후, To The Moon (투더문) 이라는 게임도 했다.아침부터 이불에서 질질 짠 기억이 있다.그만큼 깊은 여운과 감동이 있는, 나의 또 다른 인생 게임 이었다.하지만 To The Moon 의 스토리는 좋았을지 몰라도, 개인적으로 게임 플레이는 별로였다.어떻게 진행해야 할 지를 몰라 막힐 때가 분명 있었다. 빨리 다음 이야기를 보고 싶었는데, 짜증났다.게임 속 미니 게임 두더지 잡기의 신기록을 세우려고 몇 십분을 썼다. 순간 To The Moon 을 하고 있다는 사실을 잊었다.재미있어야 할 게임 플레이는, 오히려 게임에 대한 나의 몰입을 한 순간에 깨버렸다. ‘아, 이거 게임이었지 참.’" }, { "title": "🌱 새우", "url": "/posts/DayStone-190818-0/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-08-18 02:41:40 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠내가 다니는 수학 학원은 선생님네 댁에서 공부한다.학원가려고 엘리베이터를 탔다.이 아파트에 사시는 이웃분도 함께 타셨다.이웃분께서는 나를 힐끗 보시더니, 대뜸 자존심 비슷한 단어가 기억이 안 난다고, 그게 뭔지 나에게 물어보셨다.술에 취하신 듯했다. 조금 무서웠다.자존감을 말씀하시는 것 같아 말해드리니 “그래” 하셨다.이번엔 자존감이 영어로 뭔지 물으시기에 모른다고 답했다. 난 영어 공부는 안한다.​이웃분의 층에 도착하고 문이 열렸다.“안녕히 가세요” 인사를 하는데“움츠려있지 마, 국영수가 전부는 아니잖아” 하고 닫히는 엘리베이터 문을 붙잡고 말씀하셨다.학원물 만화에서나 나올법한 대사를 현실에서 들었다.​좀 떨떠름했다.주변 사람들은 나만보면 허리 펴라 어깨 펴라 한다.분명 고치긴 해야하지만 글쌔 이건 딱히 자존심, 자존감 때문이라기보다는집에서 매일 새우 자세로 자고, 의자에 요상한 자세로 앉아서 그런 것이다.​주변 사람들은 내가 공부를 열심히 하는 줄 안다.난 공부 안하는데.괜히 미안해진다.허리 어깨 좀 피고, 공부도 열심히 해야겠다.2019 06 05 17:192019 09 18 02:352019 09 29 22:292019 11 22 01:38" }, { "title": "🌱 똥 피하기", "url": "/posts/DayStone-190802/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-08-02 18:40:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠여담작년부터 올해까지, 똥 피하기 게임 개발을 중단하기까지 의 이야기처음으로 만들어 본 게임, 좀 부르기 뭐한 똥 피하기.작년에 조금 만들고 방치했던 것을, 올해 게임 개발 공부를 다시 시작하면서 프로젝트를 꺼내봤습니다.​프로젝트를 열어보지 않는 동안, 유니티 버전을 이리저리 바꾸다보니 콘솔창에는 빨간 에러들로 가득했습니다.첫 게임을 차마 삭제하기는 싫어서, 한 번 고쳐보기로 마음먹었습니다.에셋들을 없에보고, 유니티 버전도 다시 바꿔보고, 많은 시간을 보낸끝에 결국 에러들을 모조리 없앴습니다.건강해진 프로젝트를 이리저리 만지작거리다보니, 문득 순수한 마음으로 플레이스토어에 올려보고 싶었습니다.작년 초, 구글에 몇 만원주고 플레이스토어 개발자 등록를 미리 해뒀기때문에, 앱 등록은 쉬울것이라 생각했습니다.유튜브에서 하라는 대로, 열심히 따라했습니다. 순조롭게 진행되는 줄 알았습니다.하지만 APK 파일을 업로드하니, 갑자기 빨간 오류가 뜹니다.플레이스토어 정책이 바꿔면서, 기존에는 게임이 32비트만 지원해도 출시가 가능했던 것이,이제는 32/64비트 지원, 그리고 앱 번들까지 준비해야 한답니다.이게 무슨소리인가 싶어 검색해봤습니다.​기존 앱에 App Bundle 적용하기2018 Google IO에서 App Bundle에 대한 세미나를 들었습니다. ‘적용해야지’ 말만 하다가 이번 기회에 적용해보았습니다. App Bundle 이란? App Bundle 이란 APK 와 비슷하지만 모든 코드, 리소스, CPU 아키텍처와..https://eso0609.tistory.com/68eso0609.tistory.com흠.. 완벽히 이해하지는 못했지만, 아무튼 저런거랍니다.KakaoTalk_20190802_172723076KakaoTalk_20190802_172723413KakaoTalk_20190802_172723962유튜브에서 하라는 대로, 힘들게 따라했습니다.(안드로이드 NDK에서 해맴)결국 등록심사 신청에 성공했고, 앱 출시로 이어졌습니다!SE-44778eed-8525-416e-9700-eccff336d00bKakaoTalk_20190802_172724628KakaoTalk_20190802_172722136덕분에 친구들의 영혼가득 리뷰들을 잔뜩 받았습니다..SE-f3e358b0-1abc-4cd8-af42-7c669763fce9SE-3826f3aa-8155-42e6-bdeb-40821dd936cdKakaoTalk_20190802_172721635… 만 얼마지나지않아 이용약관을 넣지않았다고 삭제됬습니다. ㅜㅜㅜㅜ구글 콘솔에 ( 앱 등록하려고 할 때 ) 이용약관을 넣으라고 경고한걸 무시한 탓입니다.게임 출시하시려는 분들은 조심하시기 바랍니다.이번에는 새로 리메이크를 해보려다가, 금방 그만뒀습니다. 똥 피하기는 이제 지겨웠기 때문입니다.너무 ‘처음’ 에 신경썼나봅니다.… 라는 이유로 똥 피하기 게임은 더 이상 만들지 않게되었습니다.사실 놓아준지 좀 지나긴했지만, 게으름피우다 글 쓰는게 늦어졌습니다.아래는 플레이 영상입니다.게임 실행 후 녹화를 했어야하는데, 바탕화면에서 녹화를 시작해서 세로화면으로 녹화됬네요.똥 피하기 6월13일영상 다운 실패똥 피하기 6월 29일​영 좋지않은 퀄리티에 재미까지없는 이 게임을 하고 싶으신 분은 없겠지만, 그래도 한 번 해보고 싶으시다면 아래 링크에서 다운을 받으시면 되겠습니다.겸사겸사 유니티 프로젝트 파일도 넣어봤습니다. 코드는 보지말아주세요. 부끄https://drive.google.com/drive/folders/1S_9qiS2vZR68Ex5cISVR4gLHNbekrzYb?usp=sharingAvoidingDDong 폴더는 위에서 소개하던 게임의 유니티 프로젝트 파일AvoidingDD 폴더는 리메이크 하던 유니티 프로젝트 파일AvoidingDDong.Apk는 그동안 테스트하면서 만들어온 테스트버전AvoidingDD.Apk는 앱 출시를 시도했던 버전( AvoidingDD.Apk가 안되면 테스트 버전으로.. )아이디어학교에서 나름 틈틈히 기획했던 것들SE-586de145-4ea7-453e-91af-488725559048KakaoTalk_20190802_180345284KakaoTalk_20190802_180346814시커먼 노트에 연한 샤프로 끄적끄적한 것을, 화질 안좋은 카메라로 찍으면 나오는 사진.그닥 영양가있는 기획은 아니라 그냥 글로 적겠습니다.요약하면 똥 피하기 게임의 업그레이드 버전, 똥피하기++기존 똥 피하기 게임에 여러가지 컨텐츠? 를 더 집어넣어 봤습니다. 좌우만 움직이는 조작에 점프를 더함 위 뿐만아니라, 좌/우, 아래에서 날라오는 투사체 피해야하는 투사체 말고도 아이템, 골드도 날라옴 다소 혐오스러운? 똥 대신 여러 투사체 및 배경의 스킨을 만들었습니다. EX ) 중세 성 스킨을 꼈다면, 바위 / 화살 / 검 모양의 투사체 EX ) 해적선 스킨을 꼈다면, 폭탄 / 해골 / 보물 모양의 투사체 EX ) 판타지 스킨을 꼈다면, 슬라임 / 파이어볼 / 열매 모양의 투사체 EX ) 할로윈 스킨을 꼈다면, 박쥐 / 호박 / 사탕 모양의 투사체 EX ) 설산 스킨 - 눈덩이, 현대 스킨 - 총알 / 로켓 여러가지 게임 모드 위에서 떨어지는 투사체을 피하는 클래식 모드 위에서 떨어지는 투사체를 피하면서 탑을 오르는 탑 모드 플레이어 주위만 조금 보이는 안개 모드 ( 할로윈 모드 ) 테트리스 블럭이 떨어지는 테트리스 모드 투사체 등 보스의 공격을 피하면서, 바닥에 있는 폭탄을 밟아 보스를 쓰러뜨리는 보스 모드 온라인으로 한 명은 투사체를 던지고, 한 명은 피하는 공/수 모드 서로를 밀치고, 방해하면서 최후의 1인을 가리는 서바이벌 모드 ( 배틀로얄 )" }, { "title": "🌱 청강대 입시 설명회", "url": "/posts/DayStone-190630/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-06-30 23:58:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠오전 03시 00분 - 친구들과 새벽까지 리그 오브 레전드의 전략적 팀 전투(TFT), 일명 롤토체스를 했습니다.15618654154741561835665905청강대 입시 설명회 안내 사진오전 08시 30분 - 늦게 잤음에도 불구하고, 평소 주말에 일어나는 시간보다 조금 일찍 기상했습니다.오늘은 청강대 입시설명회를 보러 가기로 했기 때문입니다.설명회가 2시에 시작하기는 하지만, 여기저기 구경도 할 겸, 여유롭게 2시간 정도 일찍 가려고 했습니다.저는 강릉에 살고 있는데, 강릉에서 서울까지 KTX를 타고 가면 2시간 정도 걸립니다.따라서 9시 30분 출발, 11시 30분 도착하는 KTX를 예매했습니다.20190630_092524_HDR20190630_092545_HDR잡지에는 부산이 써져있지만, 아무튼 강릉역입니다. 저기 기둥에 써져있네요.오전 09시 30분 - 강릉역으로 가서 KTX를 탔습니다.창가 자리는 언제 옳습니다. 바깥 풍경을 보다 보면 생각의 여행을 좀 더 오래 할 수 있기 때문입니다.SE-567be348-b23b-4b25-9435-84d3578c86cb얼굴 대신 귀여운 웰시코기, 메시를 드리겠습니다.오전 11시 10분 - 서울역에 도착했습니다. 이제 1호선을 타고 시청역으로 가야 합니다.딱히 당장 배가 고프지는 않습니다만, 점심을 먹지 않으면 언제나 어머니가 걱정하시기 때문에 뭐라도 먹어야 합니다.평소라면 서울역 롯데리아에서 햄버거를 먹겠지만, 오늘은 왠지 먹기 싫었습니다. (사실 지겨웠습니다.)대신 지하철로 가던 중 달콤한 냄새에 이끌려 맛있어 보이는 소보로빵을 먹기로 했습니다.20190630_114852_HDR20190630_114818_HDR오늘의 식사 / 영감이 떠올라서 찍었지만, 저의 폰 카메라로 감성을 담아내지는 못했습니다. 이런오전 11시 20분 - 시청역에 도착했습니다. 사실 서울역 바로 다음 역이라 5분이 채 안 걸렸습니다.지하철에서 내리자마자 보이던 자판기에서 소보로빵과 함께 먹을 데미소다 하나를 샀습니다.소보로빵과 데미소다, 각각 1000원씩 해서 총 2000원어치의 식사입니다. 설명회 장소로 가면서 먹기 시작했습니다.SE-72999661-99de-4d0c-97cc-9403c8000f88SE-ffdfd048-056d-4ecd-b7b8-5eafca88e80720190630_120000_HDR먹으면서 사진을 찍다 보니 저리 나왔습니다. 아직 학생이지만, 광고주분들께서 연락 주시면 열심히 홍보하겠습니다. 충성오전 11시 40분 - 설명회 장소는 서울시청 서소문별관 후생동 4층입니다.덕수궁과 서울 시립미술관을 지나 마침내 도착! 하나 싶었지만 어디 있는지 몰라 이리저리 헤맸습니다.다시 지도를 보니, 처음에 들어갔다가 학식? 안내문이 잔뜩이어서 잘못 들어갔던 줄 알았던 그 건물이 맞았습니다.20190630_122141_HDR청강대 입시 톡방의 어떤 분께서 음료 반입이 가능하냐고 물어보시길래, 마침 심심했던 제가 알려드리려고 찍었던 사진입니다.오후 12시 20분 - 1층 화장실에서 잠시 일을 보고(TMI), 강당이 있는 4층으로 올라갔습니다.‘교수님들께서 열심히 준비하고 계시지 않을까?’, ‘일찍 온 나를 기억해주시지 않을까?’ 하고 기대했습니다.하지만 그곳엔 적막한 공기만이 가득했습니다. 너무 일찍 왔습니다. 혼자 너무 외로웠습니다.20190630_125454_77320190630_125527_HDR오후 1시 00분 - 다행히 금방 학생분들과 교수님들께서 오셨습니다.강당 입구 주변에 앉아있었는데, 강당 안에 에어컨 틀어져있으니 들어가라 하셨습니다. 추웠습니다.이럴 줄 알고 준비해둔 바람막이 잠바를 꺼내 입고, 남은 시간, 열심히 안내 책자를 읽어봤습니다.20190630_144133_HDR20190630_155334_HDR이 역시 영감이 떠올라 찍은 사진이지만, 카메라로 담아내지 못했습니다. / Q&amp;amp;A를 준비하시는 교수님들의 모습입니다.오후 02시 00분 - 어느새 북적북적해진 강당. 2시 정각이 되고 입시 설명회가 시작되었습니다.애니메이션 - 만화 - 게임 학과 입시 설명회라 그런지, 설명회 전, 애니메이션 / 게임 영상 상영회가 있었습니다.아래는 상영회에 나왔던 작품들입니다. 애니메이션의 경우 세 작품 정도는 찾지 못했습니다.이 외에도 여러 작품들을 청강 애니, 청강 게임 두 유튜브 채널에서 많이 찾아볼 수 있으니 참고하시면 좋겠습니다.https://youtu.be/5NTsCxCdr8Uhttps://youtu.be/AXCsVAkvvpkhttps://youtu.be/73-6LezPlREhttps://youtu.be/Sca-HPU284shttps://youtu.be/x4jWP4fd14whttps://youtu.be/Z8HAjRJZbqohttps://youtu.be/9Y5W9cGCn10https://youtu.be/m2JfJewm3CU??? : 다 아는 영상들이구먼쉬는 시간에 여러 교수님들과 인사하고 싶었지만, 부끄럼이 많아 차마 모두 인사드리지는 못했습니다.저는 이종원 교수님과 아주 잠깐 인사했습니다. 떨리는 순간이었습니다. ㅎㅅㅎSE-0fa33bfd-c029-466b-8eda-b32d5f0db93d입시 설명회와 Q&amp;amp;A 시간을 통해 들은 내용 중 중요하다고 생각했던걸 메모해뒀습니다.‘청강대, 특히 게임과에서 매력적인 사람으로 보이기 위해서는?’ 에 대한 내용을 제 개인적인 생각과 함께 정리하자면 나는 어떤 것을 원하는가? 내가 어떤 게임을 원하는지, 만들고 싶은지 알아야 함 내가 같이 일하고 싶은 사람은? 게임 개발의 경우, 프로그래밍, 기획, 그래픽, QA 등 다양한 분야의 사람들이 함께 일함. 만약 팀원이 우울해하고, 자신감이 없고, 자기만 생각하는 사람이라면 어떻게 될까? &amp;gt; 팀 폭발 따라서 내가 같이 일고 싶은 사람의 모습을 생각하며 자신의 부족한 점을 고쳐나가야 함 반대로 내가 같이 일하고 싶지 않은 사람을 생각해봐도 좋음 “아싸여도 인싸인척해라!” / “화술을 기르고, 밝은 사람이 되라!” 실력보다 기본! 실력이 뛰어난 것도 물론 좋지만, 기본기를 탄탄히 하고, 나의 잠재력을 보여주는 것이 더욱 중요! 실력은 대학교에서 충분히 쌓을 수 있기 때문에, 실력 자체보다는 실력을 쌓을 수 있는 기반을 가지는 것이 좋음 따라서 만약 면접 전형을 응시한다고 가정했을 때, 내가 알고 있는 것과 모르는 것을 뭉뚱그려 가져가기보다는, 내가 자신 있고, 확실히 아는 것을 가져가는 것이 좋음. 매력 / 개성을 가져라! 역시 면접 전형을 응시한다고 가정했을 때, 자기소개서와 학업계획서로 1차 심사를 하게 됨 이때 합격하시는 분들은 당연히 관심이 가고, 어떤 사람인지 궁금하고, 호기심이 가고, 따라서 만나보고 싶은 사람 남이 원하는 내가 아닌, 나 자체의 매력을 뿜어내어 보여줘야 함 ( 청강이 원하는 매력 / 그림체 XX 없음 ) …등이 있겠습니다.(이 밑으로는 폰으로 간단하게 적어뒀습니다. 수정할 예정입니다.)2019 08 18 02:42 귀찮아서 안할래요 히히20190630_170511_HDR20190630_172726_HDR설명회가 끝나고 교수님들을 다시 뵙고 싶었지만 집 가는 KTX를 미리 예매해뒀기 때문에 시간이 애매했습니다.서울역으로 간 후 급한 대로 롯데리아에서 새우버거 세트를 먹었습니다. 언제나 느끼지만 햄버거와 감자튀김, 음료수를 모두먹기에는 제 위가 너무 작습니다. 다음부터는 감자튀김을 빼든지 해야겠습니다.externalFile-1오늘의 사진여담 및 오늘의 생각딱딱하지 않은 청강대의 분위기, 너무 좋습니다! 꼭 갈 것입니다.롤런, LCK, 롤드컵, 열려라 청강과 유나이트, 오늘 참여한 청강이 간다! (상영회 ㅣ 입시설명회) 등 다양한 게임 행사들을 참여하면 언제나 소름이 한두 번 쫙 끼칠 때가 있습니다. 그리고 반드시 게임 프로그래머가 되어서, 게임과 게임 개발 혹은 게임 방송을 취미로 하고 살면서, 평생을 게임과 함께해야겠다는 생각을 언제나 합니다.상영회에서 나왔던 애니메이션을 찾으려고 유튜브 홈페이지에 들어갔을 때, 추천 영상에 엄청 귀여운 영상이 떴습니다. 꼭 한 번 보세요. 픽사에서 만든 Kitbull (킷불) 이라는 작품입니다.https://youtu.be/AZS5cgybKcIKTX나 지하철을 탈 때 언제나 느끼는 것이지만, 남녀노소 상관없이 게임하시는 분들을 쉽게 볼 수 있습니다. 오늘은 특히 집으로 가던 중 앞자리에서 브롤스타즈를 하던 어린 친구를 봤는데, 언젠가 저도 매력적인 멀티 게임을 만들어 제 게임을 하는 친구 앞에서 이거 내가 만들었어! 하고 자랑해보고 싶습니다.글을 좀 더 자주 써야겠습니다. 시간 가는 줄도 모르고 재미있게 쓰고 있습니다.분명 철학적인 생각을 좀 했었는데 다 까먹었습니다. 역시 메모하는 습관은 중요합니다." }, { "title": "⛏️ 단어장", "url": "/posts/Words/", "categories": "⛏️Memo", "tags": "", "date": "2019-06-23 15:37:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠음 하루 이틀하고 안하는 내 인생이 레전드20190808 틀리거나, 수정이 필요하다면 말씀하주세요.20230202 최신화shooting사격fundamental기본적인, 근본적인, 중요한theorem정리, 원리till~할 때까지thesaurus유의어 사전retvalReturn Valueconvention관습, 관행, 협약, 집회merely한낱, 그저, 단지vital필수적인vitamin비타민oddity괴벽, 이상함, 특이함dignose진단하다chap놈, 녀석indicate나타내다, 보여주다, 암시하다practise= practice, 연습, 관행purpose목적, 의도propose제안하다, 제의하다, 제시하다, 청혼하다, 신청하다redundant과잉의, 불필요한, 쓸모없는enforce시행하다, 집행하다, 강요하다, 억지로 시키다, 강력히 주장하다advocate지지하다, 옹호하다design설계하다, 고안하다committee위원회semantic의미의, 의미론적인extent정도, 범위truncate길이를 줄이다, 자르다 (뒤에서)asthetic심미적인, 미학의 (beautiful)evidence증거, 흔적, 근거garner“to collect or gather something” or “to get or receive something wanted or valued.”gather모으다, 모이다intricate뒤얽힌, 복잡한via~을 통하여, ~을 거쳐conundrum난제, 수수께끼, 어려운 문제riddle난제, 수수께끼refer to~을 나타내다, 언급하다whose누구의, 누구의 것involves포함하다, 관련시키다pun(동음이의어를 이용한) 말장난, 익살Ideally이상적으로, 완벽하게; 원칙적으로ethics윤리, 도덕; 윤리학wrestle(일과)씨름하다,싸우다,레슬링하다moral도덕적인conjecture추측, 추측하다, 어림짐작suggests제안하다, 암시하다, 시사하다coined신조어, 만들어진, 위조된prevalent일반적인, 널리 퍼져있는, 유행하는seemingly외견상으로, 겉보기에는, 얼핏보기에, 보아하니frequently자주, 흔히, 빈번하게heady성급한, 무모한, 고집센, 자극적인enigmatic수수께끼 같은, 난해한synonymous동의어의, 같은 뜻의, 아무 밀접한intermediate중간의, 중급의amortize분할 상환하다debt빚abbreviation생략, 약어, 축약형scammer사기꾼legit진심, 존나, 마지, 합법적인philanthropist자선가, 박애주의자deposit위자료, 보증금head out~로 향하다, 출발하다JFCJesus 퍼킹 Christautograph싸인, 자필, 서명, 서명하다AYTAre You Theredespite~에도 불구하고imprecision부정확, 불명확, 애매한 것RTFMRead The 퍼킹 Manualget rid of sth~을 제거하다, 처리하다sthsomethingviolation위반, 위배, 침해, 방해predicate단언하다, 단정하다, 근거를 두다approach학문이나 연구 등에서, 대상에 접근하는 일wear out닳다last indefinitely무기한 지속troubleShooting문제해결straightforward간단한, 솔직한, 쉬운, 직관적인, 똑바로superfluous잉여의, 불필요한biography일대기, 자서전, 악력determine결정하다, 결심하다, 알아내다, 밝히다tocTable Of Contentnarrow좁은reasonable논리적인, 합리적인, 분별력이 있는arbitary임의의, 임의적인, 제멋대로인subsequence연속, 이어서 일어나는 것adjacent인접한, 가까운naive순진한, 순박한, 경험이 없는intuitive직관적인, 직관에 의한calibration보정, 눈금 매기기agile민첩한, 재빠른parse구문을 해석하다, (문장을 문법적으로) 분석하다, (컴퓨터 프로그램의 소스 코드를) 분석하다sudoSuper User Do, Substitude User Do, Shut Up and DOsubstitute대체하다, 대체물, 대리자, 다른assuming주제넘은, 거만한, 건방진pretty much거의 완전히snippet(작은) 정보[소식]; (대화・음악 등의) 한 토막company회사, 친구, 동료, 일행, 동석, 동행suite스위트룸, 특실vendor판매인, 행상인bound경계pragmatic실용적인, 실용주의의be honored영광스럽게 생각하다describe묘사하다, 설명하다, 표현하다, 기술하다, 그리다heuristic경험에 의한, 체험적인, 스스로 발견하게 하는Brute Force주먹구구식, 야만적인 폭력criticism비판, 비평invariant변하지 않는, 한결같은cognitive인지의, 인식의leftover나머지의, 남은, 남은 음식restriction제한, 한정, 규제, 구속latency잠복, 잠재, 잠복기jitter초조하게 하다, 안절부절 못하게 하다immutable변경할 수 없는, 불변의regular정규적인capablecap-able ~할 수 있는, 유능한capabilitycap-ability 능력, 역량conceivecon-cieve 완전히 마음에 품다 -&amp;gt; 상상하다, 생각하다, 생각을 품다, 임신하다deceivede-ceive 나쁘게 취하다 -&amp;gt; 속이다, 기만하다receivere-ceive 다른 사람이 잡아 던진걸 다시 잡다 -&amp;gt; 받다, 받아들이다acceptac-cept 내쪽으로 취하다 -&amp;gt; 받아들이다, 수락하다Contraceptioncontra-cept-tion 받아들이지 않게 함, 취하지 못하게 함 -&amp;gt; 피임interceptinter-cept 가로막다, 가로채다susceptiblesus-cept-ible 민감한 ~에 취약한, 당하기 쉬운, 걸리기 쉬운, 쉽게 영향을 받는완전히 외움 (2)올바르게 답한 단어들이에요! 전체 2개 별표하기obscure모호한commercial광고, 통상의학습하지 않음 (47)아직 이 단어들을 학습하지 않았어요! 47개 선택capacity능력, 수용력, 용량, cap-naive solution순진한 해법within~이내에, ~안에alignment일렬정돈, 지지, 추종paragraph단락, 절, 문단anticipateanti-cip-ate 예측하다 예상하다participatepart(i)-cip-ate 일부를 차지하다, 한 부분을 맡다 -&amp;gt; 참여하다, 참가하다perceiveper-ceive 완전히 감을 잡다 -&amp;gt; 인지하다, 인식하다, realize, appreciate, recognizeexceptex-cept ~을 제외하고, ~이외에는capital수도, 자본, 대문자, 주요한, 사형의cap모자, 뚜껑, 한도/ 막다, 마무리 짓다cape망토, 곶cabbage양배추cheif주된, (계급, 직급상)최고위자인chef요리사, 주방장acheive이루다, 성취하다precede선행하다, 앞서다recede물러나다, 약해지다proceed계속하다, 진행하다process과정, 절차exceed넘다, 초과하다succeed성공하다, 뒤를 잇다, 계승하다, 잇따르다access접근하다predecessor앞서 있었던 것, 선배, 전임자incessant끊임없는, 계속적인Deprecated교체 예정인, 더 이상 사용되지 않는Arc(삼각함수) 역의, 호Integrate통합하다, 완성하다Complex복잡한, 복합체Internal내부의, 내적인argument주장, 논쟁Even심지어~조차도; (비교급 강조) 더욱; 평평한, 공평한, 짝수의Direction방향, 지시, 감독, 직접적invalid유효하지 않은valid유효한, 타당한Operation연산, 조작, 작업, 운영, 수술Enumeratev. 열거하다, 낱낱이 세다, 계산하다(=count, recount, reckon)Actionact-ionSecure안전한, 확보하다, (앞으로도 계속되거나 성공적일 것으로 여겨지는 =safe), 카톡 1대1 채팅이나 Discord 1대1 채팅 같은 곳, 텔레그램 같은 보안 메신저Insecure불안한, 확신이 안 가는, 카톡 오픈 채팅방이나 Discord 서버, Clubhouse 같이 불특정 다수가 참여하고 볼 수 잇는Swan Song마지막 작품, 마지막 공연, 전설로는 백조가 평생 조용하다 단 한 번 죽기 직전에 아름답게 운다고 알려져서Specify(구체적으로) 명시하다, 상세히 밝히다Quote인용하다, 예로 들다i.e.즉, 다시 말해서invoke빌다, 기원하다, 호소하다, (사람들에게 어떤 감정·행동을 촉발하기 위해 누구의 이름을) 부르다retrieve(특히 제자리가 아닌 곳에 이쓴 것을 ) 되찾다, 회수하다 = recover, 구출하다nine-to-five9 am to 5 pm, monday to friday" }, { "title": "🌱 음악", "url": "/posts/DayStone-190614/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-06-14 00:50:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠ 🗿 잡담오늘은 오랜만에 책상 앞에 앉아, 저번 주에 배달온 책을 읽었습니다.책을 읽으면서 음악도 같이 들었는데,그 때 들었던 음악 중 하나가 바로, 위 링크해둔 Reynah 님의 로스트아크 - ‘별빛 등대의 섬’ 피아노 커버였습니다.이 음악을 듣다보니 게임에 있어서 음악에 대해 여러 생각을 하게 되었습니다.그런 생각들을 정리해봤습니다.🗿 음악음악은 감정을 전달하거나 분위기를 만들기에 효과적인 것 같다.물론 시각적인 효과, 연출, 스토리로도 충분히 감정을 전달하거나, 분위기를 만들 수야 있겠지만,음악은 좀 더 추상화된 감정과 분위기를 전달한다고나 할까?지금까지의 경험에 따르면,눈으로 보여지는 무언가들이나, 어떤 이야기를 몰입하여 이해하는 과정에는,전달할 수 있는 감정이나 분위기에 명확한 한계가 존재하는 것 같다.반면 음악은 이걸 ‘이해’ 할 수 있는 게 아니다보니,그 음악이 가진 감정과 분위기에 나름의 상상을 더해, 그 이상의 감정과 분위기를 느끼게 되지 않나 싶다.마치 그림을 그릴 때 선을 털선으로 그리면뇌가 그 선을 뭔가 좀 더 적절한 선으로 상상하게 되는 듯한뭐, 그런 느낌.음악은 잃어버린 줄만 알았던 좌물쇠의 열쇠다.다 본 영화와 애니메이션, 다하고 접은 게임,혹은 정말 여렸을 때 들었던 CM 송이나, 잊고 살았던 옛날 노래마치 내 방 온 구석을 뒤져도 보이지 않던 체크카드가,엄마만 불러오면 나타나는 것 처럼,잠깐 잊고 있던 음악 한 마디가 들리면,머릿속에 ‘그때 그시절’ 의 추억과 감정들이 확 피어오른다.조금의 소름도 있다.단순히 글이나 말로 기억했을 때보다,더 생생하고 아련한 기억과 감동을 주는 건 음악인 것 같다.음악은 밥 같다.밥은 꼭꼭 씹어먹으면 달고 맛있다.근데 보통 밥만 달랑 먹진 않는다.같이 먹을 반찬이 따로 있다.음악도 그렇다.음악 자체로도 독립적으로 즐길 수 있지만,보통 음악만 달랑 듣지는 않는다.들으면서 뭐든간에 일단 한다.공부나 일을 할 때 노동요로 틀어두거나,영화, 애니, 게임을 할 때 나오는 배경음악을 자연스레 듣게되거나,틀어두고 누운 뒤에 하루를 정리하면서 잠에 빠지거나..하다못해 새로 나온 노래를 들을 때도 뮤비랑 같이 본다.이 글의 초고를 쓰기전에도 책을 읽으면서 음악을 듣고 있었다.음악에 온전히 집중하지 않아도,음악은 즐기면서 들을 수 있다.다른 무언가에 몰입하면서 동시에 같이 들을 수 있다.다른 문화매체와 비교했을 때, 이 부분에서 확연한 강점을 보인다.인간은 멀티태스킹이 안된다고 하는데,음악 만큼은 멀티태스킹을 어느정도 허용한다.…. 물론 가사가 있는 ‘노래’는 그게 힘든 것 같다.음악은 짧다.물론 음악에 추억이 있다면 더 좋겠지만, 게임을 전혀 모르거나 추억이 없는 사람들도, 취향만 맞는다면 함께 즐길 수 있습니Audio brandingRepeiseLeitmotiv음악이 기억을 불러오는 이유 해리포터OST에 숨겨진 소름돋는 비밀 - YouTubehttps://www.youtube.com/watch?v=R3rdGwiJP2U20210401 게임보다는 음악에 더 초점을 맞춰 다시 생각해보았습니다.20230203 다시쓰기20230217 이어쓰기음악이 전혀 없는 광고가 주는 효과" }, { "title": "🌱 하고 싶은 공부", "url": "/posts/DayStone-190603-1/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-06-03 23:35:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠당연히 내가 좋아하는 것을 공부하는 것은 재밌다게임을 만들기를 위해 공부하는 프로그래밍이라든지, 그림 그리기라든지, 기획하는 법이라든지그냥 하고 싶은 글쓰기하던지, 작곡 프로그램 다루는 법이라던지학교에서 배우는 과목들은 그다지 흥미가 없지만, 그중 수학은 예외다문제 하나를 풀 때마다 느끼는 쾌감이 있다하지만 학교에서나 공모전에서나, 누군가가 평가하거나 시험을 볼 때에는무슨 과목이든, 어떤 분야든 의욕이 떨어진다혼자 하고 싶은 대로 하면 재밌다" }, { "title": "🌱 알레르기 알레르기", "url": "/posts/DayStone-190603-0/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-06-03 18:43:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠알레르기 알레르기가 있다면알레르기 알레르기가알레르기인 알레르기 알레르기에 반응해서 엄청 가려울 것이다.헐" }, { "title": "🌱 블로그 정리 및 앞으로", "url": "/posts/Naver-Blog/", "categories": "🗿Stone, 🌱DayStone", "tags": "", "date": "2019-05-28 19:46:00 +0900", "snippet": "⚠ 알림 : 전에 쓰던 네이버 블로그 글을 옮겨왔기 때문에, 일부 오류가 있을 수 있습니다. 참고 ⚠전에는 블로그를 게임 개발 일지 적는 곳으로 활용하려 했지만,최근 얼마남지 않은 2019 청강 공모전 준비 및 학교 수행평가,여러 행사 참여들로 바빠지면서 쓸 시간이 적어졌습니다.그냥 핑계입니다. 부지런하지 못한 제 잘못입니다.2019 유나이트 서울 행사에서제가 가고 싶은 대학교 교수님이신 정종필 교수님 (대마왕 교수님) 께서 하신 말씀에서 영감을 얻어,쉬는 동안 틈틈히 제 생각도 정리하고,나름대로의 아이디어들을 공유해볼까 합니다.누가 볼까 싶지만, 한 분이라도 도움이 되면 좋겠습니다." } ]
